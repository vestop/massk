// var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;if("value" in descriptor)descriptor.writable=!0;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}
// var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=!0;return module.exports}
// __webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default']}:function getModuleExports(){return module};__webpack_require__.d(getter,'a',getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=54)})([function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var Dom=function(){function Dom(){_classCallCheck(this,Dom)}
// _createClass(Dom,null,[{key:'getSiblings',value:function getSiblings(element,filter){var includeSelf=arguments.length>2&&arguments[2]!==undefined?arguments[2]:!1;var siblings=[];var currentElement=element;while(currentElement=currentElement.previousElementSibling){if(!filter||currentElement.matches(filter)){siblings.push(currentElement)}}
// if(includeSelf){siblings.push(element)}
// currentElement=element;while(currentElement=currentElement.nextElementSibling){if(!filter||currentElement.matches(filter)){siblings.push(currentElement)}}
// return siblings}},{key:'nodeListToArray',value:function nodeListToArray(nodeList,filter){var items=[];for(var i=0;i!==nodeList.length;++i){if(!filter||nodeList[i].matches(filter)){items.push(nodeList[i])}}
// return items}},{key:'outerWidthWithMargin',value:function outerWidthWithMargin(element){var width=element.offsetWidth,style=getComputedStyle(element);width+=parseInt(style.marginLeft)+parseInt(style.marginRight);return width}}]);return Dom}();__webpack_exports__["default"]=Dom},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Responsive__=__webpack_require__(2);var Carousel=function(){function Carousel(element){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Carousel);this.element=element;this.initialConfig=JSON.parse(element.getAttribute('data-flickity-config'));this.options=options;this._attachListeners();this._build()}
// _createClass(Carousel,[{key:'destroy',value:function destroy(){this.flickityInstance.destroy();if(this.initialConfig.breakpoints!==undefined){document.removeEventListener('breakpoint:changed',this._onBreakpointChangedListener)}}},{key:'selectCell',value:function selectCell(index){var shouldPause=arguments.length>1&&arguments[1]!==undefined?arguments[1]:!1;var shouldAnimate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:!0;if(shouldPause){this.flickityInstance.pausePlayer()}
// this.flickityInstance.select(index,!1,!shouldAnimate)}},{key:'pausePlayer',value:function pausePlayer(){this.flickityInstance.pausePlayer()}},{key:'unpausePlayer',value:function unpausePlayer(){this.flickityInstance.unpausePlayer()}},{key:'resize',value:function resize(){this.flickityInstance.resize()}},{key:'getSelectedIndex',value:function getSelectedIndex(){return this.flickityInstance.selectedIndex}},{key:'getSelectedCell',value:function getSelectedCell(){return this.flickityInstance.selectedCell.element}},{key:'_attachListeners',value:function _attachListeners(){if(this.initialConfig.breakpoints!==undefined){this._onBreakpointChangedListener=this._onBreakpointChanged.bind(this);document.addEventListener('breakpoint:changed',this._onBreakpointChangedListener)}}},{key:'_build',value:function _build(){var _this=this;var config=this._processConfig();this.flickityInstance=new Flickity(this.element,config);this._validateDraggable();this.selectedIndex=this.flickityInstance.selectedIndex;this.flickityInstance.on('resize',this._validateDraggable.bind(this));if(this.options.onSelect){this.flickityInstance.on('select',function(){if(_this.selectedIndex!==_this.flickityInstance.selectedIndex){_this.options.onSelect(_this.flickityInstance.selectedIndex,_this.flickityInstance.selectedCell.element);_this.selectedIndex=_this.flickityInstance.selectedIndex}})}
// if(this.options.onClick){this.flickityInstance.on('staticClick',function(event,pointer,cell,index){_this.options.onClick(cell,index)})}}},{key:'_validateDraggable',value:function _validateDraggable(){var isActive=this.flickityInstance.isActive||!1;if(!isActive||!this.flickityInstance.options.draggable){return}
// if(undefined===this.flickityInstance.selectedElements||this.flickityInstance.selectedElements.length===this.flickityInstance.cells.length){this.flickityInstance.unbindDrag()}else{this.flickityInstance.bindDrag()}}},{key:'_processConfig',value:function _processConfig(){var config=Object.assign({},this.initialConfig);delete config.breakpoints;if(this.initialConfig.breakpoints===undefined){return config}
// var breakpoints=this.initialConfig.breakpoints;breakpoints.forEach(function(breakpoint){if(__WEBPACK_IMPORTED_MODULE_0__helper_Responsive__["default"].matchesBreakpoint(breakpoint['matches'])){config=Object.assign(config,breakpoint['settings'])}});return config}},{key:'_onBreakpointChanged',value:function _onBreakpointChanged(){this.flickityInstance.destroy();this._build()}}]);return Carousel}();__webpack_exports__["default"]=Carousel},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var Responsive=function(){function Responsive(){var _this2=this;_classCallCheck(this,Responsive);this.currentBreakpoint=Responsive.getCurrentBreakpoint();window.addEventListener('resize',function(){var newBreakpoint=Responsive.getCurrentBreakpoint();if(_this2.currentBreakpoint===newBreakpoint){return}
// document.dispatchEvent(new CustomEvent('breakpoint:changed',{detail:{previousBreakpoint:_this2.currentBreakpoint,currentBreakpoint:newBreakpoint}}));_this2.currentBreakpoint=newBreakpoint})}
// _createClass(Responsive,null,[{key:'matchesBreakpoint',value:function matchesBreakpoint(breakpoint){switch(breakpoint){case 'phone':return window.matchMedia('screen and (max-width: 640px)').matches;case 'tablet':return window.matchMedia('screen and (min-width: 641px) and (max-width: 1007px)').matches;case 'tablet-and-up':return window.matchMedia('screen and (min-width: 641px)').matches;case 'pocket':return window.matchMedia('screen and (max-width: 1007px)').matches;case 'lap':return window.matchMedia('screen and (min-width: 1008px) and (max-width: 1279px)').matches;case 'lap-and-up':return window.matchMedia('screen and (min-width: 1008px)').matches;case 'desk':return window.matchMedia('screen and (min-width: 1280px)').matches;case 'widescreen':return window.matchMedia('screen and (min-width: 1600px)').matches}}},{key:'getCurrentBreakpoint',value:function getCurrentBreakpoint(){if(window.matchMedia('screen and (max-width: 640px)').matches){return'phone'}
// if(window.matchMedia('screen and (min-width: 641px) and (max-width: 1007px)').matches){return'tablet'}
// if(window.matchMedia('screen and (min-width: 1008px) and (max-width: 1279px)').matches){return'lap'}
// if(window.matchMedia('screen and (min-width: 1280px)').matches){return'desk'}}}]);return Responsive}();__webpack_exports__["default"]=Responsive},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var Accessibility=function(){function Accessibility(){_classCallCheck(this,Accessibility)}
// _createClass(Accessibility,null,[{key:'trapFocus',value:function trapFocus(container,namespace){this.listeners=this.listeners||{};var elementToFocus=container.querySelector('[autofocus]')||container;container.setAttribute('tabindex','-1');elementToFocus.focus();this.listeners[namespace]=function(event){if(container!==event.target&&!container.contains(event.target)){container.focus()}};document.addEventListener('focusin',this.listeners[namespace])}},{key:'removeTrapFocus',value:function removeTrapFocus(container,namespace){if(container){container.removeAttribute('tabindex')}
// document.removeEventListener('focusin',this.listeners[namespace])}},{key:'clearTrapFocus',value:function clearTrapFocus(){for(var key in this.listeners){if(this.listeners.hasOwnProperty(key)){document.removeEventListener('focusin',this.listeners[key])}}
// this.listeners={}}}]);return Accessibility}();__webpack_exports__["default"]=Accessibility},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var ProductItemColorSwatch=function(){function ProductItemColorSwatch(element){_classCallCheck(this,ProductItemColorSwatch);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.delegateElement.on('change','.ColorSwatch__Radio',this._colorChanged.bind(this));$('.ColorHolder .ColorSwatch').each(function(){let col=$(this).attr('data-background-image');$(this).css('background-image','url('+col+')')})}
// _createClass(ProductItemColorSwatch,[{key:'_colorChanged',value:function _colorChanged(event,target){var productItem=target.closest('.ProductItem'),variantUrl=target.getAttribute('data-variant-url');productItem.querySelector('.ProductItem__ImageWrapper').setAttribute('href',variantUrl);productItem.querySelector('.ProductItem__Title > a').setAttribute('href',variantUrl);var originalImageElement=productItem.querySelector('.ProductItem__Image:not(.ProductItem__Image--alternate)');if(target.hasAttribute('data-image-url')&&target.getAttribute('data-image-id')!==originalImageElement.getAttribute('data-image-id')){var newImageElement=document.createElement('img');newImageElement.className='ProductItem__Image Image--fadeIn Image--lazyLoad';newImageElement.setAttribute('data-image-id',target.getAttribute('data-image-id'));newImageElement.setAttribute('data-src',target.getAttribute('data-image-url'));newImageElement.setAttribute('data-widths',target.getAttribute('data-image-widths'));newImageElement.setAttribute('data-sizes','auto');originalImageElement.parentNode.style.paddingBottom=100.0/target.getAttribute('data-image-aspect-ratio')+'%';originalImageElement.parentNode.style.setProperty('--aspect-ratio',target.getAttribute('data-image-aspect-ratio'));originalImageElement.parentNode.replaceChild(newImageElement,originalImageElement)}}}]);return ProductItemColorSwatch}();__webpack_exports__["default"]=ProductItemColorSwatch},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__Dom__=__webpack_require__(0);var Currency=function(){function Currency(){_classCallCheck(this,Currency)}
// _createClass(Currency,null,[{key:'formatMoney',value:function formatMoney(cents,format){if(typeof cents==='string'){cents=cents.replace('.','')}
// var placeholderRegex=/\{\{\s*(\w+)\s*\}\}/,formatString=format||'${{amount}}';function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value}
// function formatWithDelimiters(number,precision,thousands,decimal){precision=defaultTo(precision,2);thousands=defaultTo(thousands,',');decimal=defaultTo(decimal,'.');if(isNaN(number)||number==null){return 0}
// number=(number/100.0).toFixed(precision);var parts=number.split('.'),dollarsAmount=parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,'$1'+thousands),centsAmount=parts[1]?decimal+parts[1]:'';return dollarsAmount+centsAmount}
// var value='';switch(formatString.match(placeholderRegex)[1]){case 'amount':value=formatWithDelimiters(cents,2);break;case 'amount_no_decimals':value=formatWithDelimiters(cents,0);break;case 'amount_with_space_separator':value=formatWithDelimiters(cents,2,' ','.');break;case 'amount_no_decimals_with_comma_separator':value=formatWithDelimiters(cents,0,',','.');break;case 'amount_no_decimals_with_space_separator':value=formatWithDelimiters(cents,0,' ');break;case 'amount_with_comma_separator':value=formatWithDelimiters(cents,2,'.',',');break}
// return formatString.replace(placeholderRegex,value).replace('.00','')}},{key:'convertAll',value:function convertAll(selector){var _this3=this;var moneyFormats={"USD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} USD"},"EUR":{"money_format":"&euro;{{amount}}","money_with_currency_format":"&euro;{{amount}} EUR"},"GBP":{"money_format":"&pound;{{amount}}","money_with_currency_format":"&pound;{{amount}} GBP"},"CAD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} CAD"},"ALL":{"money_format":"Lek {{amount}}","money_with_currency_format":"Lek {{amount}} ALL"},"DZD":{"money_format":"DA {{amount}}","money_with_currency_format":"DA {{amount}} DZD"},"AOA":{"money_format":"Kz{{amount}}","money_with_currency_format":"Kz{{amount}} AOA"},"ARS":{"money_format":"${{amount_with_comma_separator}}","money_with_currency_format":"${{amount_with_comma_separator}} ARS"},"AMD":{"money_format":"{{amount}} AMD","money_with_currency_format":"{{amount}} AMD"},"AWG":{"money_format":"Afl{{amount}}","money_with_currency_format":"Afl{{amount}} AWG"},"AUD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} AUD"},"BBD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} Bds"},"AZN":{"money_format":"m.{{amount}}","money_with_currency_format":"m.{{amount}} AZN"},"BDT":{"money_format":"Tk {{amount}}","money_with_currency_format":"Tk {{amount}} BDT"},"BSD":{"money_format":"BS${{amount}}","money_with_currency_format":"BS${{amount}} BSD"},"BHD":{"money_format":"{{amount}}0 BD","money_with_currency_format":"{{amount}}0 BHD"},"BYR":{"money_format":"Br {{amount}}","money_with_currency_format":"Br {{amount}} BYR"},"BZD":{"money_format":"BZ${{amount}}","money_with_currency_format":"BZ${{amount}} BZD"},"BTN":{"money_format":"Nu {{amount}}","money_with_currency_format":"Nu {{amount}} BTN"},"BAM":{"money_format":"KM {{amount_with_comma_separator}}","money_with_currency_format":"KM {{amount_with_comma_separator}} BAM"},"BRL":{"money_format":"R$ {{amount_with_comma_separator}}","money_with_currency_format":"R$ {{amount_with_comma_separator}} BRL"},"BOB":{"money_format":"Bs{{amount_with_comma_separator}}","money_with_currency_format":"Bs{{amount_with_comma_separator}} BOB"},"BWP":{"money_format":"P{{amount}}","money_with_currency_format":"P{{amount}} BWP"},"BND":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} BND"},"BGN":{"money_format":"{{amount}} Ð»Ð²","money_with_currency_format":"{{amount}} Ð»Ð² BGN"},"MMK":{"money_format":"K{{amount}}","money_with_currency_format":"K{{amount}} MMK"},"KHR":{"money_format":"KHR{{amount}}","money_with_currency_format":"KHR{{amount}}"},"KYD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} KYD"},"XAF":{"money_format":"FCFA{{amount}}","money_with_currency_format":"FCFA{{amount}} XAF"},"CLP":{"money_format":"${{amount_no_decimals}}","money_with_currency_format":"${{amount_no_decimals}} CLP"},"CNY":{"money_format":"&#165;{{amount}}","money_with_currency_format":"&#165;{{amount}} CNY"},"COP":{"money_format":"${{amount_with_comma_separator}}","money_with_currency_format":"${{amount_with_comma_separator}} COP"},"CRC":{"money_format":"&#8353; {{amount_with_comma_separator}}","money_with_currency_format":"&#8353; {{amount_with_comma_separator}} CRC"},"HRK":{"money_format":"{{amount_with_comma_separator}} kn","money_with_currency_format":"{{amount_with_comma_separator}} kn HRK"},"CZK":{"money_format":"{{amount_with_comma_separator}} K&#269;","money_with_currency_format":"{{amount_with_comma_separator}} K&#269;"},"DKK":{"money_format":"{{amount_with_comma_separator}}","money_with_currency_format":"kr.{{amount_with_comma_separator}}"},"DOP":{"money_format":"RD$ {{amount}}","money_with_currency_format":"RD$ {{amount}}"},"XCD":{"money_format":"${{amount}}","money_with_currency_format":"EC${{amount}}"},"EGP":{"money_format":"LE {{amount}}","money_with_currency_format":"LE {{amount}} EGP"},"ETB":{"money_format":"Br{{amount}}","money_with_currency_format":"Br{{amount}} ETB"},"XPF":{"money_format":"{{amount_no_decimals_with_comma_separator}} XPF","money_with_currency_format":"{{amount_no_decimals_with_comma_separator}} XPF"},"FJD":{"money_format":"${{amount}}","money_with_currency_format":"FJ${{amount}}"},"GMD":{"money_format":"D {{amount}}","money_with_currency_format":"D {{amount}} GMD"},"GHS":{"money_format":"GH&#8373;{{amount}}","money_with_currency_format":"GH&#8373;{{amount}}"},"GTQ":{"money_format":"Q{{amount}}","money_with_currency_format":"{{amount}} GTQ"},"GYD":{"money_format":"G${{amount}}","money_with_currency_format":"${{amount}} GYD"},"GEL":{"money_format":"{{amount}} GEL","money_with_currency_format":"{{amount}} GEL"},"HNL":{"money_format":"L {{amount}}","money_with_currency_format":"L {{amount}} HNL"},"HKD":{"money_format":"${{amount}}","money_with_currency_format":"HK${{amount}}"},"HUF":{"money_format":"{{amount_no_decimals_with_comma_separator}}","money_with_currency_format":"{{amount_no_decimals_with_comma_separator}} Ft"},"ISK":{"money_format":"{{amount_no_decimals}} kr","money_with_currency_format":"{{amount_no_decimals}} kr ISK"},"INR":{"money_format":"Rs. {{amount}}","money_with_currency_format":"Rs. {{amount}}"},"IDR":{"money_format":"{{amount_with_comma_separator}}","money_with_currency_format":"Rp {{amount_with_comma_separator}}"},"ILS":{"money_format":"{{amount}} NIS","money_with_currency_format":"{{amount}} NIS"},"JMD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} JMD"},"JPY":{"money_format":"&#165;{{amount_no_decimals}}","money_with_currency_format":"&#165;{{amount_no_decimals}} JPY"},"JEP":{"money_format":"&pound;{{amount}}","money_with_currency_format":"&pound;{{amount}} JEP"},"JOD":{"money_format":"{{amount}}0 JD","money_with_currency_format":"{{amount}}0 JOD"},"KZT":{"money_format":"{{amount}} KZT","money_with_currency_format":"{{amount}} KZT"},"KES":{"money_format":"KSh{{amount}}","money_with_currency_format":"KSh{{amount}}"},"KWD":{"money_format":"{{amount}}0 KD","money_with_currency_format":"{{amount}}0 KWD"},"KGS":{"money_format":"Ð»Ð²{{amount}}","money_with_currency_format":"Ð»Ð²{{amount}}"},"LVL":{"money_format":"Ls {{amount}}","money_with_currency_format":"Ls {{amount}} LVL"},"LBP":{"money_format":"L&pound;{{amount}}","money_with_currency_format":"L&pound;{{amount}} LBP"},"LTL":{"money_format":"{{amount}} Lt","money_with_currency_format":"{{amount}} Lt"},"MGA":{"money_format":"Ar {{amount}}","money_with_currency_format":"Ar {{amount}} MGA"},"MKD":{"money_format":"Ð´ÐµÐ½ {{amount}}","money_with_currency_format":"Ð´ÐµÐ½ {{amount}} MKD"},"MOP":{"money_format":"MOP${{amount}}","money_with_currency_format":"MOP${{amount}}"},"MVR":{"money_format":"Rf{{amount}}","money_with_currency_format":"Rf{{amount}} MRf"},"MXN":{"money_format":"$ {{amount}}","money_with_currency_format":"$ {{amount}} MXN"},"MYR":{"money_format":"RM{{amount}} MYR","money_with_currency_format":"RM{{amount}} MYR"},"MUR":{"money_format":"Rs {{amount}}","money_with_currency_format":"Rs {{amount}} MUR"},"MDL":{"money_format":"{{amount}} MDL","money_with_currency_format":"{{amount}} MDL"},"MAD":{"money_format":"{{amount}} dh","money_with_currency_format":"Dh {{amount}} MAD"},"MNT":{"money_format":"{{amount_no_decimals}} &#8366","money_with_currency_format":"{{amount_no_decimals}} MNT"},"MZN":{"money_format":"{{amount}} Mt","money_with_currency_format":"Mt {{amount}} MZN"},"NAD":{"money_format":"N${{amount}}","money_with_currency_format":"N${{amount}} NAD"},"NPR":{"money_format":"Rs{{amount}}","money_with_currency_format":"Rs{{amount}} NPR"},"ANG":{"money_format":"&fnof;{{amount}}","money_with_currency_format":"{{amount}} NA&fnof;"},"NZD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} NZD"},"NIO":{"money_format":"C${{amount}}","money_with_currency_format":"C${{amount}} NIO"},"NGN":{"money_format":"&#8358;{{amount}}","money_with_currency_format":"&#8358;{{amount}} NGN"},"NOK":{"money_format":"kr {{amount_with_comma_separator}}","money_with_currency_format":"kr {{amount_with_comma_separator}} NOK"},"OMR":{"money_format":"{{amount_with_comma_separator}} OMR","money_with_currency_format":"{{amount_with_comma_separator}} OMR"},"PKR":{"money_format":"Rs.{{amount}}","money_with_currency_format":"Rs.{{amount}} PKR"},"PGK":{"money_format":"K {{amount}}","money_with_currency_format":"K {{amount}} PGK"},"PYG":{"money_format":"Gs. {{amount_no_decimals_with_comma_separator}}","money_with_currency_format":"Gs. {{amount_no_decimals_with_comma_separator}} PYG"},"PEN":{"money_format":"S/. {{amount}}","money_with_currency_format":"S/. {{amount}} PEN"},"PHP":{"money_format":"&#8369;{{amount}}","money_with_currency_format":"&#8369;{{amount}} PHP"},"PLN":{"money_format":"{{amount_with_comma_separator}} zl","money_with_currency_format":"{{amount_with_comma_separator}} zl PLN"},"QAR":{"money_format":"QAR {{amount_with_comma_separator}}","money_with_currency_format":"QAR {{amount_with_comma_separator}}"},"RON":{"money_format":"{{amount_with_comma_separator}} lei","money_with_currency_format":"{{amount_with_comma_separator}} lei RON"},"RUB":{"money_format":"&#1088;&#1091;&#1073;{{amount_with_comma_separator}}","money_with_currency_format":"&#1088;&#1091;&#1073;{{amount_with_comma_separator}} RUB"},"RWF":{"money_format":"{{amount_no_decimals}} RF","money_with_currency_format":"{{amount_no_decimals}} RWF"},"WST":{"money_format":"WS$ {{amount}}","money_with_currency_format":"WS$ {{amount}} WST"},"SAR":{"money_format":"{{amount}} SR","money_with_currency_format":"{{amount}} SAR"},"STD":{"money_format":"Db {{amount}}","money_with_currency_format":"Db {{amount}} STD"},"RSD":{"money_format":"{{amount}} RSD","money_with_currency_format":"{{amount}} RSD"},"SCR":{"money_format":"Rs {{amount}}","money_with_currency_format":"Rs {{amount}} SCR"},"SGD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} SGD"},"SYP":{"money_format":"S&pound;{{amount}}","money_with_currency_format":"S&pound;{{amount}} SYP"},"ZAR":{"money_format":"R {{amount}}","money_with_currency_format":"R {{amount}} ZAR"},"KRW":{"money_format":"&#8361;{{amount_no_decimals}}","money_with_currency_format":"&#8361;{{amount_no_decimals}} KRW"},"LKR":{"money_format":"Rs {{amount}}","money_with_currency_format":"Rs {{amount}} LKR"},"SEK":{"money_format":"{{amount_no_decimals}} kr","money_with_currency_format":"{{amount_no_decimals}} kr SEK"},"CHF":{"money_format":"{{amount}} CHF","money_with_currency_format":"{{amount}} CHF"},"TWD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} TWD"},"THB":{"money_format":"{{amount}} &#xe3f;","money_with_currency_format":"{{amount}} &#xe3f; THB"},"TZS":{"money_format":"{{amount}} TZS","money_with_currency_format":"{{amount}} TZS"},"TTD":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}} TTD"},"TND":{"money_format":"{{amount}}","money_with_currency_format":"{{amount}} DT"},"TRY":{"money_format":"{{amount}}TL","money_with_currency_format":"{{amount}}TL"},"UGX":{"money_format":"Ush {{amount_no_decimals}}","money_with_currency_format":"Ush {{amount_no_decimals}} UGX"},"UAH":{"money_format":"â‚´{{amount}}","money_with_currency_format":"â‚´{{amount}} UAH"},"AED":{"money_format":"Dhs. {{amount}}","money_with_currency_format":"Dhs. {{amount}} AED"},"UYU":{"money_format":"${{amount_with_comma_separator}}","money_with_currency_format":"${{amount_with_comma_separator}} UYU"},"VUV":{"money_format":"${{amount}}","money_with_currency_format":"${{amount}}VT"},"VEF":{"money_format":"Bs. {{amount_with_comma_separator}}","money_with_currency_format":"Bs. {{amount_with_comma_separator}} VEF"},"VND":{"money_format":"{{amount_no_decimals_with_comma_separator}}&#8363;","money_with_currency_format":"{{amount_no_decimals_with_comma_separator}} VND"},"XBT":{"money_format":"{{amount_no_decimals}} BTC","money_with_currency_format":"{{amount_no_decimals}} BTC"},"XOF":{"money_format":"CFA{{amount}}","money_with_currency_format":"CFA{{amount}} XOF"},"ZMW":{"money_format":"K{{amount_no_decimals_with_comma_separator}}","money_with_currency_format":"ZMW{{amount_no_decimals_with_comma_separator}}"}};var baseCurrency=window.theme.shopCurrency,newCurrency=document.querySelector('.CurrencySelector__Select').value;__WEBPACK_IMPORTED_MODULE_0__Dom__["default"].nodeListToArray((selector||document).querySelectorAll('[data-money-convertible]')).forEach(function(item){if(!item.hasAttribute('data-currency-'+baseCurrency)){item.setAttribute('data-currency-'+baseCurrency,item.innerHTML)}
// if(item.getAttribute('data-currency')===newCurrency){return}
// var baseAmount=item.getAttribute('data-currency-'+baseCurrency);if(item.hasAttribute('data-currency-'+newCurrency)){item.innerHTML=item.getAttribute('data-currency-'+newCurrency)}else{var newFormat=moneyFormats[newCurrency][window.theme.currencyConversionMoneyFormat]||'{{amount}}';if(window.theme.moneyFormat.indexOf('with_comma_separator')!==-1){baseAmount=baseAmount.replace(/[,.]/g,function(match){return match===','?'.':','})}
// var cents=window.Currency.convert(parseFloat(baseAmount.replace(/^[^0-9]+|[^0-9.]/g,'',''),10)*100,baseCurrency,newCurrency);if(window.theme.currencyConversionRoundAmounts){cents=Math.round(cents/100)*100}
// var newFormattedAmount=_this3.formatMoney(cents,newFormat);item.innerHTML=newFormattedAmount;item.setAttribute('data-currency-'+newCurrency,newFormattedAmount)}
// item.setAttribute('data-currency',newCurrency)});localStorage.setItem('currency',newCurrency)}}]);return Currency}();__webpack_exports__["default"]=Currency},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__Accessibility__=__webpack_require__(3);__webpack_require__.d(__webpack_exports__,"AccessibilityHelper",function(){return __WEBPACK_IMPORTED_MODULE_0__Accessibility__["default"]});var __WEBPACK_IMPORTED_MODULE_1__Animation__=__webpack_require__(7);__webpack_require__.d(__webpack_exports__,"AnimationHelper",function(){return __WEBPACK_IMPORTED_MODULE_1__Animation__["default"]});var __WEBPACK_IMPORTED_MODULE_2__Currency__=__webpack_require__(5);__webpack_require__.d(__webpack_exports__,"CurrencyHelper",function(){return __WEBPACK_IMPORTED_MODULE_2__Currency__["default"]});var __WEBPACK_IMPORTED_MODULE_3__Dom__=__webpack_require__(0);__webpack_require__.d(__webpack_exports__,"DomHelper",function(){return __WEBPACK_IMPORTED_MODULE_3__Dom__["default"]});var __WEBPACK_IMPORTED_MODULE_4__Image__=__webpack_require__(10);__webpack_require__.d(__webpack_exports__,"ImageHelper",function(){return __WEBPACK_IMPORTED_MODULE_4__Image__["default"]});var __WEBPACK_IMPORTED_MODULE_5__Responsive__=__webpack_require__(2);__webpack_require__.d(__webpack_exports__,"ResponsiveHelper",function(){return __WEBPACK_IMPORTED_MODULE_5__Responsive__["default"]})},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var Animation=function(){function Animation(){_classCallCheck(this,Animation)}
// _createClass(Animation,null,[{key:'slideUp',value:function slideUp(element){element.style.height=element.scrollHeight+'px';element.offsetHeight;element.style.height=0}},{key:'slideDown',value:function slideDown(element){if(element.style.height==='auto'){return}
// element.style.height=element.firstElementChild.scrollHeight+'px';var transitionEnded=function transitionEnded(event){if(event.propertyName==='height'){element.style.height='auto';element.removeEventListener('transitionend',transitionEnded)}};element.addEventListener('transitionend',transitionEnded)}}]);return Animation}();__webpack_exports__["default"]=Animation},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__=__webpack_require__(3);var __WEBPACK_IMPORTED_MODULE_1__helper__=__webpack_require__(6);var Drawer=function(){function Drawer(element){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Drawer);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.delegateBody=new domDelegate.Delegate(document.body);this.onOpen=options.onOpen||function(){};this.onClose=options.onClose||function(){};this.isOpen=!1;this.direction=this.element.classList.contains('Drawer--fromLeft')?'fromLeft':'fromRight';this.pageOverlayElement=document.querySelector('.PageOverlay');this._attachListeners()}
// _createClass(Drawer,[{key:'destroy',value:function destroy(){this.delegateBody.off('click','[data-action="open-drawer"][data-drawer-id="'+this.element.id+'"]');this.delegateBody.off('click','[data-action="close-drawer"][data-drawer-id="'+this.element.id+'"]');window.removeEventListener('resize',this._calculateMaxHeightListener)}},{key:'toggle',value:function toggle(){this.isOpen?this.close():this.open()}},{key:'open',value:function open(event){if(this.isOpen){return}
// if(event){event.preventDefault()}
// this.element.setAttribute('aria-hidden','false');this._calculateMaxHeight();document.documentElement.classList.add('no-scroll');disableBodyScroll(!0,'[data-scrollable]');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element,'drawer');this.pageOverlayElement.classList.add('is-visible');this.pageOverlayElement.addEventListener('click',this._closeListener);this.isOpen=!0;this.onOpen();return!1}},{key:'close',value:function close(event){if(!this.isOpen){return}
// if(event){event.preventDefault()}
// this.element.setAttribute('aria-hidden','true');document.documentElement.classList.remove('no-scroll');disableBodyScroll(!1,'[data-scrollable]');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element,'drawer');this.pageOverlayElement.classList.remove('is-visible');this.pageOverlayElement.removeEventListener('click',this._closeListener);this.isOpen=!1;this.onClose()}},{key:'_attachListeners',value:function _attachListeners(){this._openListener=this.open.bind(this);this._closeListener=this.close.bind(this);this._calculateMaxHeightListener=this._calculateMaxHeight.bind(this);this.delegateBody.on('click','[data-action="open-drawer"][data-drawer-id="'+this.element.id+'"]',this._openListener);this.delegateBody.on('click','[data-action="close-drawer"][data-drawer-id="'+this.element.id+'"]',this._closeListener);this.element.addEventListener('keyup',this._handleKeyboard.bind(this));window.addEventListener('resize',this._calculateMaxHeightListener)}},{key:'_calculateMaxHeight',value:function _calculateMaxHeight(){this.element.style.maxHeight=window.innerHeight+'px'}},{key:'_handleKeyboard',value:function _handleKeyboard(event){if(this.isOpen&&event.keyCode===27){this.close()}}}]);return Drawer}();__webpack_exports__["default"]=Drawer},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__=__webpack_require__(3);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__=__webpack_require__(2);var Popover=function(){function Popover(element,options){_classCallCheck(this,Popover);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.activator=options.activator||document.querySelector('[aria-controls="'+element.getAttribute('id')+'"]');this.preferredPosition=options.preferredPosition||'bottom';this.isOpen=!1;this.onValueChanged=options.onValueChanged||function(){};this.onOpen=options.onOpen||function(){};this.onClose=options.onClose||function(){};this.showOverlay=options.showOverlay===undefined?!0:options.showOverlay;this.pageOverlayElement=document.querySelector('.PageOverlay');this._attachListeners()}
// _createClass(Popover,[{key:'destroy',value:function destroy(){this.element.removeEventListener('keyup',this._handleKeyboardListener);this.delegateElement.off('click');this.activator.removeEventListener('click',this._toggleListener)}},{key:'toggle',value:function toggle(){this.isOpen?this.close():this.open()}},{key:'open',value:function open(){if(this.isOpen||this.activator.getAttribute('aria-controls')!==this.element.id){return}
// this.element.setAttribute('aria-hidden','false');this.activator.setAttribute('aria-expanded','true');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element,'popover');disableBodyScroll(!0,'[data-scrollable]');document.documentElement.classList.add('no-scroll');if(__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')){document.body.addEventListener('click',this._clickOutsideListener);this._position()}else{this.element.removeAttribute('style');if(this.showOverlay){this.pageOverlayElement.classList.add('is-visible');this.pageOverlayElement.addEventListener('click',this._closeListener)}}
// this.onOpen(this);this.isOpen=!0}},{key:'close',value:function close(){if(!this.isOpen){return}
// this.element.setAttribute('aria-hidden','true');this.activator.setAttribute('aria-expanded','false');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element,'popover');disableBodyScroll(!1,'[data-scrollable]');document.documentElement.classList.remove('no-scroll');if(__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')){document.body.removeEventListener('click',this._clickOutsideListener)}else if(this.showOverlay){this.pageOverlayElement.classList.remove('is-visible');this.pageOverlayElement.removeEventListener('click',this._closeListener)}
// this.onClose(this);this.isOpen=!1}},{key:'_attachListeners',value:function _attachListeners(){this._handleKeyboardListener=this._handleKeyboard.bind(this);this._clickOutsideListener=this._clickOutside.bind(this);this._closeListener=this.close.bind(this);this._toggleListener=this.toggle.bind(this);this.element.addEventListener('keyup',this._handleKeyboardListener);this.activator.addEventListener('click',this._toggleListener);this.delegateElement.on('click','[data-action="close-popover"]',this.close.bind(this));this.delegateElement.on('click','[data-action="select-value"]',this._valueChanged.bind(this))}},{key:'_valueChanged',value:function _valueChanged(event){__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(event.target,'.is-selected').forEach(function(item){return item.classList.remove('is-selected')});event.target.classList.add('is-selected');this.onValueChanged(event.target.getAttribute('data-value'),event.target,this.activator);this.close()}},{key:'_clickOutside',value:function _clickOutside(event){if(!event.target.closest('.Popover')&&!event.target.closest('.Modal')&&event.target!==this.activator&&!this.activator.contains(event.target)){this.close()}}},{key:'_position',value:function _position(){var _this4=this;var topPosition=0,rightPosition=0,position='',alignment='',threshold=20;fastdom.measure(function(){var windowHeight=window.innerHeight,activatorBoundingRect=_this4.activator.getBoundingClientRect(),halfHeight=windowHeight/2;if(_this4.preferredPosition==='bottom'){alignment='right';if(_this4.element.clientHeight<=windowHeight-(activatorBoundingRect.bottom+threshold)||windowHeight-activatorBoundingRect.bottom>=halfHeight){position='bottom'}else{position='top'}}else if(_this4.preferredPosition==='top'){alignment='right';if(_this4.element.clientHeight<=activatorBoundingRect.top-threshold||activatorBoundingRect.top>=halfHeight){position='top'}else{position='bottom'}}else{position='left';var halfElementHeight=_this4.element.clientHeight/2;if(activatorBoundingRect.top>=halfElementHeight&&windowHeight-activatorBoundingRect.bottom>=halfElementHeight){alignment='center'}else if(windowHeight-activatorBoundingRect.bottom>=halfElementHeight){alignment='bottom'}else{alignment='top'}}
// if(position==='top'){topPosition=activatorBoundingRect.top-_this4.element.clientHeight-threshold;rightPosition=window.innerWidth-activatorBoundingRect.right}else if(position==='bottom'){topPosition=activatorBoundingRect.bottom+threshold;rightPosition=window.innerWidth-activatorBoundingRect.right}else{rightPosition=window.innerWidth-activatorBoundingRect.left+threshold;if(alignment==='center'){topPosition=activatorBoundingRect.top-_this4.element.clientHeight/2+_this4.activator.clientHeight/2}else if(alignment==='top'){topPosition=activatorBoundingRect.bottom-_this4.element.clientHeight}else{topPosition=activatorBoundingRect.top}}});fastdom.mutate(function(){['Popover--positionBottom','Popover--positionTop','Popover--positionCenter','Popover--alignTop','Popover--alignCenter','Popover--alignBottom'].map(function(item){return _this4.element.classList.remove(item)});_this4.element.classList.add('Popover--position'+(position.charAt(0).toUpperCase()+position.slice(1)));_this4.element.classList.add('Popover--align'+(alignment.charAt(0).toUpperCase()+alignment.slice(1)));_this4.element.setAttribute('style','top: '+parseInt(topPosition)+'px; right: '+parseInt(rightPosition)+'px;')})}},{key:'_handleKeyboard',value:function _handleKeyboard(event){if(this.isOpen&&event.keyCode===27){this.close()}}}]);return Popover}();__webpack_exports__["default"]=Popover},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var Image=function(){function Image(){_classCallCheck(this,Image)}
// _createClass(Image,null,[{key:'getSizedImageUrl',value:function getSizedImageUrl(src,size){if(size===null){return src}
// if(size==='master'){return src.replace(/http(s)?:/,'')}
// var match=src.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);if(match){var prefix=src.split(match[0]);var suffix=match[0];return(prefix[0]+'_'+size+suffix).replace(/http(s)?:/,'')}else{return null}}},{key:'getSupportedSizes',value:function getSupportedSizes(image,desiredSizes){var supportedSizes=[],imageWidth=image.width;desiredSizes.forEach(function(width){if(imageWidth>=width){supportedSizes.push(width)}});return supportedSizes}}]);return Image}();__webpack_exports__["default"]=Image},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Popover__=__webpack_require__(9);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__components_VariantSelector__=__webpack_require__(16);var __WEBPACK_IMPORTED_MODULE_3__helper_Currency__=__webpack_require__(5);var ProductVariants=function(){function ProductVariants(container,options){var _this5=this;_classCallCheck(this,ProductVariants);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=options;var jsonData=JSON.parse(this.element.querySelector('[data-product-json]').innerHTML);this.productData=jsonData.product;this.variantsInventories=jsonData.inventories||{};this.masterSelector=this.element.querySelector('#product-select-'+this.productData.id);this.productData.variants.forEach(function(variant){if(variant.id===jsonData.selected_variant_id){_this5.currentVariant=variant;_this5.option1=variant.option1;_this5.option2=variant.option2;_this5.option3=variant.option3}});this._attachListeners();this._createSelectors()}
// _createClass(ProductVariants,[{key:'destroy',value:function destroy(){this.delegateElement.off('click');this.formPopovers.forEach(function(popover){return popover.destroy()});this.formVariantSelectors.forEach(function(selector){return selector.destroy()})}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','[data-action="add-to-cart"]',this._addToCart.bind(this));this.delegateElement.on('click','[data-action="decrease-quantity"]',this._decreaseQuantity.bind(this));this.delegateElement.on('click','[data-action="increase-quantity"]',this._increaseQuantity.bind(this));this.delegateElement.on('change','[name="quantity"]',this._validateQuantity.bind(this))}},{key:'_createSelectors',value:function _createSelectors(){var _this6=this;this.formPopovers=[];this.formVariantSelectors=[];__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.OptionSelector')).forEach(function(item){var popover=new __WEBPACK_IMPORTED_MODULE_0__components_Popover__["default"](item,{preferredPosition:'left',onValueChanged:_this6._onOptionChanged.bind(_this6)});_this6.formPopovers.push(popover)});__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.VariantSelector')).forEach(function(item){var variantSelector=new __WEBPACK_IMPORTED_MODULE_2__components_VariantSelector__["default"](item,{onValueChanged:_this6._onOptionChanged.bind(_this6)});_this6.formVariantSelectors.push(variantSelector)})}},{key:'_onVariantChanged',value:function _onVariantChanged(previousVariant,newVariant){this._updateProductPrices(newVariant,previousVariant);this._updateInventory(newVariant,previousVariant);this._updateAddToCartButton(newVariant,previousVariant);if(window.theme.currencyConversionEnabled){__WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].convertAll(this.element)}
// this.element.dispatchEvent(new CustomEvent('variant:changed',{bubbles:!0,detail:{variant:newVariant,previousVariant:previousVariant}}))}},{key:'_updateProductPrices',value:function _updateProductPrices(newVariant,previousVariant){var productMetaPrices=this.element.querySelector('.ProductMeta__PriceList');if(!newVariant){productMetaPrices.style.display='none'}else{if(previousVariant&&previousVariant.price===newVariant.price&&previousVariant.compare_at_price===newVariant.compare_at_price){return}
// productMetaPrices.innerHTML='';if(newVariant.compare_at_price>newVariant.price){productMetaPrices.innerHTML+='<span class="ProductMeta__Price Price Price--highlight Text--subdued u-h4" data-money-convertible>'+__WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price,window.theme.moneyFormat)+'</span>';productMetaPrices.innerHTML+='<span class="ProductMeta__Price Price Price--compareAt Text--subdued u-h4" data-money-convertible>'+__WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.compare_at_price,window.theme.moneyFormat)+'</span>'}else{productMetaPrices.innerHTML+='<span class="ProductMeta__Price Price Text--subdued u-h4" data-money-convertible>'+__WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price,window.theme.moneyFormat)+'</span>'}
// productMetaPrices.style.display=''}}},{key:'_updateInventory',value:function _updateInventory(newVariant){if(!this.options.showInventoryQuantity){return}
// var productFormInventory=this.element.querySelector('.ProductForm__Inventory'),variantInventory=newVariant?this.variantsInventories[newVariant.id]:null;if(!newVariant||null===variantInventory.inventory_management||variantInventory.inventory_quantity<=0||this.options.inventoryQuantityThreshold>0&&variantInventory.inventory_quantity>this.options.inventoryQuantityThreshold){productFormInventory.style.display='none'}else{productFormInventory.textContent=variantInventory.inventory_message;productFormInventory.style.display=''}}},{key:'_updateAddToCartButton',value:function _updateAddToCartButton(newVariant){var addToCartButton=this.element.querySelector('.ProductForm__AddToCart'),shopifyPaymentButton=this.element.querySelector('.shopify-payment-button'),newButton=document.createElement('button');newButton.setAttribute('type','submit');newButton.className='ProductForm__AddToCart Button Button--full';if(!newVariant){newButton.setAttribute('disabled','disabled');newButton.removeAttribute('data-action');newButton.classList.add('Button--secondary');newButton.innerHTML=window.languages.productFormUnavailable}else{if(newVariant.available){newButton.removeAttribute('disabled');newButton.classList.add(this.options.showPaymentButton?'Button--secondary':'Button--primary');newButton.setAttribute('data-action','add-to-cart');newButton.innerHTML='\n          <span>'+window.languages.productFormAddToCart+'</span>\n          <span class="Button__SeparatorDot"></span>\n          <span data-money-convertible>'+__WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price,window.theme.moneyFormat)+'</span>\n        '}else{newButton.setAttribute('disabled','disabled');newButton.classList.add('Button--secondary');newButton.removeAttribute('data-action');newButton.innerHTML=window.languages.productFormSoldOut}}
// if(this.options.showPaymentButton&&shopifyPaymentButton){if(!newVariant||!newVariant.available){shopifyPaymentButton.style.display='none'}else{shopifyPaymentButton.style.display='block'}}
// addToCartButton.parentNode.replaceChild(newButton,addToCartButton)}},{key:'_onOptionChanged',value:function _onOptionChanged(newValue,target,activator){this['option'+target.getAttribute('data-option-position')]=newValue;var selectedValueElement=activator.querySelector('.ProductForm__SelectedValue'),colorSwatchElement=activator.querySelector('.ProductForm__ColorSwatch');selectedValueElement.innerHTML=newValue;if(colorSwatchElement){if(!window.CSS||window.CSS&&window.CSS.supports('background-color: '+target.getAttribute('data-background-color'))){colorSwatchElement.style.backgroundColor=target.getAttribute('data-background-color')}else{colorSwatchElement.style.backgroundColor='transparent'}
// colorSwatchElement.style.backgroundImage='url('+target.getAttribute('data-background-image')+')';if(newValue.toLowerCase()==='white'){colorSwatchElement.classList.add('ProductForm__ColorSwatch--white')}else{colorSwatchElement.classList.remove('ProductForm__ColorSwatch--white')}}
// var previousVariant=this.currentVariant;this.currentVariant=this._getCurrentVariantFromOptions();this._onVariantChanged(previousVariant,this.currentVariant);if(this.currentVariant){if(this.options.enableHistoryState){this._updateHistoryState(this.currentVariant)}
// this.masterSelector.querySelector('[selected]').removeAttribute('selected');this.masterSelector.querySelector('[value="'+this.currentVariant.id+'"]').setAttribute('selected','selected')}}},{key:'_getCurrentVariantFromOptions',value:function _getCurrentVariantFromOptions(){var _this7=this;var found=!1;this.productData.variants.forEach(function(variant){if(variant.option1===_this7.option1&&variant.option2===_this7.option2&&variant.option3===_this7.option3){found=variant}});return found||null}},{key:'_updateHistoryState',value:function _updateHistoryState(variant){if(!history.replaceState){return}
// var newUrl=window.location.protocol+'//'+window.location.host+window.location.pathname+'?variant='+variant.id;window.history.replaceState({path:newUrl},'',newUrl)}},{key:'_addToCart',value:function _addToCart(event){var _this8=this;if(!this.options.useAjaxCart){return}
// event.preventDefault();var addToCartButton=this.element.querySelector('.ProductForm__AddToCart');addToCartButton.setAttribute('disabled','disabled');document.dispatchEvent(new CustomEvent('theme:loading:start'));var formElement=this.element.querySelector('form[action^="/cart/add"]'),formData=new FormData(formElement);function formSerialize(form){var i=void 0,j=void 0,len=void 0,jLen=void 0,formElement=void 0,q=[];function urlencode(str){return encodeURIComponent(str).replace(/!/g,'%21').replace(/'/g,'%27').replace(/\(/g,'%28').replace(/\)/g,'%29').replace(/\*/g,'%2A').replace(/%20/g,'+')}
// function addNameValue(name,value){q.push(urlencode(name)+'='+urlencode(value))}
// if(!form||!form.nodeName||form.nodeName.toLowerCase()!=='form'){throw 'You must supply a form element'}
// for(i=0,len=form.elements.length;i<len;i++){formElement=form.elements[i];if(formElement.name===''||formElement.disabled){continue}
// switch(formElement.nodeName.toLowerCase()){case 'input':switch(formElement.type){case 'text':case 'hidden':case 'password':case 'button':case 'submit':addNameValue(formElement.name,formElement.value);break;case 'checkbox':case 'radio':if(formElement.checked){addNameValue(formElement.name,formElement.value)}
// break;case 'file':break;case 'reset':break}
// break;case 'textarea':addNameValue(formElement.name,formElement.value);break;case 'select':switch(formElement.type){case 'select-one':addNameValue(formElement.name,formElement.value);break;case 'select-multiple':for(j=0,jLen=formElement.options.length;j<jLen;j++){if(formElement.options[j].selected){addNameValue(formElement.name,formElement.options[j].value)}}
// break}
// break;case 'button':switch(formElement.type){case 'reset':case 'submit':case 'button':addNameValue(formElement.name,formElement.value);break}
// break}}
// return q.join('&')}
// var httpRequest=new XMLHttpRequest();httpRequest.open('POST','/cart/add.js',!0);httpRequest.setRequestHeader('Content-Type','application/x-www-form-urlencoded; charset=UTF-8');httpRequest.setRequestHeader('X-Requested-With','XMLHttpRequest');httpRequest.send(formSerialize(formElement));httpRequest.onreadystatechange=function(){if(httpRequest.readyState===XMLHttpRequest.DONE){document.dispatchEvent(new CustomEvent('theme:loading:end'));if(httpRequest.status===200){addToCartButton.removeAttribute('disabled');_this8.element.dispatchEvent(new CustomEvent('product:added',{bubbles:!0,detail:{variant:_this8.currentVariant,quantity:parseInt(formElement.querySelector('[name="quantity"]').value)}}))}else{var errors=JSON.parse(httpRequest.responseText);var errorMessageElement=document.createElement('span');errorMessageElement.className='ProductForm__Error Alert Alert--error';errorMessageElement.innerHTML=errors.description;addToCartButton.removeAttribute('disabled');addToCartButton.insertAdjacentElement('afterend',errorMessageElement);setTimeout(function(){errorMessageElement.remove()},2500)}}};event.preventDefault()}},{key:'_decreaseQuantity',value:function _decreaseQuantity(event,target){target.nextElementSibling.value=Math.max(parseInt(target.nextElementSibling.value)-1,1)}},{key:'_increaseQuantity',value:function _increaseQuantity(event,target){target.previousElementSibling.value=parseInt(target.previousElementSibling.value)+1}},{key:'_validateQuantity',value:function _validateQuantity(event,target){target.value=Math.max(parseInt(target.value)||1,1)}}]);return ProductVariants}();__webpack_exports__["default"]=ProductVariants},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var CountrySelector=function(){function CountrySelector(countrySelect,provinceSelect){_classCallCheck(this,CountrySelector);this.countrySelect=countrySelect;this.provinceSelect=provinceSelect;if(this.countrySelect&&this.provinceSelect){this._attachListeners();this._initSelectors()}}
// _createClass(CountrySelector,[{key:'destroy',value:function destroy(){if(this.countrySelect){this.countrySelect.removeEventListener('change',this._onCountryChangedListener)}}},{key:'_initSelectors',value:function _initSelectors(){var defaultCountry=this.countrySelect.getAttribute('data-default');if(defaultCountry){this.countrySelect.value=defaultCountry}else{this.countrySelect.selectedIndex=0}
// var event=new Event('change',{bubbles:!0});this.countrySelect.dispatchEvent(event);var defaultProvince=this.provinceSelect.getAttribute('data-default');if(defaultProvince){this.provinceSelect.value=defaultProvince}}},{key:'_attachListeners',value:function _attachListeners(){this._onCountryChangedListener=this._onCountryChanged.bind(this);this.countrySelect.addEventListener('change',this._onCountryChangedListener)}},{key:'_onCountryChanged',value:function _onCountryChanged(){var _this9=this;var selectedOption=this.countrySelect.options[this.countrySelect.selectedIndex],provinces=JSON.parse(selectedOption.getAttribute('data-provinces')||'[]');this.provinceSelect.innerHTML='';if(provinces.length===0){this.provinceSelect.parentNode.style.display='none';return}
// provinces.forEach(function(data){_this9.provinceSelect.options.add(new Option(data[1],data[0]))});this.provinceSelect.parentNode.style.display='block'}}]);return CountrySelector}();__webpack_exports__["default"]=CountrySelector},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var OverflowScroller=function(){function OverflowScroller(element){_classCallCheck(this,OverflowScroller);if(!element){return}
// this.element=element;this.lastKnownY=window.scrollY;this.currentTop=0;this.initialTopOffset=parseInt(window.getComputedStyle(this.element).top);this._attachListeners()}
// _createClass(OverflowScroller,[{key:'destroy',value:function destroy(){window.removeEventListener('scroll',this._checkPositionListener)}},{key:'_attachListeners',value:function _attachListeners(){this._checkPositionListener=this._checkPosition.bind(this);window.addEventListener('scroll',this._checkPositionListener)}},{key:'_checkPosition',value:function _checkPosition(){var _this10=this;fastdom.measure(function(){var bounds=_this10.element.getBoundingClientRect(),maxTop=bounds.top+window.scrollY-_this10.element.offsetTop+_this10.initialTopOffset,minTop=_this10.element.clientHeight-window.innerHeight;if(window.scrollY<_this10.lastKnownY){_this10.currentTop-=window.scrollY-_this10.lastKnownY}else{_this10.currentTop+=_this10.lastKnownY-window.scrollY}
// _this10.currentTop=Math.min(Math.max(_this10.currentTop,-minTop),maxTop,_this10.initialTopOffset);_this10.lastKnownY=window.scrollY});fastdom.mutate(function(){_this10.element.style.top=_this10.currentTop+'px'})}}]);return OverflowScroller}();__webpack_exports__["default"]=OverflowScroller},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_1__helper_Image__=__webpack_require__(10);var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__=__webpack_require__(2);var ProductImageZoom=function(){function ProductImageZoom(element,slideshow){_classCallCheck(this,ProductImageZoom);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.delegateRoot=new domDelegate.Delegate(document.body);this.slideshow=slideshow;this._attachListeners()}
// _createClass(ProductImageZoom,[{key:'destroy',value:function destroy(){this.delegateElement.off('click')}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','[data-action="open-product-zoom"]',this._initPhotoSwipe.bind(this));this.delegateElement.on('click','.Product__SlideItem--image',this._initPhotoSwipeFromImageClick.bind(this))}},{key:'_initPhotoSwipe',value:function _initPhotoSwipe(){var images=[];this.slideshow.flickityInstance.cells.forEach(function(item){if(item.element.classList.contains('Product__SlideItem--image')){images.push(item.element.querySelector('img'))}});this._createPhotoSwipeInstance(this._createPhotoSwipeItemsFromImages(images),parseInt(this.slideshow.flickityInstance.selectedElement.getAttribute('data-image-position-ignoring-video')))}},{key:'_initPhotoSwipeFromImageClick',value:function _initPhotoSwipeFromImageClick(event,target){if(__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('pocket')){return}
// var images=[];__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target,null,!0).forEach(function(item){if(item.classList.contains('Product__SlideItem--image')){images.push(item.querySelector('img'))}});this._createPhotoSwipeInstance(this._createPhotoSwipeItemsFromImages(images),parseInt(target.getAttribute('data-image-position-ignoring-video')))}},{key:'_createPhotoSwipeItemsFromImages',value:function _createPhotoSwipeItemsFromImages(images){return images.map(function(image){var maxWidth=parseInt(image.getAttribute('data-max-width')),maxHeight=parseInt(image.getAttribute('data-max-height')),maxDimension=__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('phone')?1200:1800,reduceFactor=1.0;if(maxWidth>=maxHeight){reduceFactor=Math.max(maxWidth/maxDimension,1.0)}else{reduceFactor=Math.max(maxHeight/maxDimension,1.0)}
// var requestedWidth=Math.floor(maxWidth/reduceFactor);var requestedHeight=Math.floor(maxHeight/reduceFactor);return{msrc:image.currentSrc||image.src,w:requestedWidth,h:requestedHeight,initialZoomLevel:0.65,src:__WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSizedImageUrl(image.getAttribute('data-original-src'),requestedWidth+'x'+requestedHeight)}})}},{key:'_createPhotoSwipeInstance',value:function _createPhotoSwipeInstance(items,selectedImageIndex){var _this11=this;var photoswipeContainer=document.querySelector('.pswp');this.photoSwipeInstance=new PhotoSwipe(photoswipeContainer,!1,items,{index:selectedImageIndex,showHideOpacity:!0,showAnimationDuration:500,loop:!1,history:!1,closeOnVerticalDrag:!1,allowPanToNext:!1,pinchToClose:!1,errorMsg:'<p class="pswp__error-msg">'+window.languages.productImageLoadingError+'</p>',scaleMode:'zoom',getDoubleTapZoom:function getDoubleTapZoom(isMouseClick,item){if(isMouseClick){return 1.6}else{return item.initialZoomLevel<0.7?1:1.33}},getThumbBoundsFn:function getThumbBoundsFn(index){var thumbnail=_this11.element.querySelector('.Product__Slideshow .Carousel__Cell:nth-child('+(parseInt(index)+1)+') img'),pageYScroll=window.pageYOffset||document.documentElement.scrollTop,rect=thumbnail.getBoundingClientRect();return{x:rect.left,y:rect.top+pageYScroll,w:rect.width}}});this.photoSwipeInstance.listen('beforeChange',this._onSlideChanged.bind(this));this.photoSwipeInstance.listen('destroy',this._destroyPhotoSwipe.bind(this));this.photoSwipeInstance.listen('doubleTap',this._onDoubleTap.bind(this));this.photoSwipeInstance.listen('initialZoomIn',this._onInitialZoomIn.bind(this));this.photoSwipeInstance.listen('initialZoomOut',this._onInitialZoomOut.bind(this));this.delegateRoot.on('pswpTap','.pswp__scroll-wrap',this._onSingleTap.bind(this));this.delegateRoot.on('pswpTap','.pswp__button--close',this.photoSwipeInstance.close);this.delegateRoot.on('pswpTap','.pswp__button--prev',this.photoSwipeInstance.prev);this.delegateRoot.on('pswpTap','.pswp__button--next',this.photoSwipeInstance.next);this.photoSwipeInstance.init()}},{key:'_onSlideChanged',value:function _onSlideChanged(){if(this.photoSwipeInstance.getCurrentIndex()===0){this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--prev').setAttribute('disabled','disabled')}else{this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--prev').removeAttribute('disabled')}
// if(this.photoSwipeInstance.getCurrentIndex()+1===this.photoSwipeInstance.options.getNumItemsFn()){this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--next').setAttribute('disabled','disabled')}else{this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--next').removeAttribute('disabled')}}},{key:'_onSingleTap',value:function _onSingleTap(event){if(!event.detail||event.detail.pointerType==='mouse'){if(event.target.classList.contains('pswp__img')){this.photoSwipeInstance.toggleDesktopZoom(event.detail.releasePoint)}}else{if(event.target.classList.contains('pswp__button')){return}
// event.target.closest('.pswp').querySelector('.pswp__ui').classList.toggle('pswp__ui--hidden')}}},{key:'_onDoubleTap',value:function _onDoubleTap(point){var initialZoomLevel=this.photoSwipeInstance.currItem.initialZoomLevel;if(this.photoSwipeInstance.getZoomLevel()!==initialZoomLevel){this.photoSwipeInstance.zoomTo(initialZoomLevel,point,333)}else{this.photoSwipeInstance.zoomTo(initialZoomLevel<0.7?1:1.33,point,333)}}},{key:'_onInitialZoomIn',value:function _onInitialZoomIn(){document.querySelector('.pswp__ui').classList.remove('pswp__ui--hidden')}},{key:'_onInitialZoomOut',value:function _onInitialZoomOut(){document.querySelector('.pswp__ui').classList.add('pswp__ui--hidden')}},{key:'_destroyPhotoSwipe',value:function _destroyPhotoSwipe(){this.delegateRoot.off('pswpTap');this.photoSwipeInstance=null}}]);return ProductImageZoom}();__webpack_exports__["default"]=ProductImageZoom},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var ProductReviews=function(){function ProductReviews(container){_classCallCheck(this,ProductReviews);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.delegateElement.on('click','.spr-summary-actions-newreview',this._onNewReviewClicked.bind(this));window.SPRCallbacks={};window.SPRCallbacks.onFormSuccess=this._onFormSuccess.bind(this);window.SPRCallbacks.onReviewsLoad=this._onReviewsLoad.bind(this)}
// _createClass(ProductReviews,[{key:'destroy',value:function destroy(){this.delegateElement.off()}},{key:'_updatePagination',value:function _updatePagination(event,target){SPR.$(target).data('page',parseInt(target.getAttribute('data-page'))+1)}},{key:'_onFormSuccess',value:function _onFormSuccess(){var formSuccess=this.element.querySelector('.spr-form-message-success');window.scrollTo(0,formSuccess.offsetTop-45)}},{key:'_onReviewsLoad',value:function _onReviewsLoad(){var sprSummaryActions=this.element.querySelector('.spr-summary-actions'),previousSprPaginationNext=sprSummaryActions.querySelector('.spr-pagination-next'),sprPaginationNext=this.element.querySelector('.spr-pagination .spr-pagination-next');if(previousSprPaginationNext){previousSprPaginationNext.remove()}
// if(sprPaginationNext){sprSummaryActions.insertBefore(sprPaginationNext,sprSummaryActions.firstChild)}}},{key:'_onNewReviewClicked',value:function _onNewReviewClicked(event,target){target.style.display='none';if(target.previousElementSibling){target.previousElementSibling.style.display='none'}}}]);return ProductReviews}();__webpack_exports__["default"]=ProductReviews},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__=__webpack_require__(3);var __WEBPACK_IMPORTED_MODULE_1__Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__=__webpack_require__(0);var VariantSelector=function(){function VariantSelector(element){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,VariantSelector);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.activator=options.activator||document.querySelector('[aria-controls="'+element.getAttribute('id')+'"]');this.onValueChangedCallback=options.onValueChanged||function(){};this.isOpen=!1;this.pageOverlayElement=document.querySelector('.PageOverlay');this.variantChoiceList=__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.VariantSelector__Choice'));this.variantCarousel=new __WEBPACK_IMPORTED_MODULE_1__Carousel__["default"](this.element.querySelector('.VariantSelector__Carousel'),{onSelect:this._variantChanged.bind(this),onClick:this._variantSelected.bind(this)});this._attachListeners()}
// _createClass(VariantSelector,[{key:'destroy',value:function destroy(){this.element.removeEventListener('keyup',this._handleKeyboardListener);this.delegateElement.off('click');this.activator.removeEventListener('click',this._toggleListener);this.variantCarousel.destroy()}},{key:'toggle',value:function toggle(){this.isOpen?this.close():this.open()}},{key:'open',value:function open(){if(this.isOpen){return}
// this.element.setAttribute('aria-hidden','false');this.activator.setAttribute('aria-expanded','true');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element,'variant-selector');document.documentElement.classList.add('no-scroll');this.element.setAttribute('style','');this.pageOverlayElement.classList.add('is-visible');this.pageOverlayElement.addEventListener('click',this._closeListener);this.isOpen=!0}},{key:'close',value:function close(){if(!this.isOpen){return}
// this.element.setAttribute('aria-hidden','true');this.activator.setAttribute('aria-expanded','false');__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element,'variant-selector');document.documentElement.classList.remove('no-scroll');this.pageOverlayElement.classList.remove('is-visible');this.pageOverlayElement.removeEventListener('click',this._closeListener);this.isOpen=!1}},{key:'_attachListeners',value:function _attachListeners(){this._handleKeyboardListener=this._handleKeyboard.bind(this);this._closeListener=this.close.bind(this);this._toggleListener=this.toggle.bind(this);this.element.addEventListener('keyup',this._handleKeyboardListener);this.activator.addEventListener('click',this._toggleListener);this.delegateElement.on('click','[data-action="select-variant"]',this._onVariantSelect.bind(this))}},{key:'_variantChanged',value:function _variantChanged(selectedIndex){var activeChoice=this.variantChoiceList[selectedIndex];activeChoice.classList.add('is-selected');__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(activeChoice,'.is-selected').forEach(function(item){return item.classList.remove('is-selected')})}},{key:'_variantSelected',value:function _variantSelected(cellElement,cellIndex){if(this.variantCarousel.getSelectedIndex()===cellIndex){this.onValueChangedCallback(cellElement.getAttribute('data-option-value'),cellElement,this.activator);this.close()}else{this.variantCarousel.selectCell(cellIndex)}}},{key:'_onVariantSelect',value:function _onVariantSelect(){var selectedCell=this.variantCarousel.flickityInstance.selectedCell.element;this.onValueChangedCallback(selectedCell.getAttribute('data-option-value'),selectedCell,this.activator);this.close()}},{key:'_handleKeyboard',value:function _handleKeyboard(event){if(this.isOpen&&event.keyCode===27){this.close()}}}]);return VariantSelector}();__webpack_exports__["default"]=VariantSelector},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var ScrollSpy=function(){function ScrollSpy(container,elementsToSpy,observerOptions){var _this12=this;_classCallCheck(this,ScrollSpy);this.container=container;this.targets=[];this.targetIndices={};this.indicesInViewPort=[];this.observer=new IntersectionObserver(this._onIntersectionChange.bind(this),observerOptions);elementsToSpy.forEach(function(elementToSpy,index){_this12.targets.push(elementToSpy);_this12.targetIndices[elementToSpy.id]=index;_this12.observer.observe(elementToSpy)})}
// _createClass(ScrollSpy,[{key:'destroy',value:function destroy(){this.observer.disconnect()}},{key:'_onIntersectionChange',value:function _onIntersectionChange(changes){var oldTargetIndex=this.indicesInViewPort[0]||0;for(var i=changes.length-1;i>=0;i--){this._updateIndicesInViewPort(changes[i],oldTargetIndex)}
// this.indicesInViewPort=this.indicesInViewPort.filter(function(value,index,self){return self.indexOf(value)===index});if(this.indicesInViewPort.length===0||oldTargetIndex===this.indicesInViewPort[0]){return}
// var event=new CustomEvent('scrollspy:target:changed',{detail:{newTarget:this.targets[this.indicesInViewPort[0]],oldTarget:this.targets[oldTargetIndex]}});this.container.dispatchEvent(event)}},{key:'_updateIndicesInViewPort',value:function _updateIndicesInViewPort(change,oldTargetIndex){var index=this.targetIndices[change.target.id];if(change.intersectionRatio===0){var indexInViewPort=this.indicesInViewPort.indexOf(index);if(indexInViewPort!==-1){this.indicesInViewPort.splice(indexInViewPort,1)}}else{if(index<oldTargetIndex){this.indicesInViewPort.unshift(index)}else if(index>this.indicesInViewPort[this.indicesInViewPort.length-1]){this.indicesInViewPort.push(index)}else{this.indicesInViewPort.push(index);this.indicesInViewPort.sort()}}}}]);return ScrollSpy}();__webpack_exports__["default"]=ScrollSpy},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__=__webpack_require__(7);var __WEBPACK_IMPORTED_MODULE_1__helper_Currency__=__webpack_require__(5);var __WEBPACK_IMPORTED_MODULE_2__CountrySelector__=__webpack_require__(12);var ShippingEstimator=function(){function ShippingEstimator(element){_classCallCheck(this,ShippingEstimator);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.countrySelector=new __WEBPACK_IMPORTED_MODULE_2__CountrySelector__["default"](this.element.querySelector('[name="country"]'),this.element.querySelector('[name="province"]'));this._attachListeners()}
// _createClass(ShippingEstimator,[{key:'onUnload',value:function onUnload(){this.delegateElement.off('click');this.countrySelector.destroy()}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','.ShippingEstimator__Submit',this._fetchRates.bind(this))}},{key:'_fetchRates',value:function _fetchRates(){var _this13=this;var country=this.element.querySelector('[name="country"]').value,province=this.element.querySelector('[name="province"]').value,zip=this.element.querySelector('[name="zip"]').value;document.dispatchEvent(new CustomEvent('theme:loading:start'));fetch('/cart/shipping_rates.json?shipping_address[zip]='+zip+'&shipping_address[country]='+country+'&shipping_address[province]='+province,{credentials:'same-origin',method:'GET'}).then(function(response){response.json().then(function(result){document.dispatchEvent(new CustomEvent('theme:loading:end'));var resultsContainer=_this13.element.querySelector('.ShippingEstimator__Results'),errorContainer=_this13.element.querySelector('.ShippingEstimator__Error');if(response.ok){var shippingRates=result.shipping_rates;if(shippingRates.length===0){resultsContainer.innerHTML='<p>'+window.languages.shippingEstimatorNoResults+'</p>'}else{var html='';if(shippingRates.length===1){html+='<p>'+window.languages.shippingEstimatorOneResult+'</p><ul>'}else{html+='<p>'+window.languages.shippingEstimatorMoreResults.replace('{{count}}',shippingRates.length)+'</p><ul>'}
// shippingRates.forEach(function(item){html+='<li>'+item.name+': '+__WEBPACK_IMPORTED_MODULE_1__helper_Currency__["default"].formatMoney(item.price,window.theme.moneyFormat)+'</li>'});html+='</ul>';resultsContainer.firstElementChild.innerHTML=html}
// TweenLite.fromTo(resultsContainer.firstElementChild,0.6,{autoAlpha:0,y:-15},{autoAlpha:1,y:0,delay:0.35});errorContainer.style.display='none';__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(resultsContainer)}else{var errorHtml='';Object.keys(result).forEach(function(key){errorHtml+='<li class="Alert__ErrorItem">'+key+' '+result[key]+'</li>'});errorContainer.innerHTML='<ul class="Alert__ErrorList">'+errorHtml+'</ul>';resultsContainer.style.display='none';errorContainer.style.display='block'}})})}}]);return ShippingEstimator}();__webpack_exports__["default"]=ShippingEstimator},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__=__webpack_require__(7);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__=__webpack_require__(2);var Collapsible=function(){function Collapsible(){_classCallCheck(this,Collapsible);this.domDelegate=new domDelegate.Delegate(document.body);this._attachListeners()}
// _createClass(Collapsible,[{key:'_attachListeners',value:function _attachListeners(){this.domDelegate.on('click','[data-action="toggle-collapsible"]',this._toggleCollapsible.bind(this))}},{key:'_toggleCollapsible',value:function _toggleCollapsible(event,target){var _this14=this;var parentCollapsible=target.closest('.Collapsible');if(parentCollapsible.classList.contains('Collapsible--autoExpand')&&__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('tablet-and-up')){return}
// var isOpen=target.getAttribute('aria-expanded')==='true';if(isOpen){this._close(parentCollapsible,target)}else{this._open(parentCollapsible,target)}
// __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(parentCollapsible).forEach(function(collapsibleToClose){return _this14._close(collapsibleToClose)});event.preventDefault()}},{key:'_open',value:function _open(collapsible){var toggleButton=collapsible.querySelector('.Collapsible__Button'),collapsibleInner=collapsible.querySelector('.Collapsible__Inner');if(!collapsibleInner||toggleButton.getAttribute('aria-expanded')==='true'){return}
// toggleButton.setAttribute('aria-expanded','true');__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(collapsibleInner)}},{key:'_close',value:function _close(collapsible){var toggleButton=collapsible.querySelector('.Collapsible__Button'),collapsibleInner=collapsible.querySelector('.Collapsible__Inner');if(!collapsibleInner||toggleButton.getAttribute('aria-expanded')==='false'){return}
// toggleButton.setAttribute('aria-expanded','false');__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(collapsibleInner)}}]);return Collapsible}();__webpack_exports__["default"]=Collapsible},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var LoadingBar=function(){function LoadingBar(){_classCallCheck(this,LoadingBar);this.element=document.querySelector('.LoadingBar');document.addEventListener('theme:loading:start',this._onLoadingStart.bind(this));document.addEventListener('theme:loading:end',this._onLoadingEnd.bind(this));this.element.addEventListener('transitionend',this._onTransitionEnd.bind(this))}
// _createClass(LoadingBar,[{key:'_onLoadingStart',value:function _onLoadingStart(){this.element.classList.add('is-visible');this.element.style.width='40%'}},{key:'_onLoadingEnd',value:function _onLoadingEnd(){this.element.style.width='100%';this.element.classList.add('is-finished')}},{key:'_onTransitionEnd',value:function _onTransitionEnd(event){if(event.propertyName==='width'&&this.element.classList.contains('is-finished')){this.element.classList.remove('is-visible');this.element.classList.remove('is-finished');this.element.style.width='0'}}}]);return LoadingBar}();__webpack_exports__["default"]=LoadingBar},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__=__webpack_require__(3);var Modal=function(){function Modal(){_classCallCheck(this,Modal);this.domDelegate=new domDelegate.Delegate(document.body);this.activeModal=null;this.wasLocked=!1;this.pageOverlayElement=document.querySelector('.PageOverlay');this._attachListeners();this._checkOpenByHash()}
// _createClass(Modal,[{key:'_attachListeners',value:function _attachListeners(){this._closeListener=this._closeModal.bind(this);this._handleKeyboardListener=this._handleKeyboard.bind(this);this.domDelegate.on('click','[data-action="open-modal"]',this._openModalEvent.bind(this));this.domDelegate.on('click','[data-action="close-modal"]',this._closeModal.bind(this))}},{key:'_openModalEvent',value:function _openModalEvent(event,target){this._openModal(document.getElementById(target.getAttribute('aria-controls')));event.preventDefault();event.stopPropagation()}},{key:'_openModal',value:function _openModal(modal){var _this15=this;if(this.activeModal||!modal){return}
// this.activeModal=modal;this.domDelegate.on('keyup',this._handleKeyboardListener);if(document.documentElement.classList.contains('no-scroll')){this.wasLocked=!0}
// fastdom.mutate(function(){__WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].clearTrapFocus();_this15._onTransitionEndedListener=_this15._onTransitionEnded.bind(_this15);_this15.activeModal.addEventListener('transitionend',_this15._onTransitionEndedListener);_this15.activeModal.setAttribute('aria-hidden','false');document.documentElement.classList.add('no-scroll');if(!_this15.activeModal.classList.contains('Modal--fullScreen')){_this15.pageOverlayElement.classList.add('is-visible');_this15.pageOverlayElement.addEventListener('click',_this15._closeListener)}})}},{key:'_closeModal',value:function _closeModal(){var _this16=this;if(!this.activeModal){return}
// this.activeModal.removeEventListener('keyup',this._handleKeyboardListener);this.domDelegate.off('keyup');fastdom.mutate(function(){if(_this16.activeModal.classList.contains('Modal--videoContent')){_this16._resetVideoListener=_this16._resetVideo.bind(_this16);_this16.activeModal.addEventListener('transitionend',_this16._resetVideoListener)}
// __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(_this16.activeModal,'modal');if(!_this16.activeModal.classList.contains('Modal--fullScreen')){_this16.pageOverlayElement.classList.remove('is-visible');_this16.pageOverlayElement.removeEventListener('click',_this16._closeListener)}
// _this16.activeModal.setAttribute('aria-hidden','true');_this16.activeModal=null;if(!_this16.wasLocked){document.documentElement.classList.remove('no-scroll')}})}},{key:'_onTransitionEnded',value:function _onTransitionEnded(event){if(event.propertyName!=='visibility'){return}
// __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.activeModal,'modal');this.activeModal.removeEventListener('transitionend',this._onTransitionEndedListener)}},{key:'_resetVideo',value:function _resetVideo(event){if(event.propertyName!=='visibility'){return}
// var iframe=event.target.querySelector('iframe');iframe.parentNode.innerHTML='<iframe class="Image--lazyLoad" data-src='+iframe.getAttribute('data-src')+' frameborder="0" allowfullscreen>';event.target.removeEventListener('transitionend',this._resetVideoListener)}},{key:'_checkOpenByHash',value:function _checkOpenByHash(){var hash=window.location.hash,modal=document.getElementById(hash.replace('#',''));if(modal&&modal.classList.contains('Modal')){this._openModal(modal)}}},{key:'_handleKeyboard',value:function _handleKeyboard(event){if(null!==this.activeModal&&event.keyCode===27){this._closeModal()}}}]);return Modal}();__webpack_exports__["default"]=Modal},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var PageTransition=function(){_createClass(PageTransition,null,[{key:'getInstance',value:function getInstance(){if(!this.instance){this.instance=new PageTransition()}
// return this.instance}}]);function PageTransition(){_classCallCheck(this,PageTransition);this.domDelegate=new domDelegate.Delegate(document.body);this.isPageLoaded=window.theme.showPageTransition||document.readyState==='complete'||document.readyState==='loaded'||document.readyState==='interactive';this.pageTransition=document.querySelector('.PageTransition');if(!this.isPageLoaded){document.addEventListener('DOMContentLoaded',this._onPageLoaded.bind(this))}else{this._onPageLoaded()}
// this._attachListeners()}
// _createClass(PageTransition,[{key:'_attachListeners',value:function _attachListeners(){this.domDelegate.on('click','a[href]:not([href^="#"]):not([href^="javascript:"]):not([href^="mailto:"]):not([href^="tel:"]):not([target="_blank"])',this._onPageUnload.bind(this))}},{key:'_onPageLoaded',value:function _onPageLoaded(){this.isPageLoaded=!0;if(window.theme.showPageTransition&&this.pageTransition){new TimelineLite().fromTo(this.pageTransition,0.25,{autoAlpha:1,ease:Linear.easeNone},{autoAlpha:0,ease:Linear.easeNone})}}},{key:'_onPageUnload',value:function _onPageUnload(event,target){if(event.defaultPrevented||event.metaKey||!window.theme.showPageTransition||!this.pageTransition){return}
// event.preventDefault();if(window.theme.showPageTransition&&this.pageTransition){var timeline=new TimelineLite({onComplete:function onComplete(){window.location.href=target.href}});timeline.fromTo(this.pageTransition,0.25,{autoAlpha:0,ease:Linear.easeNone},{autoAlpha:1,ease:Linear.easeNone})}}}]);return PageTransition}();__webpack_exports__["default"]=PageTransition},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__=__webpack_require__(3)},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__Carousel__=__webpack_require__(1);__webpack_require__.d(__webpack_exports__,"Carousel",function(){return __WEBPACK_IMPORTED_MODULE_0__Carousel__["default"]});var __WEBPACK_IMPORTED_MODULE_1__Collapsible__=__webpack_require__(19);__webpack_require__.d(__webpack_exports__,"Collapsible",function(){return __WEBPACK_IMPORTED_MODULE_1__Collapsible__["default"]});var __WEBPACK_IMPORTED_MODULE_2__Drawer__=__webpack_require__(8);__webpack_require__.d(__webpack_exports__,"Drawer",function(){return __WEBPACK_IMPORTED_MODULE_2__Drawer__["default"]});var __WEBPACK_IMPORTED_MODULE_3__LoadingBar__=__webpack_require__(20);__webpack_require__.d(__webpack_exports__,"LoadingBar",function(){return __WEBPACK_IMPORTED_MODULE_3__LoadingBar__["default"]});var __WEBPACK_IMPORTED_MODULE_4__Modal__=__webpack_require__(21);__webpack_require__.d(__webpack_exports__,"Modal",function(){return __WEBPACK_IMPORTED_MODULE_4__Modal__["default"]});var __WEBPACK_IMPORTED_MODULE_5__Popover__=__webpack_require__(9);__webpack_require__.d(__webpack_exports__,"Popover",function(){return __WEBPACK_IMPORTED_MODULE_5__Popover__["default"]});var __WEBPACK_IMPORTED_MODULE_6__PageTransition__=__webpack_require__(22);__webpack_require__.d(__webpack_exports__,"PageTransition",function(){return __WEBPACK_IMPORTED_MODULE_6__PageTransition__["default"]});var __WEBPACK_IMPORTED_MODULE_7__ProductItemColorSwatch__=__webpack_require__(4);__webpack_require__.d(__webpack_exports__,"ProductItemColorSwatch",function(){return __WEBPACK_IMPORTED_MODULE_7__ProductItemColorSwatch__["default"]});var __WEBPACK_IMPORTED_MODULE_8__ProductImageZoom__=__webpack_require__(14);__webpack_require__.d(__webpack_exports__,"ProductImageZoom",function(){return __WEBPACK_IMPORTED_MODULE_8__ProductImageZoom__["default"]});var __WEBPACK_IMPORTED_MODULE_9__ProductReviews__=__webpack_require__(15);__webpack_require__.d(__webpack_exports__,"ProductReviews",function(){return __WEBPACK_IMPORTED_MODULE_9__ProductReviews__["default"]});var __WEBPACK_IMPORTED_MODULE_10__ProductVariants__=__webpack_require__(11);__webpack_require__.d(__webpack_exports__,"ProductVariants",function(){return __WEBPACK_IMPORTED_MODULE_10__ProductVariants__["default"]});var __WEBPACK_IMPORTED_MODULE_11__ScrollSpy__=__webpack_require__(17);__webpack_require__.d(__webpack_exports__,"ScrollSpy",function(){return __WEBPACK_IMPORTED_MODULE_11__ScrollSpy__["default"]});var __WEBPACK_IMPORTED_MODULE_12__Search__=__webpack_require__(23);__webpack_require__.d(__webpack_exports__,"Search",function(){return __WEBPACK_IMPORTED_MODULE_12__Search__["default"]});var __WEBPACK_IMPORTED_MODULE_13__ShippingEstimator__=__webpack_require__(18);__webpack_require__.d(__webpack_exports__,"ShippingEstimator",function(){return __WEBPACK_IMPORTED_MODULE_13__ShippingEstimator__["default"]});var __WEBPACK_IMPORTED_MODULE_14__VariantSelector__=__webpack_require__(16);__webpack_require__.d(__webpack_exports__,"VariantSelector",function(){return __WEBPACK_IMPORTED_MODULE_14__VariantSelector__["default"]})},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper__=__webpack_require__(6);var __WEBPACK_IMPORTED_MODULE_1__components_CountrySelector__=__webpack_require__(12);var AddressesSection=function AddressesSection(){var _this20=this;_classCallCheck(this,AddressesSection);this.countrySelectors=[];__WEBPACK_IMPORTED_MODULE_0__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Modal--address')).forEach(function(modal){_this20.countrySelectors.push(new __WEBPACK_IMPORTED_MODULE_1__components_CountrySelector__["default"](modal.querySelector('[name="address[country]"]'),modal.querySelector('[name="address[province]"]')))})};__webpack_exports__["default"]=AddressesSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var ArticleList=function(){function ArticleList(container){var _this21=this;_classCallCheck(this,ArticleList);this.element=container;if(window.theme.showElementStaggering){this.timeline=new TimelineLite({delay:window.theme.showPageTransition?0.5:0});this.intersectionObserver=new IntersectionObserver(this._reveal.bind(this));__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ArticleItem')).forEach(function(item){_this21.intersectionObserver.observe(item)})}}
// _createClass(ArticleList,[{key:'onUnload',value:function onUnload(){if(window.theme.showElementStaggering){this.intersectionObserver.disconnect();this.timeline.kill()}}},{key:'_reveal',value:function _reveal(results){var _this22=this;var toReveal=[];results.forEach(function(result){if(result.isIntersecting||result.intersectionRatio>0){toReveal.push(result.target);_this22.intersectionObserver.unobserve(result.target)}});if(toReveal.length===0){return}
// this.timeline.staggerFromTo(toReveal,0.45,{autoAlpha:0,y:30},{autoAlpha:1,y:0},0.2)}}]);return ArticleList}();__webpack_exports__["default"]=ArticleList},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var ArticleSection=function(){function ArticleSection(container){var _this23=this;_classCallCheck(this,ArticleSection);this.element=container;this.toolbarElement=this.element.querySelector('.ArticleToolbar');this.articleNavElement=this.element.querySelector('.ArticleNav');var articleImageElement=this.element.querySelector('.Article__Image');if(articleImageElement&&window.matchMedia('(-moz-touch-enabled: 0), (hover: hover)').matches){this.parallaxInstance=new Rellax('.Article__Image',{speed:-7,center:!1,round:!0})}
// if(window.theme.showElementStaggering){this.timeline=new TimelineLite({delay:window.theme.showPageTransition?0.5:0});this.intersectionObserver=new IntersectionObserver(this._reveal.bind(this));__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ArticleItem')).forEach(function(item){_this23.intersectionObserver.observe(item)})}
// this._attachListeners()}
// _createClass(ArticleSection,[{key:'onUnload',value:function onUnload(){if(this.parallaxInstance){this.parallaxInstance.destroy()}
// if(window.theme.showElementStaggering){this.intersectionObserver.disconnect();this.timeline.kill()}
// window.removeEventListener('scroll',this._onScrollListener)}},{key:'_attachListeners',value:function _attachListeners(){this._onScrollListener=this._checkToolbarVisibility.bind(this);window.addEventListener('scroll',this._onScrollListener)}},{key:'_checkToolbarVisibility',value:function _checkToolbarVisibility(){var _this24=this;var lastYPosition=0,headerHeight=0,navBottom=0,isFixedHeader=0,header=document.querySelector('.Header');fastdom.measure(function(){lastYPosition=window.pageYOffset;headerHeight=header.offsetHeight;isFixedHeader=parseInt(window.getComputedStyle(document.body).getPropertyValue('--use-sticky-header')||0);if(_this24.articleNavElement){navBottom=_this24.articleNavElement.offsetTop+_this24.articleNavElement.clientHeight-headerHeight}});fastdom.mutate(function(){_this24.toolbarElement.style.top=isFixedHeader?headerHeight+'px':null;if(_this24.articleNavElement){if(lastYPosition>150&&_this24.articleNavElement&&lastYPosition<navBottom){_this24.toolbarElement.classList.add('is-visible')}else{_this24.toolbarElement.classList.remove('is-visible')}}else{if(lastYPosition>150){_this24.toolbarElement.classList.add('is-visible')}else{_this24.toolbarElement.classList.remove('is-visible')}}})}},{key:'_reveal',value:function _reveal(results){var _this25=this;var toReveal=[];results.forEach(function(result){if(result.isIntersecting||result.intersectionRatio>0){toReveal.push(result.target);_this25.intersectionObserver.unobserve(result.target)}});if(toReveal.length===0){return}
// this.timeline.staggerFromTo(toReveal,0.45,{autoAlpha:0,y:30},{autoAlpha:1,y:0},0.2)}}]);return ArticleSection}();__webpack_exports__["default"]=ArticleSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var BackgroundVideoSection=function(){function BackgroundVideoSection(container){_classCallCheck(this,BackgroundVideoSection);this.element=container;this.options=JSON.parse(this.element.getAttribute('data-section-settings'));this._loadScript().then(this._setupPlayer.bind(this))}
// _createClass(BackgroundVideoSection,[{key:'_loadScript',value:function _loadScript(){var _this26=this;return new Promise(function(resolve,reject){var script=document.createElement('script');document.body.appendChild(script);script.onload=resolve;script.onerror=reject;script.async=!0;script.src=_this26.options.videoType==='youtube'?'//www.youtube.com/iframe_api':'//player.vimeo.com/api/player.js'})}},{key:'onUnload',value:function onUnload(){if(this.player){this.player.destroy()}}},{key:'_setupPlayer',value:function _setupPlayer(){var _this27=this;var elementToInsert=this.element.querySelector('.ImageHero__VideoHolder');var playerLoadingInterval=setInterval(function(){if(_this27.options.videoType==='youtube'){if(window.YT){_this27.player=new YT.Player(elementToInsert,{videoId:_this27.options.videoId,playerVars:{showinfo:0,controls:0,fs:0,rel:0,height:'100%',width:'100%',iv_load_policy:3,html5:1,loop:1,playsinline:1,modestbranding:1,disablekb:1,origin:_this27.options.requestHost},events:{onReady:_this27._onYouTubeReady.bind(_this27),onStateChange:_this27._onYouTubeStateChange.bind(_this27)}});clearInterval(playerLoadingInterval)}}else{if(window.Vimeo){_this27.player=new Vimeo.Player(elementToInsert.parentNode,{id:_this27.options.videoId,autoplay:!0,muted:!0,background:!0,loop:!0})}}},50)}},{key:'_onYouTubeReady',value:function _onYouTubeReady(event){this.player.mute();this.player.playVideo()}},{key:'_onYouTubeStateChange',value:function _onYouTubeStateChange(event){if(event.data===YT.PlayerState.ENDED){this.player.playVideo()}}}]);return BackgroundVideoSection}();__webpack_exports__["default"]=BackgroundVideoSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__=__webpack_require__(8);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__helper_Currency__=__webpack_require__(5);var __WEBPACK_IMPORTED_MODULE_3__components_ShippingEstimator__=__webpack_require__(18);var CartSection=function(){function CartSection(container){_classCallCheck(this,CartSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(this.element.getAttribute('data-section-settings'));this.itemCount=this.options.itemCount;this.isCartNoteOpen=!1;if(this.options.drawer){this.sidebarDrawer=new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](this.element,{onClose:this._onDrawerClosed.bind(this)})}
// if(this.options.hasShippingEstimator){this.shippingEstimator=new __WEBPACK_IMPORTED_MODULE_3__components_ShippingEstimator__["default"](this.element.querySelector('.ShippingEstimator'))}
// this._attachListeners()}
// _createClass(CartSection,[{key:'onUnload',value:function onUnload(){if(this.options.hasShippingEstimator){this.shippingEstimator.destroy()}
// this.delegateElement.off();document.removeEventListener('product:added',this._onProductAddedListener)}},{key:'_attachListeners',value:function _attachListeners(){this._onProductAddedListener=this._onProductAdded.bind(this);this.delegateElement.on('change','#cart-note',this._updateCartNote.bind(this));this.delegateElement.on('click','[data-action="update-item-quantity"], [data-action="remove-item"]',this._updateItemQuantity.bind(this));this.delegateElement.on('change','.QuantitySelector__CurrentQuantity',this._updateItemQuantity.bind(this));if(this.options.drawer){this.delegateElement.on('click','[data-action="toggle-cart-note"]',this._toggleCartNote.bind(this))}
// document.addEventListener('product:added',this._onProductAddedListener)}},{key:'_updateCartNote',value:function _updateCartNote(event,target){var formData=new FormData();formData.append('note',target.value);fetch('/cart/update.js',{credentials:'same-origin',method:'POST',headers:{'Accept':'application/json','X-Requested-With':'XMLHttpRequest'},body:formData})}},{key:'_toggleCartNote',value:function _toggleCartNote(){var _this28=this;var noteContainer=this.element.querySelector('.Cart__OffscreenNoteContainer'),cartNote=this.element.querySelector('#cart-note');this.element.classList.toggle('has-note-open');this.element.querySelector('.Cart__NoteButton').innerHTML=cartNote.value!==''?window.languages.cartEditNote:window.languages.cartAddNote;noteContainer.setAttribute('aria-hidden',noteContainer.getAttribute('aria-hidden')==='true'?'false':'true');this.isCartNoteOpen=noteContainer.getAttribute('aria-hidden')==='false';if(this.element.classList.contains('has-note-open')){var transitionEndListener=function transitionEndListener(){_this28.element.querySelector('#cart-note').focus();noteContainer.removeEventListener('transitionend',transitionEndListener)};noteContainer.addEventListener('transitionend',transitionEndListener)}}},{key:'_updateItemQuantity',value:function _updateItemQuantity(event,target){var _this29=this;document.dispatchEvent(new CustomEvent('theme:loading:start'));var formData=new FormData(),quantity=null,elementToAnimate=null;formData.append('id',target.getAttribute('data-line-id'));if(target.tagName==='INPUT'){quantity=parseInt(Math.max(parseInt(target.value)||1,1))}else{quantity=parseInt(target.getAttribute('data-quantity'))}
// formData.append('quantity',quantity);if(quantity===0){elementToAnimate=target.closest('.CartItemWrapper')}
// fetch('/cart/change.js',{credentials:'same-origin',method:'POST',headers:{'Accept':'application/json','X-Requested-With':'XMLHttpRequest'},body:formData}).then(function(cart){cart.json().then(function(content){_this29.itemCount=content.item_count;_this29._rerenderCart(elementToAnimate);document.dispatchEvent(new CustomEvent('theme:loading:end'))})});event.preventDefault()}},{key:'_onProductAdded',value:function _onProductAdded(event){var _this30=this;this.itemCount+=event.detail.quantity;this._rerenderCart().then(function(){_this30.sidebarDrawer.open()})}},{key:'_onDrawerClosed',value:function _onDrawerClosed(){if(this.isCartNoteOpen){this._toggleCartNote()}}},{key:'_rerenderCart',value:function _rerenderCart(elementToAnimate){var _this31=this;var cartDot=__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('.Header__CartDot')),cartQuantity=__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('.Header__CartCount'));cartDot.forEach(function(item){if(_this31.itemCount===0){item.classList.remove('is-visible')}else{item.classList.add('is-visible')}});cartQuantity.forEach(function(item){item.textContent=_this31.itemCount});return fetch('/cart?view='+(this.options.drawer?'drawer':'ajax')+'&timestamp='+Date.now(),{credentials:'same-origin',method:'GET'}).then(function(content){if(_this31.options.drawer&&elementToAnimate){var timelineLite=new TimelineLite({onComplete:function onComplete(){content.text().then(function(html){_this31._replaceContent(html)})}});timelineLite.to(elementToAnimate,0.5,{height:0,opacity:0,ease:Cubic.easeOut},0);if(_this31.itemCount===0){timelineLite.to(_this31.element.querySelector('.Drawer__Footer'),0.5,{y:'100%',transition:'none',ease:Cubic.easeInOut},0)}}else{content.text().then(function(html){_this31._replaceContent(html)})}})}},{key:'_replaceContent',value:function _replaceContent(html){var tempElement=document.createElement('div');tempElement.innerHTML=html;if(window.theme.currencyConversionEnabled){__WEBPACK_IMPORTED_MODULE_2__helper_Currency__["default"].convertAll(tempElement)}
// var cartNodeParent=this.element.querySelector('.Cart').parentNode;if(this.options.drawer){var currentScrollPosition=this.element.querySelector('.Drawer__Main').scrollTop;cartNodeParent.replaceChild(tempElement.querySelector('.Cart'),this.element.querySelector('.Cart'));this.element.querySelector('.Drawer__Main').scrollTop=currentScrollPosition}else{if(this.itemCount===0){this.element.innerHTML=tempElement.querySelector('.shopify-section').firstElementChild.innerHTML}else{cartNodeParent.replaceChild(tempElement.querySelector('.Cart'),this.element.querySelector('.Cart'));this.element.querySelector('.PageHeader').innerHTML=tempElement.querySelector('.PageHeader').innerHTML}}}}]);return CartSection}();__webpack_exports__["default"]=CartSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var CollectionListSection=function(){function CollectionListSection(container){_classCallCheck(this,CollectionListSection);this.element=container;this.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'))}
// _createClass(CollectionListSection,[{key:'onUnload',value:function onUnload(){this.carousel.destroy()}},{key:'onBlockSelect',value:function onBlockSelect(event){this.carousel.selectCell(event.target.getAttribute('data-slide-index'),!0,!event.detail.load)}},{key:'onBlockDeselect',value:function onBlockDeselect(){this.carousel.unpausePlayer()}}]);return CollectionListSection}();__webpack_exports__["default"]=CollectionListSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__=__webpack_require__(8);var __WEBPACK_IMPORTED_MODULE_1__components_Popover__=__webpack_require__(9);var __WEBPACK_IMPORTED_MODULE_2__components_ProductItemColorSwatch__=__webpack_require__(4);var __WEBPACK_IMPORTED_MODULE_3__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_4__helper_Responsive__=__webpack_require__(2);var __WEBPACK_IMPORTED_MODULE_5__components_OverflowScroller__=__webpack_require__(13);var CollectionSection=function(){function CollectionSection(element){_classCallCheck(this,CollectionSection);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.toolbarElement=this.element.querySelector('.CollectionToolbar');this.collectionInnerElement=this.element.querySelector('.CollectionInner__Products');this.settings=JSON.parse(this.element.getAttribute('data-section-settings'));this.currentTags=this.settings.currentTags;this.currentSortBy=this.settings.sortBy;this.temporaryTags=this.currentTags.slice();var sortPopoverElement=document.getElementById('collection-sort-popover');if(sortPopoverElement){this.sortPopover=new __WEBPACK_IMPORTED_MODULE_1__components_Popover__["default"](sortPopoverElement,{onValueChanged:this._sortByChanged.bind(this)})}
// var filterDrawerElement=document.getElementById('collection-filter-drawer');if(filterDrawerElement){this.filterDrawer=new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](filterDrawerElement,{onClose:this._removeUncommittedTags.bind(this)})}
// if(this.settings.filterPosition==='sidebar'){this.filterInnerSidebarScroller=new __WEBPACK_IMPORTED_MODULE_5__components_OverflowScroller__["default"](this.element.querySelector('.CollectionInner__Sidebar'))}
// var collectionImageElement=this.element.querySelector('.PageHeader__ImageWrapper');if(collectionImageElement&&window.matchMedia('(-moz-touch-enabled: 0), (hover: hover)').matches){this.parallaxInstance=new Rellax('.PageHeader__ImageWrapper',{speed:-7,center:!1,round:!0})}
// new __WEBPACK_IMPORTED_MODULE_2__components_ProductItemColorSwatch__["default"](this.element);this.timeline=new TimelineLite({delay:window.theme.showPageTransition?0.5:0});this._setupAnimation();this._attachListeners()}
// _createClass(CollectionSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off('click');if(this.sortPopover){this.sortPopover.destroy()}
// if(this.filterDrawer){this.filterDrawer.destroy()}
// if(this.filterInnerSidebarScroller){this.filterInnerSidebarScroller.destroy()}
// if(this.parallaxInstance){this.parallaxInstance.destroy()}
// if(window.theme.showElementStaggering){this.intersectionObserver.disconnect();this.timeline.kill()}}},{key:'_setupAnimation',value:function _setupAnimation(){var _this32=this;if(!window.theme.showElementStaggering){return}
// if(this.intersectionObserver){this.intersectionObserver.disconnect()}
// this.intersectionObserver=new IntersectionObserver(this._reveal.bind(this),{threshold:0.3});__WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ProductList .ProductItem')).forEach(function(item){_this32.intersectionObserver.observe(item)})}},{key:'_reveal',value:function _reveal(results){var _this33=this;var toReveal=[];results.forEach(function(result){if(result.isIntersecting||result.intersectionRatio>0){toReveal.push(result.target);_this33.intersectionObserver.unobserve(result.target)}});if(toReveal.length===0){return}
// this.timeline.staggerFromTo(toReveal,0.45,{autoAlpha:0,y:25},{autoAlpha:1,y:0},0.2)}},{key:'_changeLayoutMode',value:function _changeLayoutMode(event,target){var _this34=this;var layoutType=target.getAttribute('data-grid-type'),newCount=parseInt(target.getAttribute('data-count'));var productList=this.collectionInnerElement.querySelector('.ProductList');if(productList){var previousCount=parseInt(productList.getAttribute('data-'+layoutType+'-count'));if(previousCount===newCount){return}
// productList.setAttribute('data-'+layoutType+'-count',newCount);__WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(productList.querySelectorAll('.Grid__Cell')).forEach(function(item){if(layoutType==='mobile'){item.classList.remove('1/'+previousCount+'--phone');item.classList.add('1/'+newCount+'--phone')}else{var previousTabletCount=previousCount===2?2:3,newTabletCount=newCount===2?2:3;if(_this34.settings.filterPosition==='drawer'){item.classList.remove('1/'+previousCount+'--lap-and-up');item.classList.add('1/'+newCount+'--lap-and-up')}else{item.classList.remove('1/'+previousCount+'--desk');item.classList.add('1/'+newCount+'--desk')}
// item.classList.remove('1/'+previousTabletCount+'--tablet-and-up');item.classList.add('1/'+newTabletCount+'--tablet-and-up')}
// if(window.theme.showElementStaggering){item.firstElementChild.style.visibility='hidden'}});lazySizes.autoSizer.checkElems()}
// target.classList.add('is-active');__WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].getSiblings(target)[0].classList.remove('is-active');this._setupAnimation();var formData=new FormData();formData.append('attributes[collection_'+layoutType+'_items_per_row]',newCount);fetch('/cart/update.js',{credentials:'same-origin',method:'POST',headers:{'Accept':'application/json','X-Requested-With':'XMLHttpRequest'},body:formData})}},{key:'_sortByChanged',value:function _sortByChanged(sortBy){if(this.currentSortBy===sortBy){return}
// this.currentSortBy=sortBy;this._reloadProducts()}},{key:'_toggleTag',value:function _toggleTag(event){var element=event.target;if(element.classList.contains('is-active')){this.temporaryTags.splice(this.temporaryTags.indexOf(element.getAttribute('data-tag')),1)}else{var activeSibling=element.closest('.Collapsible').querySelector('.is-active');if(activeSibling){this.temporaryTags.splice(this.temporaryTags.indexOf(activeSibling.getAttribute('data-tag')),1)}
// this.temporaryTags.push(element.getAttribute('data-tag'))}
// this._updateActiveTags();if(__WEBPACK_IMPORTED_MODULE_4__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')&&this.settings.filterPosition==='sidebar'){this._commit()}}},{key:'_removeUncommittedTags',value:function _removeUncommittedTags(){this.temporaryTags=this.currentTags.slice();this._updateActiveTags()}},{key:'_applyTags',value:function _applyTags(){this._updateActiveTags();this._commit()}},{key:'_resetTags',value:function _resetTags(){this.temporaryTags=[];this._applyTags()}},{key:'_updateActiveTags',value:function _updateActiveTags(){var _this35=this;__WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.CollectionFilters [data-tag]')).forEach(function(item){if(_this35.temporaryTags.includes(item.getAttribute('data-tag'))){item.classList.add('is-active');item.parentNode.classList.add('is-selected')}else{item.classList.remove('is-active');item.parentNode.classList.remove('is-selected')}})}},{key:'_commit',value:function _commit(){var _this36=this;if(this.currentTags.sort().join(',')!==this.temporaryTags.sort().join(',')){this.currentTags=this.temporaryTags.slice();this._reloadProducts()}
// if(this.filterDrawer.isOpen){this.filterDrawer.close()}
// __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('[data-action="reset-tags"]')).forEach(function(resetButton){resetButton.style.display=_this36.currentTags.length===0?'none':'block'})}},{key:'_reloadProducts',value:function _reloadProducts(){var _this37=this;document.dispatchEvent(new CustomEvent('theme:loading:start'));var filterElement=this.toolbarElement.querySelector('.CollectionToolbar__Item--filter');if(filterElement){var filterElementCount=filterElement.querySelector('span');if(filterElementCount){filterElement.removeChild(filterElementCount)}
// if(this.currentTags.length===0){filterElement.classList.add('Text--subdued')}else{filterElement.classList.remove('Text--subdued');filterElement.innerHTML+='<span class="Text--subdued">('+this.currentTags.length+')</span>'}}
// if(history.replaceState){var tags=this.currentTags.length>0?this.currentTags.join('+'):'';var newUrl=window.location.protocol+'//'+window.location.host+this.settings.collectionUrl+'/'+tags+'?sort_by='+this.currentSortBy;window.history.pushState({path:newUrl},'',newUrl)}
// var formData=new FormData();formData.append('view','ajax');formData.append('sort_by',this.currentSortBy);fetch(location.pathname+'?view=ajax&sort_by='+this.currentSortBy,{credentials:'same-origin',method:'GET'}).then(function(response){response.text().then(function(content){var tempElement=document.createElement('div');tempElement.innerHTML=content;_this37.collectionInnerElement.innerHTML=tempElement.querySelector('.shopify-section').innerHTML;document.dispatchEvent(new CustomEvent('theme:loading:end'));_this37._setupAnimation();var elementOffset=_this37.element.querySelector('.CollectionMain').getBoundingClientRect().top-parseInt(document.documentElement.style.getPropertyValue('--header-height'));if(__WEBPACK_IMPORTED_MODULE_4__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')&&_this37.toolbarElement&&_this37.toolbarElement.clientHeight===0){elementOffset-=50}
// if(elementOffset<0){window.scrollBy({top:elementOffset,behavior:'smooth'})}})})}},{key:'_attachListeners',value:function _attachListeners(){this._toggleTagListener=this._toggleTag.bind(this);this._applyTagsListener=this._applyTags.bind(this);this._resetTagsListener=this._resetTags.bind(this);this._changeLayoutModeListener=this._changeLayoutMode.bind(this);this.delegateElement.on('click','[data-action="toggle-tag"]',this._toggleTagListener);this.delegateElement.on('click','[data-action="apply-tags"]',this._applyTagsListener);this.delegateElement.on('click','[data-action="reset-tags"]',this._resetTagsListener);this.delegateElement.on('click','[data-action="change-layout-mode"]',this._changeLayoutModeListener);window.addEventListener('popstate',function(event){if(event.state.path){window.location.href=event.state.path}})}}]);return CollectionSection}();__webpack_exports__["default"]=CollectionSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__=__webpack_require__(7);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var FaqSection=function(){function FaqSection(element){_classCallCheck(this,FaqSection);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this._attachListeners()}
// _createClass(FaqSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off()}},{key:'onBlockSelect',value:function onBlockSelect(event){this._openItem(event.target)}},{key:'onBlockDeselect',value:function onBlockDeselect(event){this._closeItem(event.target)}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','.Faq__Question',this._toggleItem.bind(this));this.delegateElement.on('click','.FaqSummary__Item',this._switchToCategory.bind(this))}},{key:'_switchToCategory',value:function _switchToCategory(event,target){target.classList.add('is-active');__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(target,'.is-active').forEach(function(item){item.classList.remove('is-active')})}},{key:'_toggleItem',value:function _toggleItem(event,target){var item=target.closest('.Faq__Item');if(item.getAttribute('aria-expanded')==='true'){this._closeItem(item)}else{this._openItem(item)}}},{key:'_openItem',value:function _openItem(item){var answerWrapper=item.querySelector('.Faq__AnswerWrapper');item.setAttribute('aria-expanded','true');answerWrapper.setAttribute('aria-hidden','false');__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(answerWrapper,!0);__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(item,'[aria-expanded="true"]').forEach(function(siblingItem){var siblingAnswerWrapper=siblingItem.querySelector('.Faq__AnswerWrapper');siblingItem.setAttribute('aria-expanded','false');siblingAnswerWrapper.setAttribute('aria-hidden','true');__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(siblingAnswerWrapper)})}},{key:'_closeItem',value:function _closeItem(item){var answerWrapper=item.querySelector('.Faq__AnswerWrapper');item.setAttribute('aria-expanded','false');answerWrapper.setAttribute('aria-hidden','true');__WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(answerWrapper)}}]);return FaqSection}();__webpack_exports__["default"]=FaqSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__=__webpack_require__(4);var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_3__helper__=__webpack_require__(6);var FeaturedCollectionsSection=function(){function FeaturedCollectionsSection(container){var _this38=this;_classCallCheck(this,FeaturedCollectionsSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(this.element.getAttribute('data-settings'));this.carousels=[];__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('[data-flickity-config]')).forEach(function(item){_this38.carousels.push(new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](item))});new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element);this._setupAnimation();this._attachListeners()}
// _createClass(FeaturedCollectionsSection,[{key:'onUnload',value:function onUnload(){this.carousels.forEach(function(item){return item.destroy()});this.delegateElement.off('click');this.intersectionObserver.disconnect();this.timeline.kill()}},{key:'onBlockSelect',value:function onBlockSelect(event){this.element.querySelector('[aria-controls="'+event.target.id+'"]').click()}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','[data-action="toggle-tab"]',this._switchTab.bind(this))}},{key:'_switchTab',value:function _switchTab(event,target){var _this39=this;if(target.classList.contains('is-active')){return}
// target.classList.add('is-active');__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(target,'.is-active').forEach(function(item){item.classList.remove('is-active')});var tabPanelToShow=this.element.querySelector('#'+target.getAttribute('aria-controls'));this.timeline.eventCallback('onReverseComplete',function(){tabPanelToShow.setAttribute('aria-hidden','false');__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(tabPanelToShow,'.TabPanel[aria-hidden="false"]').forEach(function(item){item.setAttribute('aria-hidden','true')});if(__WEBPACK_IMPORTED_MODULE_3__helper__.ResponsiveHelper.matchesBreakpoint('lap-and-up')){_this39.carousels.forEach(function(carousel){carousel.flickityInstance.activate();carousel.flickityInstance.resize()})}
// _this39.timeline.clear();_this39._setupAnimation()});if(this.options.layout==='grid'&&window.theme.showElementStaggering){this.timeline.reverse().timeScale(3)}else{this.timeline.reverse()}}},{key:'_setupAnimation',value:function _setupAnimation(){var _this40=this;if(this.intersectionObserver){this.intersectionObserver.disconnect()}
// this.timeline=new TimelineLite({delay:0.5});if(this.options.layout==='grid'&&window.theme.showElementStaggering){this.intersectionObserver=new IntersectionObserver(this._reveal.bind(this));__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.TabPanel[aria-hidden="false"] .ProductList .ProductItem')).forEach(function(item){_this40.intersectionObserver.observe(item)})}else{var productList=this.element.querySelector('.TabPanel[aria-hidden="false"] .ProductList');if(productList){this.timeline.fromTo(productList,0.6,{autoAlpha:0,y:25},{autoAlpha:1,y:0})}}}},{key:'_reveal',value:function _reveal(results){var _this41=this;var toReveal=[];results.forEach(function(result){if(result.isIntersecting||result.intersectionRatio>0){toReveal.push(result.target);_this41.intersectionObserver.unobserve(result.target)}});if(toReveal.length===0){return}
// this.timeline.staggerFromTo(toReveal,0.45,{autoAlpha:0,y:25},{autoAlpha:1,y:0},0.2)}}]);return FeaturedCollectionsSection}();__webpack_exports__["default"]=FeaturedCollectionsSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_ProductVariants__=__webpack_require__(11);var __WEBPACK_IMPORTED_MODULE_1__helper_Image__=__webpack_require__(10);var FeaturedProductSection=function(){function FeaturedProductSection(container){_classCallCheck(this,FeaturedProductSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(this.element.getAttribute('data-section-settings'));if(!this.options.usePlaceholder){this.productVariants=new __WEBPACK_IMPORTED_MODULE_0__components_ProductVariants__["default"](container,this.options)}
// this._attachListeners()}
// _createClass(FeaturedProductSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off('click');if(!this.options.usePlaceholder){this.productVariants.destroy()}}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('variant:changed',this._updateMainImage.bind(this))}},{key:'_updateMainImage',value:function _updateMainImage(event){var variant=event.detail.variant,previousVariant=event.detail.previousVariant;if(!variant||!variant.featured_image||previousVariant.featured_image&&previousVariant.featured_image.id===variant.featured_image.id){return}
// var newImage=variant.featured_image;var mainImageContainer=this.element.querySelector('.FeaturedProduct__Gallery .AspectRatio');mainImageContainer.style.cssText='max-width: '+newImage.width+'px; --aspect-ratio: '+newImage.width/newImage.height;var newImageElement=document.createElement('img');newImageElement.classList.add('Image--lazyLoad');newImageElement.setAttribute('data-src',__WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSizedImageUrl(newImage.src,'1x1').replace('_1x1.','_{width}x.'));newImageElement.setAttribute('data-widths','['+__WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSupportedSizes(newImage,[200,400,600,700,800,900,1000]).join(',')+']');newImageElement.setAttribute('data-sizes','auto');mainImageContainer.replaceChild(newImageElement,mainImageContainer.querySelector('img'))}}]);return FeaturedProductSection}();__webpack_exports__["default"]=FeaturedProductSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var GiftCardSection=function(){function GiftCardSection(container){_classCallCheck(this,GiftCardSection);this.element=container;this._createQrCode();this._setupPrint()}
// _createClass(GiftCardSection,[{key:'_createQrCode',value:function _createQrCode(){var qrCodeElement=document.getElementById('QrCode');new QRCode(qrCodeElement,{text:qrCodeElement.getAttribute('data-identifier'),width:120,height:120})}},{key:'_setupPrint',value:function _setupPrint(){var printElement=document.getElementById('PrintGiftCard');if(printElement){printElement.addEventListener('click',function(){window.print()})}}}]);return GiftCardSection}();__webpack_exports__["default"]=GiftCardSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_1__helper_Responsive__=__webpack_require__(2);var HeaderSection=function(){function HeaderSection(container){var _this42=this;_classCallCheck(this,HeaderSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(this.element.getAttribute('data-section-settings'));this.lastScrollPosition=-1;this.isTouch=window.matchMedia('(-moz-touch-enabled: 1), (hover: none)').matches;if(this.options.isSticky){Stickyfill.addOne(this.element.parentNode)}
// this._attachListeners();this._checkNavigationBounds();var mainLogo=this.element.querySelector('.Header__LogoImage--primary');if(mainLogo&&!mainLogo.complete){mainLogo.addEventListener('load',function(){fastdom.measure(function(){document.documentElement.style.setProperty('--header-height',_this42.element.clientHeight+'px');document.documentElement.style.setProperty('--header-is-not-transparent',_this42.options.hasTransparentHeader?0:1)})})}else{fastdom.measure(function(){document.documentElement.style.setProperty('--header-height',_this42.element.clientHeight+'px');document.documentElement.style.setProperty('--header-is-not-transparent',_this42.options.hasTransparentHeader?0:1)})}}
// _createClass(HeaderSection,[{key:'onUnload',value:function onUnload(){this.element.removeEventListener('mouseleave',this._closeNavigationListener);this.element.removeEventListener('mouseenter',this._focusNavigationListener);this.element.removeEventListener('focusin',this._focusNavigationListener);this.delegateElement.off();window.removeEventListener('scroll',this._checkTransparentHeaderListener);window.removeEventListener('resize',this._verifyNavigationOverlapListener);if(this.options.isSticky){Stickyfill.removeOne(this.element.parentNode)}}},{key:'onSelect',value:function onSelect(){this._checkTransparentHeader()}},{key:'onBlockSelect',value:function onBlockSelect(event){var _this43=this;var listItem=event.target.closest('.HorizontalList__Item');fastdom.mutate(function(){event.target.setAttribute('aria-hidden','false');if(listItem){listItem.classList.add('is-expanded');__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(listItem,'.is-expanded').forEach(function(item){item.classList.remove('is-expanded')})}
// _this43.element.classList.remove('Header--transparent')})}},{key:'onBlockDeselect',value:function onBlockDeselect(event){var listItem=event.target.closest('.HorizontalList__Item');fastdom.mutate(function(){event.target.setAttribute('aria-hidden','true');if(listItem){listItem.classList.remove('is-expanded')}});this._checkTransparentHeader()}},{key:'_attachListeners',value:function _attachListeners(){this._checkTransparentHeaderListener=this._checkTransparentHeader.bind(this);this._closeNavigationListener=this._closeNavigation.bind(this);this._focusNavigationListener=this._focusNavigation.bind(this);this._verifyNavigationOverlapListener=this._verifyNavigationOverlap.bind(this);this.element.addEventListener('mouseleave',this._closeNavigationListener);this.delegateElement.on('mouseenter','.Header__MainNav .HorizontalList__Item, [aria-haspopup]',this._openMenu.bind(this),!0);this.delegateElement.on('focusin','[aria-haspopup]',this._openMenu.bind(this),!0);this.delegateElement.on('focusout','[aria-haspopup]',this._closeMenu.bind(this),!1);this.delegateElement.on('mouseleave','.DropdownMenu [aria-haspopup]',this._closeMenu.bind(this),!0);this.delegateElement.on('mouseenter','.DropdownMenu [aria-haspopup]',this._adjustDropdownPosition.bind(this),!0);if(this.isTouch){this.delegateElement.on('click','.Header__MainNav [aria-haspopup]',this._handleTouchMenu.bind(this))}
// if(this.options.hasTransparentHeader){this.element.addEventListener('mouseenter',this._focusNavigationListener);this.element.addEventListener('focusin',this._focusNavigationListener)}
// if(this.options.isSticky&&this.options.hasTransparentHeader){window.addEventListener('scroll',this._checkTransparentHeaderListener)}
// if(this.options.navigationStyle==='inline'){window.addEventListener('resize',this._verifyNavigationOverlapListener)}}},{key:'_focusNavigation',value:function _focusNavigation(){var _this44=this;fastdom.mutate(function(){if(!_this44.isTouch||__WEBPACK_IMPORTED_MODULE_1__helper_Responsive__["default"].matchesBreakpoint('desk')){_this44.element.classList.remove('Header--transparent')}})}},{key:'_closeNavigation',value:function _closeNavigation(){var _this45=this;fastdom.mutate(function(){__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(_this45.element.querySelectorAll('.is-expanded')).forEach(function(item){item.classList.remove('is-expanded');$(".dropdown .dropdown_list").removeClass('expand');$(".dropdown").removeClass('expand')});__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(_this45.element.querySelectorAll('[aria-hidden="false"]')).forEach(function(item){item.setAttribute('aria-hidden','true')})});if(this.options.hasTransparentHeader){this._checkTransparentHeader()}}},{key:'_openMenu',value:function _openMenu(event,target){if(event.type==='mouseenter'&&target!==event.target){return}
// fastdom.mutate(function(){var itemText=$(target).find('a.menu_link')[0].childNodes[0].nodeValue.toLowerCase();var dropdownClass="dropdown--"+itemText.trim();target.classList.add('is-expanded');if(itemText)
// __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.children,'[aria-hidden="true"]').forEach(function(item){item.setAttribute('aria-hidden','false')});__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target,'.is-expanded').forEach(function(item){item.classList.remove('is-expanded');$(".dropdown .dropdown_list").removeClass('expand');$(".dropdown").removeClass('expand');__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(item.children,'[aria-hidden="false"]').forEach(function(item){item.setAttribute('aria-hidden','true')})});$(".dropdown .dropdown_list#"+dropdownClass).addClass('expand');$(".dropdown").addClass('expand')})}},{key:'_closeMenu',value:function _closeMenu(event,target){if(event.type==='mouseleave'&&target!==event.target){return}
// fastdom.mutate(function(){target.classList.remove('is-expanded');__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.children,'[aria-hidden="false"]').forEach(function(item){item.setAttribute('aria-hidden','true')})})}},{key:'_adjustDropdownPosition',value:function _adjustDropdownPosition(event,target){var nestedMenus=__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.querySelectorAll('.DropdownMenu')),shouldOpenLeft=!1;fastdom.measure(function(){var windowWidth=window.innerWidth,rightEdge=target.getBoundingClientRect().right;nestedMenus.forEach(function(item){if(rightEdge+item.offsetWidth>windowWidth){shouldOpenLeft=!0}})});fastdom.mutate(function(){if(shouldOpenLeft){nestedMenus.forEach(function(item){item.classList.add('DropdownMenu--reversed')})}else{nestedMenus.forEach(function(item){item.classList.remove('DropdownMenu--reversed')})}})}},{key:'_handleTouchMenu',value:function _handleTouchMenu(event,target){if(!target.classList.contains('is-expanded')){event.preventDefault()}}},{key:'_checkNavigationBounds',value:function _checkNavigationBounds(){var _this46=this;if(this.options.navigationStyle!=='inline'){return}
// var mainTopMenu=this.element.querySelector('.Header__MainNav');this.mainMenuWidth=45;this.menuLeftOffset=0;fastdom.measure(function(){_this46.menuLeftOffset=mainTopMenu.offsetLeft;__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(mainTopMenu.querySelectorAll('.HorizontalList__Item')).forEach(function(item){_this46.mainMenuWidth+=parseInt(__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].outerWidthWithMargin(item))})});this._verifyNavigationOverlap()}},{key:'_verifyNavigationOverlap',value:function _verifyNavigationOverlap(){var _this47=this;var isOverlapping=!1;fastdom.measure(function(){isOverlapping=_this47.mainMenuWidth>Math.ceil(_this47.element.querySelector('.Header__Logo').offsetLeft-_this47.menuLeftOffset)});fastdom.mutate(function(){if(isOverlapping){_this47.element.classList.remove('Header--inline');_this47.element.classList.add('Header--center')}else{_this47.element.classList.add('Header--inline');_this47.element.classList.remove('Header--center')}
// _this47.element.classList.add('Header--initialized');fastdom.measure(function(){document.documentElement.style.setProperty('--header-height',_this47.element.clientHeight+'px')})})}},{key:'_checkTransparentHeader',value:function _checkTransparentHeader(){var _this48=this;if(!this.options.hasTransparentHeader){return}
// var scrollThreshold=10;fastdom.measure(function(){_this48.lastScrollPosition=window.pageYOffset});fastdom.mutate(function(){if(_this48.lastScrollPosition<=scrollThreshold){_this48.element.classList.add('Header--transparent')}else{_this48.element.classList.remove('Header--transparent')}})}}]);return HeaderSection}();__webpack_exports__["default"]=HeaderSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var ImageWithTextBlockSection=function(){function ImageWithTextBlockSection(container){_classCallCheck(this,ImageWithTextBlockSection);this.element=container}
// _createClass(ImageWithTextBlockSection,[{key:'onUnload',value:function onUnload(){}}]);return ImageWithTextBlockSection}();__webpack_exports__["default"]=ImageWithTextBlockSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var InstagramSection=function(){function InstagramSection(element){_classCallCheck(this,InstagramSection);this.element=element;this.instafeed=this.element.querySelector('.Instafeed');this._initFeed()}
// _createClass(InstagramSection,[{key:'onUnload',value:function onUnload(){this.carousel.destroy()}},{key:'_initFeed',value:function _initFeed(){var _this49=this;if(!this.instafeed.hasAttribute('data-access-token')){this.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.instafeed)}else{var instafeed=new Instafeed({get:'user',userId:'self',target:this.instafeed,accessToken:this.instafeed.getAttribute('data-access-token'),sortBy:'most-recent',limit:this.instafeed.getAttribute('data-image-count'),resolution:'standard_resolution',template:'<a href="{{link}}" target="_blank" class="Carousel__Cell Instafeed__Cell">'+'<div rel="noopener" class="Instafeed__Image Image--lazyLoad Image--zoomOut" data-expand="10" data-bg="{{image}}" aria-label="Open on Instagram"></div>'+'<div class="Instafeed__Overlay">'+'<span class="Instafeed__LikeCount">'+'<svg class="Icon Icon--heart" viewBox="0 0 17 15" role="presentation">'+'<path d="M15.0349331 1.40485867C14.1287273.49933787 12.9252477 0 11.6443673 0S9.16000731.49933787 8.25448651 1.40417371c-.01164437.01164436-.02328874.02328873-.03493311.03561806-.01164436-.01232933-.02260377-.02328873-.03424813-.0349331C7.2790995.49933787 6.07561989 0 4.79473949 0 3.51385908 0 2.31037947.49933787 1.40417371 1.40485867.49796794 2.31037947 0 3.51385908 0 4.79473949 0 6.07561989.4986529 7.2790995 1.40417371 8.1846203L8.2195534 15l6.8153797-6.8153797c.9055208-.9055208 1.4041737-2.10900041 1.4041737-3.38988081 0-1.28019545-.4986529-2.48436002-1.4041737-3.38988082z"></path>'+'</svg>'+'{{likes}} likes'+'</span>'+'<p class="Instafeed__Caption">{{caption}}</p>'+'<time class="Instafeed__Date Heading u-h6">{{model.date}}</time>'+'</div>'+'</a>',success:function success(data){var dateTimeFormatter=new Intl.DateTimeFormat(window.theme.locale,{day:'numeric',month:'long',year:'numeric'});data.data.forEach(function(datum){datum.date=dateTimeFormatter.format(new Date(parseInt(datum.created_time)*1000))})},after:function after(){_this49.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](_this49.instafeed)}});instafeed.run()}}}]);return InstagramSection}();__webpack_exports__["default"]=InstagramSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var LoginSection=function(){function LoginSection(container){_classCallCheck(this,LoginSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.timelineLite=new TimelineLite();this.customerLoginForm=this.element.querySelector('#customer_login');this.recoverPasswordForm=this.element.querySelector('#recover_customer_password');this.delegateElement.on('click','[data-action="toggle-recover-form"]',this._showRecoverPassword.bind(this))}
// _createClass(LoginSection,[{key:'_showRecoverPassword',value:function _showRecoverPassword(){var isLoginActive=this.customerLoginForm.style.display==='block';if(isLoginActive){this.timelineLite.fromTo(this.customerLoginForm,0.5,{autoAlpha:1,display:'block',y:0},{autoAlpha:0,y:20,display:'none'}).fromTo(this.recoverPasswordForm,0.5,{autoAlpha:0,display:'none',y:20},{autoAlpha:1,display:'block',y:0,delay:0.25})}else{this.timelineLite.fromTo(this.recoverPasswordForm,0.5,{autoAlpha:1,display:'block',y:0},{autoAlpha:0,y:20,display:'none'}).fromTo(this.customerLoginForm,0.5,{autoAlpha:0,display:'none',y:20},{autoAlpha:1,display:'block',y:0,delay:0.25})}}}]);return LoginSection}();__webpack_exports__["default"]=LoginSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var MapSection=function(){function MapSection(element){_classCallCheck(this,MapSection);this.element=element;this.options=JSON.parse(element.getAttribute('data-section-settings'));if(this.options.apiKey&&this.options.mapAddress){this._loadScript().then(this._initMap.bind(this))}}
// _createClass(MapSection,[{key:'_loadScript',value:function _loadScript(){var _this50=this;return new Promise(function(resolve,reject){var script=document.createElement('script');document.body.appendChild(script);script.onload=resolve;script.onerror=reject;script.async=!0;script.src='https://maps.googleapis.com/maps/api/js?key='+_this50.options.apiKey})}},{key:'_initMap',value:function _initMap(){var _this51=this;var geocoder=new google.maps.Geocoder();geocoder.geocode({address:this.options.mapAddress},function(results,status){if(status!==google.maps.GeocoderStatus.OK){if(Shopify.designMode){}}else{var mapOptions={zoom:_this51.options.zoom,center:results[0].geometry.location,draggable:!1,clickableIcons:!1,scrollwheel:!1,disableDoubleClickZoom:!0,disableDefaultUI:!0};var map=new google.maps.Map(_this51.element.querySelector('.FeaturedMap__GMap'),mapOptions),center=map.getCenter();map.setCenter(center);var icon={path:"M32.7374478,5.617 C29.1154478,1.995 24.2994478,0 19.1774478,0 C14.0544478,0 9.23944778,1.995 5.61744778,5.617 C-1.08555222,12.319 -1.91855222,24.929 3.81344778,32.569 L19.1774478,54.757 L34.5184478,32.6 C40.2734478,24.929 39.4404478,12.319 32.7374478,5.617 Z M19.3544478,26 C15.4954478,26 12.3544478,22.859 12.3544478,19 C12.3544478,15.141 15.4954478,12 19.3544478,12 C23.2134478,12 26.3544478,15.141 26.3544478,19 C26.3544478,22.859 23.2134478,26 19.3544478,26 Z",fillColor:_this51.options.markerColor,fillOpacity:1,anchor:new google.maps.Point(15,55),strokeWeight:0,scale:0.6};new google.maps.Marker({map:map,position:map.getCenter(),icon:icon});var styledMapType=new google.maps.StyledMapType(JSON.parse(_this51.element.querySelector('[data-gmap-style]').innerHTML));map.mapTypes.set('styled_map',styledMapType);map.setMapTypeId('styled_map');google.maps.event.addDomListener(window,'resize',function(){google.maps.event.trigger(map,'resize');map.setCenter(center)})}})}}]);return MapSection}();__webpack_exports__["default"]=MapSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var NewsletterPopupSection=function(){function NewsletterPopupSection(element){_classCallCheck(this,NewsletterPopupSection);this.element=element;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(element.getAttribute('data-section-settings'));try{if(window.location.hash==='#newsletter-popup'){this._openPopup()}else if(!this.options.showOnlyOnce||this.options.showOnlyOnce&&localStorage.getItem('themePopup')===null){setTimeout(this._openPopup.bind(this),this.options.apparitionDelay*1000)}}catch(error){}
// this._attachListeners()}
// _createClass(NewsletterPopupSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off()}},{key:'onSelect',value:function onSelect(){this._openPopup()}},{key:'onDeselect',value:function onDeselect(){this._closePopup()}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','[data-action="close-popup"]',this._closePopup.bind(this))}},{key:'_openPopup',value:function _openPopup(){this.element.setAttribute('aria-hidden','false');localStorage.setItem('themePopup','true')}},{key:'_closePopup',value:function _closePopup(){this.element.setAttribute('aria-hidden','true')}}]);return NewsletterPopupSection}();__webpack_exports__["default"]=NewsletterPopupSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_ProductVariants__=__webpack_require__(11);var __WEBPACK_IMPORTED_MODULE_2__components_ProductImageZoom__=__webpack_require__(14);var __WEBPACK_IMPORTED_MODULE_3__components_ProductReviews__=__webpack_require__(15);var __WEBPACK_IMPORTED_MODULE_4__components_ScrollSpy__=__webpack_require__(17);var __WEBPACK_IMPORTED_MODULE_5__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__=__webpack_require__(13);var __WEBPACK_IMPORTED_MODULE_7__helper_Responsive__=__webpack_require__(2);var __WEBPACK_IMPORTED_MODULE_8__helper__=__webpack_require__(6);var ProductSection=function(){function ProductSection(container){_classCallCheck(this,ProductSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.options=JSON.parse(this.element.getAttribute('data-section-settings'));this.productVariants=new __WEBPACK_IMPORTED_MODULE_1__components_ProductVariants__["default"](container,this.options);this.productReviews=new __WEBPACK_IMPORTED_MODULE_3__components_ProductReviews__["default"](container);var productSlideshowElement=this.element.querySelector('.Product__Slideshow');if(productSlideshowElement){this.productSlideshow=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](productSlideshowElement,{onSelect:this._onImageChanged.bind(this)});this.slideshowNavDots=this.element.querySelector('.Product__SlideshowNav--dots');this.slideshowNavDotsItems=this.slideshowNavDots?__WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(this.slideshowNavDots.querySelectorAll('a')):[];if(this.options.showThumbnails){this.slideshowNavThumbnails=this.element.querySelector('.Product__SlideshowNav--thumbnails');this.slideshowNavThumbnailsItems=this.slideshowNavThumbnails?__WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(this.slideshowNavThumbnails.querySelectorAll('a')):[]}
// this.slideshowImages=__WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(productSlideshowElement.querySelectorAll('.Carousel__Cell'))}
// this.productWrapperElement=this.element.querySelector('.Product__Wrapper');this.productInfoElement=this.element.querySelector('.Product__Info');this.productAsideElement=this.element.querySelector('.Product__Aside');this.quickNav=this.element.querySelector('.Product__QuickNav');if(this.options.enableImageZoom){this.imageZoomInstance=new __WEBPACK_IMPORTED_MODULE_2__components_ProductImageZoom__["default"](this.element,this.productSlideshow)}
// Stickyfill.addOne(this.productInfoElement);this._setupDeviceFeatures();this._attachListeners()}
// _createClass(ProductSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off('click');this.productVariants.destroy();this.productReviews.destroy();if(this.productSlideshow){this.productSlideshow.destroy()}
// if(this.options.enableImageZoom){this.imageZoomInstance.destroy()}
// if(this.carouselNavScrollSpy){this.carouselNavScrollSpy.destroy()}
// if(this.quickNav){window.removeEventListener('scroll',this._checkQuickNavListener)}
// if(this.productInfoScroller){this.productInfoScroller.destroy()}
// if(this.productThumbnailsScroller){this.productThumbnailsScroller.destroy()}
// if(window.ResizeObserver&&window.theme.enableExperimentalResizeObserver&&this.productInfoResizeObserver){this.productInfoResizeObserver.disconnect()}
// Stickyfill.removeOne(this.productInfoElement);document.removeEventListener('breakpoint:changed',this._onBreakpointChangedListener)}},{key:'_attachListeners',value:function _attachListeners(){this._onBreakpointChangedListener=this._setupDeviceFeatures.bind(this);this._checkQuickNavListener=this._checkQuickNav.bind(this);this.delegateElement.on('click','[data-action="toggle-social-share"]',this._toggleSocialShare.bind(this));this.delegateElement.on('variant:changed',this._updateSlideshowImage.bind(this));this.delegateElement.on('scrollspy:target:changed',this._onScrollTargetChanged.bind(this));document.addEventListener('breakpoint:changed',this._onBreakpointChangedListener);if(this.quickNav){window.addEventListener('scroll',this._checkQuickNavListener)}}},{key:'_updateSlideshowImage',value:function _updateSlideshowImage(event){var variant=event.detail.variant,previousVariant=event.detail.previousVariant;if(!variant||!variant.featured_image||previousVariant&&previousVariant.featured_image&&previousVariant.featured_image.id===variant.featured_image.id){return}
// if(__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('pocket')){for(var i=0;i!==this.productSlideshow.flickityInstance.cells.length;++i){var cellElement=this.productSlideshow.flickityInstance.cells[i].element,imageId=parseInt(cellElement.getAttribute('data-image-id'));if(imageId===variant.featured_image.id){this.productSlideshow.selectCell(parseInt(cellElement.getAttribute('data-image-position')))}}}else{document.querySelector('[href="#Image'+variant.featured_image.id+'"]').click()}}},{key:'_onScrollTargetChanged',value:function _onScrollTargetChanged(event){this.slideshowNavDotsItems.forEach(function(item){return item.classList.remove('is-selected')});this.slideshowNavDotsItems[parseInt(event.detail.newTarget.getAttribute('data-image-position'))].classList.add('is-selected');if(this.options.showThumbnails){this.slideshowNavThumbnailsItems.forEach(function(item){return item.classList.remove('is-selected')});this.slideshowNavThumbnailsItems[parseInt(event.detail.newTarget.getAttribute('data-image-position'))].classList.add('is-selected')}}},{key:'_checkQuickNav',value:function _checkQuickNav(){var _this52=this;var showAsideQuickNav=!1;fastdom.measure(function(){showAsideQuickNav=window.scrollY>=_this52.productAsideElement.offsetTop-_this52.productAsideElement.clientHeight});fastdom.mutate(function(){if(showAsideQuickNav){_this52.quickNav.classList.add('is-flipped')}else{_this52.quickNav.classList.remove('is-flipped')}})}},{key:'_toggleSocialShare',value:function _toggleSocialShare(event,target){target.classList.toggle('is-active');target.classList.toggle('RoundButton--secondaryState');target.setAttribute('aria-expanded',target.getAttribute('aria-expanded')==='true'?'false':'true');target.nextElementSibling.setAttribute('aria-hidden',target.nextElementSibling.getAttribute('aria-hidden')==='true'?'false':'true')}},{key:'_onImageChanged',value:function _onImageChanged(event,cell){if(!__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('pocket')){return}
// var productGalleryActionListElement=this.element.querySelector('.Product__Gallery .Product__ActionList');if(productGalleryActionListElement){if(cell.classList.contains('Product__SlideItem--video')){productGalleryActionListElement.classList.add('is-hidden')}else{productGalleryActionListElement.classList.remove('is-hidden')}}}},{key:'_setupDeviceFeatures',value:function _setupDeviceFeatures(event){var _this53=this;var currentBreakpoint=event?event.detail.currentBreakpoint:__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.getCurrentBreakpoint(),previousBreakpoint=event?event.detail.previousBreakpoint:null;if(currentBreakpoint===previousBreakpoint){return}
// if(currentBreakpoint==='phone'||currentBreakpoint==='tablet'){if(this.carouselNavScrollSpy){this.carouselNavScrollSpy.destroy()}
// if(this.productInfoScroller){this.productInfoScroller.destroy()}
// if(this.productThumbnailsScroller){this.productThumbnailsScroller.destroy()}
// if(this.productAsideElement){this.productAsideElement.style.minHeight=null}else{this.productWrapperElement.style.minHeight=null}
// this.productInfoElement.parentNode.style.maxHeight=null}else{if(this.slideshowImages&&this.slideshowImages.length>1){var offsetTop=this.slideshowNavDots.firstElementChild.offsetTop;if(this.options.showThumbnails&&__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('desk')){offsetTop=250}
// this.carouselNavScrollSpy=new __WEBPACK_IMPORTED_MODULE_4__components_ScrollSpy__["default"](this.element,this.slideshowImages,{rootMargin:'-'+offsetTop+'px 0px 0px 0px'})}
// var productInfoStyles=window.getComputedStyle(this.productInfoElement),productInfoPadding=parseInt(productInfoStyles.paddingTop)+parseInt(productInfoStyles.paddingBottom);var calculateMinHeight=function calculateMinHeight(){if(_this53.productAsideElement){_this53.productAsideElement.style.minHeight=_this53.productInfoElement.scrollHeight-productInfoPadding+'px';_this53.productInfoElement.closest('.Product__InfoWrapper').style.maxHeight=_this53.productAsideElement.offsetTop+_this53.productInfoElement.scrollHeight-productInfoPadding+'px'}else{_this53.productWrapperElement.style.minHeight=_this53.productInfoElement.scrollHeight-parseInt(productInfoStyles.paddingTop)+'px'}};calculateMinHeight();if(window.ResizeObserver&&window.theme.enableExperimentalResizeObserver){this.productInfoResizeObserver=new ResizeObserver(function(){calculateMinHeight()});this.productInfoResizeObserver.observe(this.productInfoElement)}
// this.productInfoScroller=new __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__["default"](this.productInfoElement);if(this.options.showThumbnails&&this.slideshowNavThumbnails){this.productThumbnailsScroller=new __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__["default"](this.slideshowNavThumbnails)}}}}]);return ProductSection}();__webpack_exports__["default"]=ProductSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__=__webpack_require__(4);var __WEBPACK_IMPORTED_MODULE_2__helper_Currency__=__webpack_require__(5);var RecentlyViewedProductsSection=function(){function RecentlyViewedProductsSection(container){_classCallCheck(this,RecentlyViewedProductsSection);this.element=container;this.options=JSON.parse(this.element.getAttribute('data-section-settings'));if(this.options.productId){this._saveProduct(this.options.productId)}
// new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element);this._fetchProducts()}
// _createClass(RecentlyViewedProductsSection,[{key:'onUnload',value:function onUnload(){if(this.carousel){this.carousel.destroy()}}},{key:'_saveProduct',value:function _saveProduct(productId){var items=JSON.parse(localStorage.getItem('recentlyViewedProducts')||'[]');if(!items.includes(productId)){items.unshift(productId)}
// try{localStorage.setItem('recentlyViewedProducts',JSON.stringify(items.slice(0,8)))}catch(error){}}},{key:'_fetchProducts',value:function _fetchProducts(){var _this54=this;var queryString=this._getSearchQueryString();if(queryString===''){return}
// fetch('/search?view=recently-viewed-products&type=product&q='+queryString,{credentials:'same-origin',method:'GET'}).then(function(response){response.text().then(function(content){var tempElement=document.createElement('div');tempElement.innerHTML=content;_this54.element.innerHTML=tempElement.querySelector('.Section').innerHTML;_this54.element.parentNode.style.display='block';if(window.theme.currencyConversionEnabled){__WEBPACK_IMPORTED_MODULE_2__helper_Currency__["default"].convertAll(_this54.element)}
// _this54.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](_this54.element.querySelector('[data-flickity-config]'))})})}},{key:'_getSearchQueryString',value:function _getSearchQueryString(){var items=JSON.parse(localStorage.getItem('recentlyViewedProducts')||'[]');if(items.includes(this.options.productId)){items.splice(items.indexOf(this.options.productId),1)}
// return items.map(function(item){return'id:'+item}).join(' OR ')}}]);return RecentlyViewedProductsSection}();__webpack_exports__["default"]=RecentlyViewedProductsSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__=__webpack_require__(4);var RelatedProductsSection=function(){function RelatedProductsSection(container){_classCallCheck(this,RelatedProductsSection);this.element=container;this.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'));new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element)}
// _createClass(RelatedProductsSection,[{key:'onUnload',value:function onUnload(){this.carousel.destroy()}}]);return RelatedProductsSection}();__webpack_exports__["default"]=RelatedProductsSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var SearchSection=function(){function SearchSection(container){_classCallCheck(this,SearchSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this._setupAnimation()}
// _createClass(SearchSection,[{key:'onUnload',value:function onUnload(){this.intersectionObserver.disconnect();this.timeline.kill()}},{key:'_setupAnimation',value:function _setupAnimation(){var _this55=this;if(this.intersectionObserver){this.intersectionObserver.disconnect()}
// this.timeline=new TimelineLite({delay:0.5});if(window.theme.showElementStaggering){this.intersectionObserver=new IntersectionObserver(this._reveal.bind(this));__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ProductList .ProductItem, .ArticleList .ArticleItem')).forEach(function(item){_this55.intersectionObserver.observe(item)})}}},{key:'_reveal',value:function _reveal(results){var _this56=this;var toReveal=[];results.forEach(function(result){if(result.isIntersecting||result.intersectionRatio>0){toReveal.push(result.target);_this56.intersectionObserver.unobserve(result.target)}});if(toReveal.length===0){return}
// this.timeline.staggerFromTo(toReveal,0.6,{autoAlpha:0,y:25},{autoAlpha:1,y:0},0.2)}}]);return SearchSection}();__webpack_exports__["default"]=SearchSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var SectionContainer=function(){function SectionContainer(){_classCallCheck(this,SectionContainer);this.constructors=[];this.instances=[];this._attachListeners()}
// _createClass(SectionContainer,[{key:'_attachListeners',value:function _attachListeners(){document.addEventListener('shopify:section:load',this._onSectionLoad.bind(this));document.addEventListener('shopify:section:unload',this._onSectionUnload.bind(this));document.addEventListener('shopify:section:select',this._onSelect.bind(this));document.addEventListener('shopify:section:deselect',this._onDeselect.bind(this));document.addEventListener('shopify:section:reorder',this._onReorder.bind(this));document.addEventListener('shopify:block:select',this._onBlockSelect.bind(this));document.addEventListener('shopify:block:deselect',this._onBlockDeselect.bind(this))}},{key:'register',value:function register(type,constructor){var _this57=this;this.constructors[type]=constructor;__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('[data-section-type='+type+']')).forEach(function(container){_this57._createInstance(container,constructor)})}},{key:'_findInstance',value:function _findInstance(array,key,value){for(var i=0;i<array.length;i++){if(array[i][key]===value){return array[i]}}}},{key:'_removeInstance',value:function _removeInstance(array,key,value){var i=array.length;while(i--){if(array[i][key]===value){array.splice(i,1);break}}
// return array}},{key:'_onSectionLoad',value:function _onSectionLoad(event){var container=event.target.querySelector('[data-section-id]');if(container){this._createInstance(container)}}},{key:'_onSectionUnload',value:function _onSectionUnload(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(!instance){return}
// if(typeof instance.onUnload==='function'){instance.onUnload(event)}
// this.instances=this._removeInstance(this.instances,'id',event.detail.sectionId)}},{key:'_onSelect',value:function _onSelect(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(instance&&typeof instance.onSelect==='function'){instance.onSelect(event)}}},{key:'_onDeselect',value:function _onDeselect(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(instance&&typeof instance.onDeselect==='function'){instance.onDeselect(event)}}},{key:'_onReorder',value:function _onReorder(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(instance&&typeof instance.onReorder==='function'){instance.onReorder(event)}}},{key:'_onBlockSelect',value:function _onBlockSelect(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(instance&&typeof instance.onBlockSelect==='function'){instance.onBlockSelect(event)}}},{key:'_onBlockDeselect',value:function _onBlockDeselect(event){var instance=this._findInstance(this.instances,'id',event.detail.sectionId);if(instance&&typeof instance.onBlockDeselect==='function'){instance.onBlockDeselect(event)}}},{key:'_createInstance',value:function _createInstance(container,constructor){var id=container.getAttribute('data-section-id'),type=container.getAttribute('data-section-type');constructor=constructor||this.constructors[type];if(typeof constructor==='undefined'){return}
// var instance=Object.assign(new constructor(container),{id:id,type:type,container:container});this.instances.push(instance)}}]);return SectionContainer}();__webpack_exports__["default"]=SectionContainer},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__=__webpack_require__(4);var ShopNowSection=function(){function ShopNowSection(container){_classCallCheck(this,ShopNowSection);this.element=container;this.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'));new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element)}
// _createClass(ShopNowSection,[{key:'onUnload',value:function onUnload(){this.carousel.destroy()}}]);return ShopNowSection}();__webpack_exports__["default"]=ShopNowSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__components_Popover__=__webpack_require__(9);var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_3__helper_Responsive__=__webpack_require__(2);var ShopTheLookSection=function(){function ShopTheLookSection(container){_classCallCheck(this,ShopTheLookSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.usePocketMode=__WEBPACK_IMPORTED_MODULE_3__helper_Responsive__["default"].matchesBreakpoint('pocket');this.pocketActivatorButton=this.element.querySelector('[data-action="open-look"]');this._createOuterCarousel();this._createPocketPopovers();this._attachListeners()}
// _createClass(ShopTheLookSection,[{key:'onUnload',value:function onUnload(){this.outerCarousel.destroy();this.innerCarousels.forEach(function(item){item.forEach(function(innerItem){return innerItem.destroy()})});this.popovers.forEach(function(item){return item.destroy()});this.delegateElement.off()}},{key:'onBlockSelect',value:function onBlockSelect(event){this.outerCarousel.selectCell(event.target.getAttribute('data-slide-index'),!0,!event.detail.load)}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','.ShopTheLook__Dot',this._onDotClicked.bind(this))}},{key:'_createPocketPopovers',value:function _createPocketPopovers(){var _this58=this;this.popovers=[];__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Popover')).forEach(function(popover){_this58.popovers.push(new __WEBPACK_IMPORTED_MODULE_1__components_Popover__["default"](popover,{activator:_this58.pocketActivatorButton,showOverlay:!1,onOpen:_this58._openPocketZoom.bind(_this58),onClose:_this58._closePocketZoom.bind(_this58)}))})}},{key:'_createOuterCarousel',value:function _createOuterCarousel(){var _this59=this;this.outerCarousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('.ShopTheLook'),{onSelect:this._onLookChanged.bind(this)});this.innerCarousels=new Array(this.outerCarousel.flickityInstance.cells.length);for(var i=0;i!==this.innerCarousels.length;++i){this.innerCarousels[i]=[]}
// __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ShopTheLook__ProductList')).forEach(function(item){var lookIndex=parseInt(item.getAttribute('data-look-index'));_this59.innerCarousels[lookIndex].push(new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](item,{onSelect:_this59._onProductChanged.bind(_this59)}));item.insertBefore(item.querySelector('.flickity-viewport'),item.querySelector('.ShopTheLook__ViewButton'))});this.outerCarousel.resize()}},{key:'_onLookChanged',value:function _onLookChanged(selectedIndex,selectedCell){this.pocketActivatorButton.setAttribute('aria-controls',selectedCell.getAttribute('id')+'-popover')}},{key:'_onProductChanged',value:function _onProductChanged(selectedIndex,selectedCell){var lookItem=this.outerCarousel.getSelectedCell(),activeDot=null;__WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(lookItem.querySelectorAll('.ShopTheLook__Dot')).forEach(function(dot,index){dot.classList.remove('is-active');if(index===selectedIndex){dot.classList.add('is-active');activeDot=dot}});lookItem.querySelector('.ShopTheLook__ViewButton').setAttribute('href',selectedCell.getAttribute('data-product-url'));lookItem.dispatchEvent(new CustomEvent('product:changed',{detail:{dot:activeDot}}))}},{key:'_onDotClicked',value:function _onDotClicked(event,target){var shouldAnimateCarousel=!1,hasOnePopoverOpen=!1,lookIndex=this.outerCarousel.getSelectedIndex();this.popovers.forEach(function(item){if(item.isOpen){hasOnePopoverOpen=!0;shouldAnimateCarousel=!0}});this.innerCarousels[lookIndex].forEach(function(innerCarousel){innerCarousel.selectCell(parseInt(target.getAttribute('data-product-index'))-1,!1,shouldAnimateCarousel)});if(this.usePocketMode&&!hasOnePopoverOpen){this.popovers[lookIndex].open()}}},{key:'_openPocketZoom',value:function _openPocketZoom(popover){var _this60=this;this._calculateImageTransform(popover);fastdom.mutate(function(){document.getElementById('shopify-section-header').style.cssText='transform: translateY(-100%); transition: transform 0.3s ease-in-out;';_this60.outerCarousel.flickityInstance.unbindDrag();_this60.outerCarousel.flickityInstance.element.classList.add('is-zoomed');_this60.outerCarousel.getSelectedCell().classList.add('is-expanded')})}},{key:'_calculateImageTransform',value:function _calculateImageTransform(openPopover){var _this61=this;var selectedCell=this.outerCarousel.getSelectedCell();fastdom.measure(function(){var scale=window.innerWidth/(selectedCell.offsetWidth-parseInt(window.getComputedStyle(selectedCell).paddingLeft)*2),heightAfterScale=Math.round(selectedCell.offsetHeight*scale),hiddenImageHeight=Math.round(Math.max(heightAfterScale-(window.innerHeight-openPopover.element.offsetHeight),0)),visibleImageHeight=heightAfterScale-hiddenImageHeight,minTranslateY=Math.round(-(selectedCell.getBoundingClientRect().top-(heightAfterScale-selectedCell.offsetHeight)/2)),maxTranslateY=Math.round(minTranslateY-hiddenImageHeight);_this61._calculateTransformForDotListener=function(event){var dotTopPosition=Math.round((event.detail.dot.offsetTop+event.detail.dot.offsetHeight/2)*scale),offsetToMove=Math.round(dotTopPosition-visibleImageHeight/2),translateY=Math.min(Math.max(minTranslateY-offsetToMove,maxTranslateY),minTranslateY);fastdom.mutate(function(){_this61.outerCarousel.flickityInstance.viewport.style.transform='translate3d(0, '+Math.round(translateY)+'px, 0) scale('+scale+')'})};selectedCell.addEventListener('product:changed',_this61._calculateTransformForDotListener);selectedCell.dispatchEvent(new CustomEvent('product:changed',{detail:{dot:selectedCell.querySelector('.ShopTheLook__Dot.is-active')}}))})}},{key:'_closePocketZoom',value:function _closePocketZoom(){var _this62=this;var selectedCell=this.outerCarousel.getSelectedCell();selectedCell.removeEventListener('product:changed',this._calculateTransformForDotListener);fastdom.mutate(function(){document.getElementById('shopify-section-header').style.cssText='transform: translateY(0); transition: transform 0.3s ease-in-out 0.3s;';_this62.outerCarousel.flickityInstance.bindDrag();_this62.outerCarousel.flickityInstance.element.classList.remove('is-zoomed');_this62.outerCarousel.flickityInstance.viewport.style.transform=null;selectedCell.classList.remove('is-expanded')})}}]);return ShopTheLookSection}();__webpack_exports__["default"]=ShopTheLookSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__=__webpack_require__(8);var SidebarMenuSection=function(){function SidebarMenuSection(container){_classCallCheck(this,SidebarMenuSection);this.element=container;this.sidebarDrawer=new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](container)}
// _createClass(SidebarMenuSection,[{key:'onUnload',value:function onUnload(){this.sidebarDrawer.destroy()}},{key:'onSelect',value:function onSelect(){this.sidebarDrawer.open()}},{key:'onDeselect',value:function onDeselect(){this.sidebarDrawer.close()}}]);return SidebarMenuSection}();__webpack_exports__["default"]=SidebarMenuSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__=__webpack_require__(2);var SlideshowSection=function(){function SlideshowSection(container){_classCallCheck(this,SlideshowSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.slideshow=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'),{onSelect:this._onSlideChanged.bind(this)});this.selectedSlide=null;this.shouldAnimate=!0;this.timeline=new TimelineLite({delay:window.theme.showPageTransition?0.5:0});if(this.slideshow.flickityInstance.cells.length>0){this._transitionToSlide(this.slideshow.flickityInstance.selectedCell.element,!0)}
// this._attachListeners()}
// _createClass(SlideshowSection,[{key:'onUnload',value:function onUnload(){this.slideshow.destroy();this.timeline.kill();this.delegateElement.off();document.removeEventListener('breakpoint:changed',this._onBreakpointChangedListener)}},{key:'onBlockSelect',value:function onBlockSelect(event){if(this.slideshow.flickityInstance.options.autoPlay){this.slideshow.flickityInstance.stopPlayer()}
// this.shouldAnimate=!event.detail.load;this.slideshow.selectCell(event.target.getAttribute('data-slide-index'),!1,!event.detail.load)}},{key:'onBlockDeselect',value:function onBlockDeselect(){this.shouldAnimate=!0;if(this.slideshow.flickityInstance.options.autoPlay){this.slideshow.flickityInstance.playPlayer()}}},{key:'_attachListeners',value:function _attachListeners(){this._onBreakpointChangedListener=this._onBreakpointChanged.bind(this);this.delegateElement.on('mouseenter','.Button',this._pauseSlideshow.bind(this),!0);this.delegateElement.on('mouseleave','.Button',this._resumeSlideshow.bind(this),!0);document.addEventListener('breakpoint:changed',this._onBreakpointChangedListener)}},{key:'_pauseSlideshow',value:function _pauseSlideshow(){if(this.slideshow.flickityInstance.options.autoPlay){this.slideshow.flickityInstance.pausePlayer()}}},{key:'_resumeSlideshow',value:function _resumeSlideshow(){if(this.slideshow.flickityInstance.options.autoPlay){this.slideshow.flickityInstance.unpausePlayer()}}},{key:'_onSlideChanged',value:function _onSlideChanged(index,element){this._transitionToSlide(element)}},{key:'_transitionToSlide',value:function _transitionToSlide(slide){var _this63=this;this.timeline.clear();if(this.selectedSlide){this._slideLeave(this.selectedSlide);this.timeline.addLabel('enter',this.shouldAnimate?'-=0.4':0)}
// this._lazyLoadNextImage();this.timeline.fromTo(slide,this.selectedSlide&&this.shouldAnimate?0.3:0,{autoAlpha:0},{autoAlpha:1,ease:Cubic.easeInOut},'enter');if(this.slideshow.flickityInstance.options.autoPlay&&this.slideshow.flickityInstance.player.state==='playing'){this.slideshow.flickityInstance.pausePlayer()}
// __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(slide.querySelectorAll('.Slideshow__Image')).forEach(function(image){if(image.classList.contains('Image--lazyLoading')||image.classList.contains('Image--lazyLoad')){image.addEventListener('lazyloaded',_this63._slideEnter.bind(_this63,slide))}else{_this63._slideEnter(slide)}});this.selectedSlide=slide}},{key:'_slideLeave',value:function _slideLeave(slide){var content=slide.querySelector('.SectionHeader'),buttonWrapper=slide.querySelector('.SectionHeader__ButtonWrapper');this.timeline.fromTo(slide,this.shouldAnimate?0.3:0,{autoAlpha:1},{autoAlpha:0,ease:Cubic.easeInOut,delay:this.shouldAnimate?0.35:0});if(content){this.timeline.fromTo(content,this.shouldAnimate?0.4:0,{autoAlpha:1,y:0},{autoAlpha:0,y:20,ease:Cubic.easeIn},0)}
// if(buttonWrapper){this.timeline.fromTo(buttonWrapper,this.shouldAnimate?0.4:0,{autoAlpha:1,y:0},{autoAlpha:0,y:10,ease:Cubic.easeIn},0)}}},{key:'_slideEnter',value:function _slideEnter(slide){var images=slide.querySelectorAll('.Slideshow__Image'),content=slide.querySelector('.SectionHeader'),buttonWrapper=slide.querySelector('.SectionHeader__ButtonWrapper');if(this.slideshow.flickityInstance.options.autoPlay&&this.slideshow.flickityInstance.player.state==='paused'){this.slideshow.flickityInstance.unpausePlayer()}
// if(window.CSS&&window.CSS.supports('(object-fit: cover) or (-o-object-fit: cover)')){if(window.theme.showImageZooming){this.timeline.fromTo(images,this.shouldAnimate?1.2:0,{opacity:0,scale:1.2},{opacity:1,scale:1,ease:Quad.easeOut},'enter')}else{this.timeline.fromTo(images,this.shouldAnimate?1.2:0,{opacity:0},{opacity:1,ease:Quad.easeOut},'enter')}}
// if(content){this.timeline.fromTo(content,this.shouldAnimate?0.8:0,{autoAlpha:0,y:30},{autoAlpha:1,y:0,delay:this.shouldAnimate?0.8:0,ease:Cubic.easeOut},'enter')}
// if(buttonWrapper){this.timeline.fromTo(buttonWrapper,this.shouldAnimate?0.8:0,{autoAlpha:0,y:20},{autoAlpha:1,y:0,delay:this.shouldAnimate?0.8:0,ease:Cubic.easeOut},'enter')}}},{key:'_lazyLoadNextImage',value:function _lazyLoadNextImage(){var currentIndex=this.slideshow.flickityInstance.selectedIndex,breakpoint=__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].getCurrentBreakpoint();if(this.slideshow.flickityInstance.cells.length-1>currentIndex){var nextCellElement=this.slideshow.flickityInstance.cells[currentIndex+1].element,imageContainers=__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(nextCellElement.querySelectorAll('.Slideshow__ImageContainer')),imageToReveal=null;if(breakpoint==='phone'){imageToReveal=imageContainers[0]}else{imageToReveal=imageContainers[1]}
// if(window.lazySizes&&imageToReveal&&imageToReveal.classList.contains('Image--lazyLoad')){lazySizes.loader.unveil(imageToReveal.firstElementChild)}}}},{key:'_onBreakpointChanged',value:function _onBreakpointChanged(event){if(event.detail.previousBreakpoint==='phone'&&event.detail.currentBreakpoint!=='phone'||event.detail.previousBreakpoint!=='phone'&&event.detail.currentBreakpoint==='phone'){this.selectedSlide=null;this._transitionToSlide(this.slideshow.flickityInstance.selectedElement)}}}]);return SlideshowSection}();__webpack_exports__["default"]=SlideshowSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__=__webpack_require__(1);var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__=__webpack_require__(0);var TestimonialsSection=function(){function TestimonialsSection(container){_classCallCheck(this,TestimonialsSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.navItems=__WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.TestimonialNav__Item'));this.carousel=new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('.TestimonialList'),{onSelect:this._testimonialChanged.bind(this)});this._attachListeners()}
// _createClass(TestimonialsSection,[{key:'onUnload',value:function onUnload(){this.carousel.destroy();this.delegateElement.off('click')}},{key:'onBlockSelect',value:function onBlockSelect(event){this.carousel.selectCell(event.target.getAttribute('data-slide-index'),!0)}},{key:'onBlockDeselect',value:function onBlockDeselect(){this.carousel.unpausePlayer()}},{key:'_testimonialClicked',value:function _testimonialClicked(event,target){this.carousel.pausePlayer();this.carousel.selectCell(parseInt(target.getAttribute('data-index')));this.carousel.unpausePlayer()}},{key:'_testimonialChanged',value:function _testimonialChanged(newIndex){this.navItems.forEach(function(item,index){item.classList.remove('is-selected');if(newIndex===index){item.classList.add('is-selected')}})}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','.TestimonialNav__Item',this._testimonialClicked.bind(this))}}]);return TestimonialsSection}();__webpack_exports__["default"]=TestimonialsSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__=__webpack_require__(0);var TimelineSection=function(){function TimelineSection(container){_classCallCheck(this,TimelineSection);this.element=container;this.delegateElement=new domDelegate.Delegate(this.element);this.items=__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Timeline__Item'));this.navItems=__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Timeline__NavItem'));this._attachListeners()}
// _createClass(TimelineSection,[{key:'onUnload',value:function onUnload(){this.delegateElement.off('click')}},{key:'onBlockSelect',value:function onBlockSelect(event){this.navItems[parseInt(event.target.getAttribute('data-index'))].click()}},{key:'_attachListeners',value:function _attachListeners(){this.delegateElement.on('click','.Timeline__NavItem',this._clickOnNavItem.bind(this))}},{key:'_clickOnNavItem',value:function _clickOnNavItem(event,target){var newItem=this.items[parseInt(target.getAttribute('data-index'))];if(newItem.classList.contains('is-selected')){return}
// var isContentLarger=!1,navWrapper=target.parentNode,scrollableOffset=0;fastdom.measure(function(){var scrollableWidth=navWrapper.scrollWidth,visibleWidth=navWrapper.offsetWidth;isContentLarger=visibleWidth<scrollableWidth;if(isContentLarger){var beginBound=target.offsetLeft,endBound=beginBound+target.offsetWidth,closerToLeft=beginBound<=visibleWidth-endBound;var itemToUse=null;if(closerToLeft){itemToUse=target.previousElementSibling||target}else{itemToUse=target.nextElementSibling||target}
// var itemBeginBound=itemToUse.offsetLeft-navWrapper.scrollLeft,itemEndBound=itemBeginBound+itemToUse.offsetWidth;if(itemEndBound>visibleWidth){scrollableOffset=itemEndBound-visibleWidth}else if(itemBeginBound<0){scrollableOffset=itemBeginBound}}});fastdom.mutate(function(){if(isContentLarger){navWrapper.scrollBy({behavior:'smooth',left:scrollableOffset})}
// target.classList.add('is-selected');__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target,'.is-selected').forEach(function(item){item.classList.remove('is-selected')});newItem.classList.add('is-selected');__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(newItem,'.is-selected').forEach(function(item){item.classList.remove('is-selected')})})}}]);return TimelineSection}();__webpack_exports__["default"]=TimelineSection},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__AddressesSection__=__webpack_require__(25);__webpack_require__.d(__webpack_exports__,"AddressesSection",function(){return __WEBPACK_IMPORTED_MODULE_0__AddressesSection__["default"]});var __WEBPACK_IMPORTED_MODULE_1__ArticleListSection__=__webpack_require__(26);__webpack_require__.d(__webpack_exports__,"ArticleListSection",function(){return __WEBPACK_IMPORTED_MODULE_1__ArticleListSection__["default"]});var __WEBPACK_IMPORTED_MODULE_2__ArticleSection__=__webpack_require__(27);__webpack_require__.d(__webpack_exports__,"ArticleSection",function(){return __WEBPACK_IMPORTED_MODULE_2__ArticleSection__["default"]});var __WEBPACK_IMPORTED_MODULE_3__CartSection__=__webpack_require__(29);__webpack_require__.d(__webpack_exports__,"CartSection",function(){return __WEBPACK_IMPORTED_MODULE_3__CartSection__["default"]});var __WEBPACK_IMPORTED_MODULE_4__CollectionListSection__=__webpack_require__(30);__webpack_require__.d(__webpack_exports__,"CollectionListSection",function(){return __WEBPACK_IMPORTED_MODULE_4__CollectionListSection__["default"]});var __WEBPACK_IMPORTED_MODULE_5__CollectionSection__=__webpack_require__(31);__webpack_require__.d(__webpack_exports__,"CollectionSection",function(){return __WEBPACK_IMPORTED_MODULE_5__CollectionSection__["default"]});var __WEBPACK_IMPORTED_MODULE_6__FaqSection__=__webpack_require__(32);__webpack_require__.d(__webpack_exports__,"FaqSection",function(){return __WEBPACK_IMPORTED_MODULE_6__FaqSection__["default"]});var __WEBPACK_IMPORTED_MODULE_7__FeaturedCollectionsSection__=__webpack_require__(33);__webpack_require__.d(__webpack_exports__,"FeaturedCollectionsSection",function(){return __WEBPACK_IMPORTED_MODULE_7__FeaturedCollectionsSection__["default"]});var __WEBPACK_IMPORTED_MODULE_8__FeaturedProductSection__=__webpack_require__(34);__webpack_require__.d(__webpack_exports__,"FeaturedProductSection",function(){return __WEBPACK_IMPORTED_MODULE_8__FeaturedProductSection__["default"]});var __WEBPACK_IMPORTED_MODULE_9__BackgroundVideoSection__=__webpack_require__(28);__webpack_require__.d(__webpack_exports__,"BackgroundVideoSection",function(){return __WEBPACK_IMPORTED_MODULE_9__BackgroundVideoSection__["default"]});var __WEBPACK_IMPORTED_MODULE_10__GiftCardSection__=__webpack_require__(35);__webpack_require__.d(__webpack_exports__,"GiftCardSection",function(){return __WEBPACK_IMPORTED_MODULE_10__GiftCardSection__["default"]});var __WEBPACK_IMPORTED_MODULE_11__HeaderSection__=__webpack_require__(36);__webpack_require__.d(__webpack_exports__,"HeaderSection",function(){return __WEBPACK_IMPORTED_MODULE_11__HeaderSection__["default"]});var __WEBPACK_IMPORTED_MODULE_12__ImageWithTextBlockSection__=__webpack_require__(37);__webpack_require__.d(__webpack_exports__,"ImageWithTextBlockSection",function(){return __WEBPACK_IMPORTED_MODULE_12__ImageWithTextBlockSection__["default"]});var __WEBPACK_IMPORTED_MODULE_13__InstagramSection__=__webpack_require__(38);__webpack_require__.d(__webpack_exports__,"InstagramSection",function(){return __WEBPACK_IMPORTED_MODULE_13__InstagramSection__["default"]});var __WEBPACK_IMPORTED_MODULE_14__LoginSection__=__webpack_require__(39);__webpack_require__.d(__webpack_exports__,"LoginSection",function(){return __WEBPACK_IMPORTED_MODULE_14__LoginSection__["default"]});var __WEBPACK_IMPORTED_MODULE_15__MapSection__=__webpack_require__(40);__webpack_require__.d(__webpack_exports__,"MapSection",function(){return __WEBPACK_IMPORTED_MODULE_15__MapSection__["default"]});var __WEBPACK_IMPORTED_MODULE_16__NewsletterPopupSection__=__webpack_require__(41);__webpack_require__.d(__webpack_exports__,"NewsletterPopupSection",function(){return __WEBPACK_IMPORTED_MODULE_16__NewsletterPopupSection__["default"]});var __WEBPACK_IMPORTED_MODULE_17__ProductSection__=__webpack_require__(42);__webpack_require__.d(__webpack_exports__,"ProductSection",function(){return __WEBPACK_IMPORTED_MODULE_17__ProductSection__["default"]});var __WEBPACK_IMPORTED_MODULE_18__RecentlyViewedProductsSection__=__webpack_require__(43);__webpack_require__.d(__webpack_exports__,"RecentlyViewedProductsSection",function(){return __WEBPACK_IMPORTED_MODULE_18__RecentlyViewedProductsSection__["default"]});var __WEBPACK_IMPORTED_MODULE_19__RelatedProductsSection__=__webpack_require__(44);__webpack_require__.d(__webpack_exports__,"RelatedProductsSection",function(){return __WEBPACK_IMPORTED_MODULE_19__RelatedProductsSection__["default"]});var __WEBPACK_IMPORTED_MODULE_20__SectionContainer__=__webpack_require__(46);__webpack_require__.d(__webpack_exports__,"SectionContainer",function(){return __WEBPACK_IMPORTED_MODULE_20__SectionContainer__["default"]});var __WEBPACK_IMPORTED_MODULE_21__SearchSection__=__webpack_require__(45);__webpack_require__.d(__webpack_exports__,"SearchSection",function(){return __WEBPACK_IMPORTED_MODULE_21__SearchSection__["default"]});var __WEBPACK_IMPORTED_MODULE_22__ShopNowSection__=__webpack_require__(47);__webpack_require__.d(__webpack_exports__,"ShopNowSection",function(){return __WEBPACK_IMPORTED_MODULE_22__ShopNowSection__["default"]});var __WEBPACK_IMPORTED_MODULE_23__ShopTheLookSection__=__webpack_require__(48);__webpack_require__.d(__webpack_exports__,"ShopTheLookSection",function(){return __WEBPACK_IMPORTED_MODULE_23__ShopTheLookSection__["default"]});var __WEBPACK_IMPORTED_MODULE_24__SidebarMenuSection__=__webpack_require__(49);__webpack_require__.d(__webpack_exports__,"SidebarMenuSection",function(){return __WEBPACK_IMPORTED_MODULE_24__SidebarMenuSection__["default"]});var __WEBPACK_IMPORTED_MODULE_25__SlideshowSection__=__webpack_require__(50);__webpack_require__.d(__webpack_exports__,"SlideshowSection",function(){return __WEBPACK_IMPORTED_MODULE_25__SlideshowSection__["default"]});var __WEBPACK_IMPORTED_MODULE_26__TestimonialsSection__=__webpack_require__(51);__webpack_require__.d(__webpack_exports__,"TestimonialsSection",function(){return __WEBPACK_IMPORTED_MODULE_26__TestimonialsSection__["default"]});var __WEBPACK_IMPORTED_MODULE_27__TimelineSection__=__webpack_require__(52);__webpack_require__.d(__webpack_exports__,"TimelineSection",function(){return __WEBPACK_IMPORTED_MODULE_27__TimelineSection__["default"]})},function(module,exports,__webpack_require__){__webpack_require__(3);__webpack_require__(7);__webpack_require__(5);__webpack_require__(0);__webpack_require__(10);__webpack_require__(2);__webpack_require__(6);__webpack_require__(1);__webpack_require__(19);__webpack_require__(12);__webpack_require__(8);__webpack_require__(20);__webpack_require__(21);__webpack_require__(13);__webpack_require__(22);__webpack_require__(9);__webpack_require__(14);__webpack_require__(4);__webpack_require__(15);__webpack_require__(11);__webpack_require__(17);__webpack_require__(23);__webpack_require__(18);__webpack_require__(16);__webpack_require__(24);__webpack_require__(25);__webpack_require__(26);__webpack_require__(27);__webpack_require__(28);__webpack_require__(29);__webpack_require__(30);__webpack_require__(31);__webpack_require__(32);__webpack_require__(33);__webpack_require__(34);__webpack_require__(35);__webpack_require__(36);__webpack_require__(37);__webpack_require__(38);__webpack_require__(39);__webpack_require__(40);__webpack_require__(41);__webpack_require__(42);__webpack_require__(43);__webpack_require__(44);__webpack_require__(45);__webpack_require__(46);__webpack_require__(47);__webpack_require__(48);__webpack_require__(49);__webpack_require__(50);__webpack_require__(51);__webpack_require__(52);__webpack_require__(53);module.exports=__webpack_require__(55)},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:!0});var __WEBPACK_IMPORTED_MODULE_0__components__=__webpack_require__(24);var __WEBPACK_IMPORTED_MODULE_1__helper__=__webpack_require__(6);var __WEBPACK_IMPORTED_MODULE_2__sections__=__webpack_require__(53);(function(){new __WEBPACK_IMPORTED_MODULE_0__components__.Collapsible();new __WEBPACK_IMPORTED_MODULE_0__components__.Modal();new __WEBPACK_IMPORTED_MODULE_1__helper__.ResponsiveHelper();if(window.theme.template!=='password'&&window.theme.template!=='gift_card'){new __WEBPACK_IMPORTED_MODULE_0__components__.LoadingBar()}
// var sections=new __WEBPACK_IMPORTED_MODULE_2__sections__.SectionContainer();sections.register('header',__WEBPACK_IMPORTED_MODULE_2__sections__.HeaderSection);sections.register('sidebar-menu',__WEBPACK_IMPORTED_MODULE_2__sections__.SidebarMenuSection);sections.register('cart',__WEBPACK_IMPORTED_MODULE_2__sections__.CartSection);sections.register('newsletter-popup',__WEBPACK_IMPORTED_MODULE_2__sections__.NewsletterPopupSection);sections.register('slideshow',__WEBPACK_IMPORTED_MODULE_2__sections__.SlideshowSection);sections.register('collection-list',__WEBPACK_IMPORTED_MODULE_2__sections__.CollectionListSection);sections.register('article-list',__WEBPACK_IMPORTED_MODULE_2__sections__.ArticleListSection);sections.register('featured-product',__WEBPACK_IMPORTED_MODULE_2__sections__.FeaturedProductSection);sections.register('image-with-text-block',__WEBPACK_IMPORTED_MODULE_2__sections__.ImageWithTextBlockSection);sections.register('timeline',__WEBPACK_IMPORTED_MODULE_2__sections__.TimelineSection);sections.register('instagram',__WEBPACK_IMPORTED_MODULE_2__sections__.InstagramSection);sections.register('map',__WEBPACK_IMPORTED_MODULE_2__sections__.MapSection);sections.register('featured-collections',__WEBPACK_IMPORTED_MODULE_2__sections__.FeaturedCollectionsSection);sections.register('shop-the-look',__WEBPACK_IMPORTED_MODULE_2__sections__.ShopTheLookSection);sections.register('testimonials',__WEBPACK_IMPORTED_MODULE_2__sections__.TestimonialsSection);sections.register('background-video',__WEBPACK_IMPORTED_MODULE_2__sections__.BackgroundVideoSection);sections.register('product',__WEBPACK_IMPORTED_MODULE_2__sections__.ProductSection);sections.register('related-products',__WEBPACK_IMPORTED_MODULE_2__sections__.RelatedProductsSection);sections.register('collection',__WEBPACK_IMPORTED_MODULE_2__sections__.CollectionSection);sections.register('article-list',__WEBPACK_IMPORTED_MODULE_2__sections__.ArticleListSection);sections.register('article',__WEBPACK_IMPORTED_MODULE_2__sections__.ArticleSection);sections.register('faq',__WEBPACK_IMPORTED_MODULE_2__sections__.FaqSection);sections.register('login',__WEBPACK_IMPORTED_MODULE_2__sections__.LoginSection);sections.register('addresses',__WEBPACK_IMPORTED_MODULE_2__sections__.AddressesSection);sections.register('gift-card',__WEBPACK_IMPORTED_MODULE_2__sections__.GiftCardSection);sections.register('search',__WEBPACK_IMPORTED_MODULE_2__sections__.SearchSection);sections.register('recently-viewed-products',__WEBPACK_IMPORTED_MODULE_2__sections__.RecentlyViewedProductsSection);sections.register('shop-now',__WEBPACK_IMPORTED_MODULE_2__sections__.ShopNowSection);(function(){if(window.theme.currencyConversionEnabled){var shopCurrency=window.theme.shopCurrency,currencySelectors=__WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.CurrencySelector__Select'));var currencyHasChanged=function currencyHasChanged(event){var newCurrency=event.target.value;currencySelectors.forEach(function(currencySelectorToUpdate){currencySelectorToUpdate.value=newCurrency});__WEBPACK_IMPORTED_MODULE_1__helper__.CurrencyHelper.convertAll()};currencySelectors.forEach(function(currencySelector){currencySelector.addEventListener('change',currencyHasChanged)});currencySelectors.forEach(function(currencySelector){currencySelector.addEventListener('click',currencyHasChanged)});var currentCurrency=shopCurrency;try{currentCurrency=localStorage.getItem('currency')||shopCurrency}catch(exception){currentCurrency=shopCurrency}
// if(currentCurrency!==shopCurrency){currencySelectors.forEach(function(currencySelector){currencySelector.value=currentCurrency});__WEBPACK_IMPORTED_MODULE_1__helper__.CurrencyHelper.convertAll()}}})();(function(){__WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Rte table')).forEach(function(table){table.outerHTML='<div class="TableWrapper">'+table.outerHTML+'</div>'});__WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Rte iframe')).forEach(function(iframe){iframe.outerHTML='<div class="VideoWrapper">'+iframe.outerHTML+'</div>';iframe.src=iframe.src})})();(function(){var documentDelegate=new domDelegate.Delegate(document.body),announcementBar=document.querySelector('.AnnouncementBar');documentDelegate.on('click','[href^="#"], [data-href]',function(event,target){var selector=target.hasAttribute('href')?target.getAttribute('href'):target.getAttribute('data-href');if(selector==='#'){return}
// var element=document.querySelector(selector),offset=parseInt(target.getAttribute('data-offset')||0);if(announcementBar){offset-=announcementBar.clientHeight}
// window.scrollTo({behavior:'smooth',top:element.offsetTop-offset});event.preventDefault()})})();(function(){var windowWidth=window.innerWidth,headerSection=document.getElementById('shopify-section-header');window.addEventListener('resize',function(){var newWidth=-1;fastdom.measure(function(){newWidth=window.innerWidth});fastdom.mutate(function(){if(newWidth===windowWidth){return}
// windowWidth=newWidth;document.documentElement.style.setProperty('--window-height',window.innerHeight+'px');if(headerSection){document.documentElement.style.setProperty('--header-height',headerSection.clientHeight+'px')}})})})();(function(){function handleFirstTab(event){if(event.keyCode===9){document.body.classList.add('is-tabbing');window.removeEventListener('keydown',handleFirstTab)}}
// window.addEventListener('keydown',handleFirstTab)})();__WEBPACK_IMPORTED_MODULE_0__components__.PageTransition.getInstance()})()}])

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || !1;
            descriptor.configurable = !0;
            if ("value"in descriptor)
                descriptor.writable = !0;
            Object.defineProperty(target, descriptor.key, descriptor)
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
            defineProperties(Constructor, staticProps);
        return Constructor
    }
}();
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function")
    }
}
(function(modules) {
    var installedModules = {};
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: !1,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = !0;
        return module.exports
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                configurable: !1,
                enumerable: !0,
                get: getter
            })
        }
    }
    ;
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module['default']
        }
        : function getModuleExports() {
            return module
        }
        ;
        __webpack_require__.d(getter, 'a', getter);
        return getter
    }
    ;
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    }
    ;
    __webpack_require__.p = "";
    return __webpack_require__(__webpack_require__.s = 54)
}
)([function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var Dom = function() {
        function Dom() {
            _classCallCheck(this, Dom)
        }
        _createClass(Dom, null, [{
            key: 'getSiblings',
            value: function getSiblings(element, filter) {
                var includeSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
                var siblings = [];
                var currentElement = element;
                while (currentElement = currentElement.previousElementSibling) {
                    if (!filter || currentElement.matches(filter)) {
                        siblings.push(currentElement)
                    }
                }
                if (includeSelf) {
                    siblings.push(element)
                }
                currentElement = element;
                while (currentElement = currentElement.nextElementSibling) {
                    if (!filter || currentElement.matches(filter)) {
                        siblings.push(currentElement)
                    }
                }
                return siblings
            }
        }, {
            key: 'nodeListToArray',
            value: function nodeListToArray(nodeList, filter) {
                var items = [];
                for (var i = 0; i !== nodeList.length; ++i) {
                    if (!filter || nodeList[i].matches(filter)) {
                        items.push(nodeList[i])
                    }
                }
                return items
            }
        }, {
            key: 'outerWidthWithMargin',
            value: function outerWidthWithMargin(element) {
                var width = element.offsetWidth
                  , style = getComputedStyle(element);
                width += parseInt(style.marginLeft) + parseInt(style.marginRight);
                return width
            }
        }]);
        return Dom
    }();
    __webpack_exports__["default"] = Dom
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Responsive__ = __webpack_require__(2);
    var Carousel = function() {
        function Carousel(element) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            _classCallCheck(this, Carousel);
            this.element = element;
            this.initialConfig = JSON.parse(element.getAttribute('data-flickity-config'));
            this.options = options;
            this._attachListeners();
            this._build()
        }
        _createClass(Carousel, [{
            key: 'destroy',
            value: function destroy() {
                this.flickityInstance.destroy();
                if (this.initialConfig.breakpoints !== undefined) {
                    document.removeEventListener('breakpoint:changed', this._onBreakpointChangedListener)
                }
            }
        }, {
            key: 'selectCell',
            value: function selectCell(index) {
                var shouldPause = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
                var shouldAnimate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
                if (shouldPause) {
                    this.flickityInstance.pausePlayer()
                }
                this.flickityInstance.select(index, !1, !shouldAnimate)
            }
        }, {
            key: 'pausePlayer',
            value: function pausePlayer() {
                this.flickityInstance.pausePlayer()
            }
        }, {
            key: 'unpausePlayer',
            value: function unpausePlayer() {
                this.flickityInstance.unpausePlayer()
            }
        }, {
            key: 'resize',
            value: function resize() {
                this.flickityInstance.resize()
            }
        }, {
            key: 'getSelectedIndex',
            value: function getSelectedIndex() {
                return this.flickityInstance.selectedIndex
            }
        }, {
            key: 'getSelectedCell',
            value: function getSelectedCell() {
                return this.flickityInstance.selectedCell.element
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                if (this.initialConfig.breakpoints !== undefined) {
                    this._onBreakpointChangedListener = this._onBreakpointChanged.bind(this);
                    document.addEventListener('breakpoint:changed', this._onBreakpointChangedListener)
                }
            }
        }, {
            key: '_build',
            value: function _build() {
                var _this = this;
                var config = this._processConfig();
                this.flickityInstance = new Flickity(this.element,config);
                this._validateDraggable();
                this.selectedIndex = this.flickityInstance.selectedIndex;
                this.flickityInstance.on('resize', this._validateDraggable.bind(this));
                if (this.options.onSelect) {
                    this.flickityInstance.on('select', function() {
                        if (_this.selectedIndex !== _this.flickityInstance.selectedIndex) {
                            _this.options.onSelect(_this.flickityInstance.selectedIndex, _this.flickityInstance.selectedCell.element);
                            _this.selectedIndex = _this.flickityInstance.selectedIndex
                        }
                    })
                }
                if (this.options.onClick) {
                    this.flickityInstance.on('staticClick', function(event, pointer, cell, index) {
                        _this.options.onClick(cell, index)
                    })
                }
            }
        }, {
            key: '_validateDraggable',
            value: function _validateDraggable() {
                var isActive = this.flickityInstance.isActive || !1;
                if (!isActive || !this.flickityInstance.options.draggable) {
                    return
                }
                if (undefined === this.flickityInstance.selectedElements || this.flickityInstance.selectedElements.length === this.flickityInstance.cells.length) {
                    this.flickityInstance.unbindDrag()
                } else {
                    this.flickityInstance.bindDrag()
                }
            }
        }, {
            key: '_processConfig',
            value: function _processConfig() {
                var config = Object.assign({}, this.initialConfig);
                delete config.breakpoints;
                if (this.initialConfig.breakpoints === undefined) {
                    return config
                }
                var breakpoints = this.initialConfig.breakpoints;
                breakpoints.forEach(function(breakpoint) {
                    if (__WEBPACK_IMPORTED_MODULE_0__helper_Responsive__["default"].matchesBreakpoint(breakpoint['matches'])) {
                        config = Object.assign(config, breakpoint['settings'])
                    }
                });
                return config
            }
        }, {
            key: '_onBreakpointChanged',
            value: function _onBreakpointChanged() {
                this.flickityInstance.destroy();
                this._build()
            }
        }]);
        return Carousel
    }();
    __webpack_exports__["default"] = Carousel
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var Responsive = function() {
        function Responsive() {
            var _this2 = this;
            _classCallCheck(this, Responsive);
            this.currentBreakpoint = Responsive.getCurrentBreakpoint();
            window.addEventListener('resize', function() {
                var newBreakpoint = Responsive.getCurrentBreakpoint();
                if (_this2.currentBreakpoint === newBreakpoint) {
                    return
                }
                document.dispatchEvent(new CustomEvent('breakpoint:changed',{
                    detail: {
                        previousBreakpoint: _this2.currentBreakpoint,
                        currentBreakpoint: newBreakpoint
                    }
                }));
                _this2.currentBreakpoint = newBreakpoint
            })
        }
        _createClass(Responsive, null, [{
            key: 'matchesBreakpoint',
            value: function matchesBreakpoint(breakpoint) {
                switch (breakpoint) {
                case 'phone':
                    return window.matchMedia('screen and (max-width: 640px)').matches;
                case 'tablet':
                    return window.matchMedia('screen and (min-width: 641px) and (max-width: 1007px)').matches;
                case 'tablet-and-up':
                    return window.matchMedia('screen and (min-width: 641px)').matches;
                case 'pocket':
                    return window.matchMedia('screen and (max-width: 1007px)').matches;
                case 'lap':
                    return window.matchMedia('screen and (min-width: 1008px) and (max-width: 1279px)').matches;
                case 'lap-and-up':
                    return window.matchMedia('screen and (min-width: 1008px)').matches;
                case 'desk':
                    return window.matchMedia('screen and (min-width: 1280px)').matches;
                case 'widescreen':
                    return window.matchMedia('screen and (min-width: 1600px)').matches
                }
            }
        }, {
            key: 'getCurrentBreakpoint',
            value: function getCurrentBreakpoint() {
                if (window.matchMedia('screen and (max-width: 640px)').matches) {
                    return 'phone'
                }
                if (window.matchMedia('screen and (min-width: 641px) and (max-width: 1007px)').matches) {
                    return 'tablet'
                }
                if (window.matchMedia('screen and (min-width: 1008px) and (max-width: 1279px)').matches) {
                    return 'lap'
                }
                if (window.matchMedia('screen and (min-width: 1280px)').matches) {
                    return 'desk'
                }
            }
        }]);
        return Responsive
    }();
    __webpack_exports__["default"] = Responsive
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var Accessibility = function() {
        function Accessibility() {
            _classCallCheck(this, Accessibility)
        }
        _createClass(Accessibility, null, [{
            key: 'trapFocus',
            value: function trapFocus(container, namespace) {
                this.listeners = this.listeners || {};
                var elementToFocus = container.querySelector('[autofocus]') || container;
                container.setAttribute('tabindex', '-1');
                elementToFocus.focus();
                this.listeners[namespace] = function(event) {
                    if (container !== event.target && !container.contains(event.target)) {
                        container.focus()
                    }
                }
                ;
                document.addEventListener('focusin', this.listeners[namespace])
            }
        }, {
            key: 'removeTrapFocus',
            value: function removeTrapFocus(container, namespace) {
                if (container) {
                    container.removeAttribute('tabindex')
                }
                document.removeEventListener('focusin', this.listeners[namespace])
            }
        }, {
            key: 'clearTrapFocus',
            value: function clearTrapFocus() {
                for (var key in this.listeners) {
                    if (this.listeners.hasOwnProperty(key)) {
                        document.removeEventListener('focusin', this.listeners[key])
                    }
                }
                this.listeners = {}
            }
        }]);
        return Accessibility
    }();
    __webpack_exports__["default"] = Accessibility
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var ProductItemColorSwatch = function() {
        function ProductItemColorSwatch(element) {
            _classCallCheck(this, ProductItemColorSwatch);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.delegateElement.on('change', '.ColorSwatch__Radio', this._colorChanged.bind(this));
            $('.ColorHolder .ColorSwatch').each(function() {
                let col = $(this).attr('data-background-image');
                $(this).css('background-image', 'url(' + col + ')')
            })
        }
        _createClass(ProductItemColorSwatch, [{
            key: '_colorChanged',
            value: function _colorChanged(event, target) {
                var productItem = target.closest('.ProductItem')
                  , variantUrl = target.getAttribute('data-variant-url');
                productItem.querySelector('.ProductItem__ImageWrapper').setAttribute('href', variantUrl);
                productItem.querySelector('.ProductItem__Title > a').setAttribute('href', variantUrl);
                var originalImageElement = productItem.querySelector('.ProductItem__Image:not(.ProductItem__Image--alternate)');
                if (target.hasAttribute('data-image-url') && target.getAttribute('data-image-id') !== originalImageElement.getAttribute('data-image-id')) {
                    var newImageElement = document.createElement('img');
                    newImageElement.className = 'ProductItem__Image Image--fadeIn Image--lazyLoad';
                    newImageElement.setAttribute('data-image-id', target.getAttribute('data-image-id'));
                    newImageElement.setAttribute('data-src', target.getAttribute('data-image-url'));
                    newImageElement.setAttribute('data-widths', target.getAttribute('data-image-widths'));
                    newImageElement.setAttribute('data-sizes', 'auto');
                    originalImageElement.parentNode.style.paddingBottom = 100.0 / target.getAttribute('data-image-aspect-ratio') + '%';
                    originalImageElement.parentNode.style.setProperty('--aspect-ratio', target.getAttribute('data-image-aspect-ratio'));
                    originalImageElement.parentNode.replaceChild(newImageElement, originalImageElement)
                }
            }
        }]);
        return ProductItemColorSwatch
    }();
    __webpack_exports__["default"] = ProductItemColorSwatch
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__Dom__ = __webpack_require__(0);
    var Currency = function() {
        function Currency() {
            _classCallCheck(this, Currency)
        }
        _createClass(Currency, null, [{
            key: 'formatMoney',
            value: function formatMoney(cents, format) {
                if (typeof cents === 'string') {
                    cents = cents.replace('.', '')
                }
                var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/
                  , formatString = format || '${{amount}}';
                function defaultTo(value, defaultValue) {
                    return value == null || value !== value ? defaultValue : value
                }
                function formatWithDelimiters(number, precision, thousands, decimal) {
                    precision = defaultTo(precision, 2);
                    thousands = defaultTo(thousands, ',');
                    decimal = defaultTo(decimal, '.');
                    if (isNaN(number) || number == null) {
                        return 0
                    }
                    number = (number / 100.0).toFixed(precision);
                    var parts = number.split('.')
                      , dollarsAmount = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands)
                      , centsAmount = parts[1] ? decimal + parts[1] : '';
                    return dollarsAmount + centsAmount
                }
                var value = '';
                switch (formatString.match(placeholderRegex)[1]) {
                case 'amount':
                    value = formatWithDelimiters(cents, 2);
                    break;
                case 'amount_no_decimals':
                    value = formatWithDelimiters(cents, 0);
                    break;
                case 'amount_with_space_separator':
                    value = formatWithDelimiters(cents, 2, ' ', '.');
                    break;
                case 'amount_no_decimals_with_comma_separator':
                    value = formatWithDelimiters(cents, 0, ',', '.');
                    break;
                case 'amount_no_decimals_with_space_separator':
                    value = formatWithDelimiters(cents, 0, ' ');
                    break;
                case 'amount_with_comma_separator':
                    value = formatWithDelimiters(cents, 2, '.', ',');
                    break
                }
                return formatString.replace(placeholderRegex, value).replace('.00', '')
            }
        }, {
            key: 'convertAll',
            value: function convertAll(selector) {
                var _this3 = this;
                var moneyFormats = {
                    "USD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} USD"
                    },
                    "EUR": {
                        "money_format": "&euro;{{amount}}",
                        "money_with_currency_format": "&euro;{{amount}} EUR"
                    },
                    "GBP": {
                        "money_format": "&pound;{{amount}}",
                        "money_with_currency_format": "&pound;{{amount}} GBP"
                    },
                    "CAD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} CAD"
                    },
                    "ALL": {
                        "money_format": "Lek {{amount}}",
                        "money_with_currency_format": "Lek {{amount}} ALL"
                    },
                    "DZD": {
                        "money_format": "DA {{amount}}",
                        "money_with_currency_format": "DA {{amount}} DZD"
                    },
                    "AOA": {
                        "money_format": "Kz{{amount}}",
                        "money_with_currency_format": "Kz{{amount}} AOA"
                    },
                    "ARS": {
                        "money_format": "${{amount_with_comma_separator}}",
                        "money_with_currency_format": "${{amount_with_comma_separator}} ARS"
                    },
                    "AMD": {
                        "money_format": "{{amount}} AMD",
                        "money_with_currency_format": "{{amount}} AMD"
                    },
                    "AWG": {
                        "money_format": "Afl{{amount}}",
                        "money_with_currency_format": "Afl{{amount}} AWG"
                    },
                    "AUD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} AUD"
                    },
                    "BBD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} Bds"
                    },
                    "AZN": {
                        "money_format": "m.{{amount}}",
                        "money_with_currency_format": "m.{{amount}} AZN"
                    },
                    "BDT": {
                        "money_format": "Tk {{amount}}",
                        "money_with_currency_format": "Tk {{amount}} BDT"
                    },
                    "BSD": {
                        "money_format": "BS${{amount}}",
                        "money_with_currency_format": "BS${{amount}} BSD"
                    },
                    "BHD": {
                        "money_format": "{{amount}}0 BD",
                        "money_with_currency_format": "{{amount}}0 BHD"
                    },
                    "BYR": {
                        "money_format": "Br {{amount}}",
                        "money_with_currency_format": "Br {{amount}} BYR"
                    },
                    "BZD": {
                        "money_format": "BZ${{amount}}",
                        "money_with_currency_format": "BZ${{amount}} BZD"
                    },
                    "BTN": {
                        "money_format": "Nu {{amount}}",
                        "money_with_currency_format": "Nu {{amount}} BTN"
                    },
                    "BAM": {
                        "money_format": "KM {{amount_with_comma_separator}}",
                        "money_with_currency_format": "KM {{amount_with_comma_separator}} BAM"
                    },
                    "BRL": {
                        "money_format": "R$ {{amount_with_comma_separator}}",
                        "money_with_currency_format": "R$ {{amount_with_comma_separator}} BRL"
                    },
                    "BOB": {
                        "money_format": "Bs{{amount_with_comma_separator}}",
                        "money_with_currency_format": "Bs{{amount_with_comma_separator}} BOB"
                    },
                    "BWP": {
                        "money_format": "P{{amount}}",
                        "money_with_currency_format": "P{{amount}} BWP"
                    },
                    "BND": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} BND"
                    },
                    "BGN": {
                        "money_format": "{{amount}} Ð»Ð²",
                        "money_with_currency_format": "{{amount}} Ð»Ð² BGN"
                    },
                    "MMK": {
                        "money_format": "K{{amount}}",
                        "money_with_currency_format": "K{{amount}} MMK"
                    },
                    "KHR": {
                        "money_format": "KHR{{amount}}",
                        "money_with_currency_format": "KHR{{amount}}"
                    },
                    "KYD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} KYD"
                    },
                    "XAF": {
                        "money_format": "FCFA{{amount}}",
                        "money_with_currency_format": "FCFA{{amount}} XAF"
                    },
                    "CLP": {
                        "money_format": "${{amount_no_decimals}}",
                        "money_with_currency_format": "${{amount_no_decimals}} CLP"
                    },
                    "CNY": {
                        "money_format": "&#165;{{amount}}",
                        "money_with_currency_format": "&#165;{{amount}} CNY"
                    },
                    "COP": {
                        "money_format": "${{amount_with_comma_separator}}",
                        "money_with_currency_format": "${{amount_with_comma_separator}} COP"
                    },
                    "CRC": {
                        "money_format": "&#8353; {{amount_with_comma_separator}}",
                        "money_with_currency_format": "&#8353; {{amount_with_comma_separator}} CRC"
                    },
                    "HRK": {
                        "money_format": "{{amount_with_comma_separator}} kn",
                        "money_with_currency_format": "{{amount_with_comma_separator}} kn HRK"
                    },
                    "CZK": {
                        "money_format": "{{amount_with_comma_separator}} K&#269;",
                        "money_with_currency_format": "{{amount_with_comma_separator}} K&#269;"
                    },
                    "DKK": {
                        "money_format": "{{amount_with_comma_separator}}",
                        "money_with_currency_format": "kr.{{amount_with_comma_separator}}"
                    },
                    "DOP": {
                        "money_format": "RD$ {{amount}}",
                        "money_with_currency_format": "RD$ {{amount}}"
                    },
                    "XCD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "EC${{amount}}"
                    },
                    "EGP": {
                        "money_format": "LE {{amount}}",
                        "money_with_currency_format": "LE {{amount}} EGP"
                    },
                    "ETB": {
                        "money_format": "Br{{amount}}",
                        "money_with_currency_format": "Br{{amount}} ETB"
                    },
                    "XPF": {
                        "money_format": "{{amount_no_decimals_with_comma_separator}} XPF",
                        "money_with_currency_format": "{{amount_no_decimals_with_comma_separator}} XPF"
                    },
                    "FJD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "FJ${{amount}}"
                    },
                    "GMD": {
                        "money_format": "D {{amount}}",
                        "money_with_currency_format": "D {{amount}} GMD"
                    },
                    "GHS": {
                        "money_format": "GH&#8373;{{amount}}",
                        "money_with_currency_format": "GH&#8373;{{amount}}"
                    },
                    "GTQ": {
                        "money_format": "Q{{amount}}",
                        "money_with_currency_format": "{{amount}} GTQ"
                    },
                    "GYD": {
                        "money_format": "G${{amount}}",
                        "money_with_currency_format": "${{amount}} GYD"
                    },
                    "GEL": {
                        "money_format": "{{amount}} GEL",
                        "money_with_currency_format": "{{amount}} GEL"
                    },
                    "HNL": {
                        "money_format": "L {{amount}}",
                        "money_with_currency_format": "L {{amount}} HNL"
                    },
                    "HKD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "HK${{amount}}"
                    },
                    "HUF": {
                        "money_format": "{{amount_no_decimals_with_comma_separator}}",
                        "money_with_currency_format": "{{amount_no_decimals_with_comma_separator}} Ft"
                    },
                    "ISK": {
                        "money_format": "{{amount_no_decimals}} kr",
                        "money_with_currency_format": "{{amount_no_decimals}} kr ISK"
                    },
                    "INR": {
                        "money_format": "Rs. {{amount}}",
                        "money_with_currency_format": "Rs. {{amount}}"
                    },
                    "IDR": {
                        "money_format": "{{amount_with_comma_separator}}",
                        "money_with_currency_format": "Rp {{amount_with_comma_separator}}"
                    },
                    "ILS": {
                        "money_format": "{{amount}} NIS",
                        "money_with_currency_format": "{{amount}} NIS"
                    },
                    "JMD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} JMD"
                    },
                    "JPY": {
                        "money_format": "&#165;{{amount_no_decimals}}",
                        "money_with_currency_format": "&#165;{{amount_no_decimals}} JPY"
                    },
                    "JEP": {
                        "money_format": "&pound;{{amount}}",
                        "money_with_currency_format": "&pound;{{amount}} JEP"
                    },
                    "JOD": {
                        "money_format": "{{amount}}0 JD",
                        "money_with_currency_format": "{{amount}}0 JOD"
                    },
                    "KZT": {
                        "money_format": "{{amount}} KZT",
                        "money_with_currency_format": "{{amount}} KZT"
                    },
                    "KES": {
                        "money_format": "KSh{{amount}}",
                        "money_with_currency_format": "KSh{{amount}}"
                    },
                    "KWD": {
                        "money_format": "{{amount}}0 KD",
                        "money_with_currency_format": "{{amount}}0 KWD"
                    },
                    "KGS": {
                        "money_format": "Ð»Ð²{{amount}}",
                        "money_with_currency_format": "Ð»Ð²{{amount}}"
                    },
                    "LVL": {
                        "money_format": "Ls {{amount}}",
                        "money_with_currency_format": "Ls {{amount}} LVL"
                    },
                    "LBP": {
                        "money_format": "L&pound;{{amount}}",
                        "money_with_currency_format": "L&pound;{{amount}} LBP"
                    },
                    "LTL": {
                        "money_format": "{{amount}} Lt",
                        "money_with_currency_format": "{{amount}} Lt"
                    },
                    "MGA": {
                        "money_format": "Ar {{amount}}",
                        "money_with_currency_format": "Ar {{amount}} MGA"
                    },
                    "MKD": {
                        "money_format": "Ð´ÐµÐ½ {{amount}}",
                        "money_with_currency_format": "Ð´ÐµÐ½ {{amount}} MKD"
                    },
                    "MOP": {
                        "money_format": "MOP${{amount}}",
                        "money_with_currency_format": "MOP${{amount}}"
                    },
                    "MVR": {
                        "money_format": "Rf{{amount}}",
                        "money_with_currency_format": "Rf{{amount}} MRf"
                    },
                    "MXN": {
                        "money_format": "$ {{amount}}",
                        "money_with_currency_format": "$ {{amount}} MXN"
                    },
                    "MYR": {
                        "money_format": "RM{{amount}} MYR",
                        "money_with_currency_format": "RM{{amount}} MYR"
                    },
                    "MUR": {
                        "money_format": "Rs {{amount}}",
                        "money_with_currency_format": "Rs {{amount}} MUR"
                    },
                    "MDL": {
                        "money_format": "{{amount}} MDL",
                        "money_with_currency_format": "{{amount}} MDL"
                    },
                    "MAD": {
                        "money_format": "{{amount}} dh",
                        "money_with_currency_format": "Dh {{amount}} MAD"
                    },
                    "MNT": {
                        "money_format": "{{amount_no_decimals}} &#8366",
                        "money_with_currency_format": "{{amount_no_decimals}} MNT"
                    },
                    "MZN": {
                        "money_format": "{{amount}} Mt",
                        "money_with_currency_format": "Mt {{amount}} MZN"
                    },
                    "NAD": {
                        "money_format": "N${{amount}}",
                        "money_with_currency_format": "N${{amount}} NAD"
                    },
                    "NPR": {
                        "money_format": "Rs{{amount}}",
                        "money_with_currency_format": "Rs{{amount}} NPR"
                    },
                    "ANG": {
                        "money_format": "&fnof;{{amount}}",
                        "money_with_currency_format": "{{amount}} NA&fnof;"
                    },
                    "NZD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} NZD"
                    },
                    "NIO": {
                        "money_format": "C${{amount}}",
                        "money_with_currency_format": "C${{amount}} NIO"
                    },
                    "NGN": {
                        "money_format": "&#8358;{{amount}}",
                        "money_with_currency_format": "&#8358;{{amount}} NGN"
                    },
                    "NOK": {
                        "money_format": "kr {{amount_with_comma_separator}}",
                        "money_with_currency_format": "kr {{amount_with_comma_separator}} NOK"
                    },
                    "OMR": {
                        "money_format": "{{amount_with_comma_separator}} OMR",
                        "money_with_currency_format": "{{amount_with_comma_separator}} OMR"
                    },
                    "PKR": {
                        "money_format": "Rs.{{amount}}",
                        "money_with_currency_format": "Rs.{{amount}} PKR"
                    },
                    "PGK": {
                        "money_format": "K {{amount}}",
                        "money_with_currency_format": "K {{amount}} PGK"
                    },
                    "PYG": {
                        "money_format": "Gs. {{amount_no_decimals_with_comma_separator}}",
                        "money_with_currency_format": "Gs. {{amount_no_decimals_with_comma_separator}} PYG"
                    },
                    "PEN": {
                        "money_format": "S/. {{amount}}",
                        "money_with_currency_format": "S/. {{amount}} PEN"
                    },
                    "PHP": {
                        "money_format": "&#8369;{{amount}}",
                        "money_with_currency_format": "&#8369;{{amount}} PHP"
                    },
                    "PLN": {
                        "money_format": "{{amount_with_comma_separator}} zl",
                        "money_with_currency_format": "{{amount_with_comma_separator}} zl PLN"
                    },
                    "QAR": {
                        "money_format": "QAR {{amount_with_comma_separator}}",
                        "money_with_currency_format": "QAR {{amount_with_comma_separator}}"
                    },
                    "RON": {
                        "money_format": "{{amount_with_comma_separator}} lei",
                        "money_with_currency_format": "{{amount_with_comma_separator}} lei RON"
                    },
                    "RUB": {
                        "money_format": "&#1088;&#1091;&#1073;{{amount_with_comma_separator}}",
                        "money_with_currency_format": "&#1088;&#1091;&#1073;{{amount_with_comma_separator}} RUB"
                    },
                    "RWF": {
                        "money_format": "{{amount_no_decimals}} RF",
                        "money_with_currency_format": "{{amount_no_decimals}} RWF"
                    },
                    "WST": {
                        "money_format": "WS$ {{amount}}",
                        "money_with_currency_format": "WS$ {{amount}} WST"
                    },
                    "SAR": {
                        "money_format": "{{amount}} SR",
                        "money_with_currency_format": "{{amount}} SAR"
                    },
                    "STD": {
                        "money_format": "Db {{amount}}",
                        "money_with_currency_format": "Db {{amount}} STD"
                    },
                    "RSD": {
                        "money_format": "{{amount}} RSD",
                        "money_with_currency_format": "{{amount}} RSD"
                    },
                    "SCR": {
                        "money_format": "Rs {{amount}}",
                        "money_with_currency_format": "Rs {{amount}} SCR"
                    },
                    "SGD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} SGD"
                    },
                    "SYP": {
                        "money_format": "S&pound;{{amount}}",
                        "money_with_currency_format": "S&pound;{{amount}} SYP"
                    },
                    "ZAR": {
                        "money_format": "R {{amount}}",
                        "money_with_currency_format": "R {{amount}} ZAR"
                    },
                    "KRW": {
                        "money_format": "&#8361;{{amount_no_decimals}}",
                        "money_with_currency_format": "&#8361;{{amount_no_decimals}} KRW"
                    },
                    "LKR": {
                        "money_format": "Rs {{amount}}",
                        "money_with_currency_format": "Rs {{amount}} LKR"
                    },
                    "SEK": {
                        "money_format": "{{amount_no_decimals}} kr",
                        "money_with_currency_format": "{{amount_no_decimals}} kr SEK"
                    },
                    "CHF": {
                        "money_format": "{{amount}} CHF",
                        "money_with_currency_format": "{{amount}} CHF"
                    },
                    "TWD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} TWD"
                    },
                    "THB": {
                        "money_format": "{{amount}} &#xe3f;",
                        "money_with_currency_format": "{{amount}} &#xe3f; THB"
                    },
                    "TZS": {
                        "money_format": "{{amount}} TZS",
                        "money_with_currency_format": "{{amount}} TZS"
                    },
                    "TTD": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}} TTD"
                    },
                    "TND": {
                        "money_format": "{{amount}}",
                        "money_with_currency_format": "{{amount}} DT"
                    },
                    "TRY": {
                        "money_format": "{{amount}}TL",
                        "money_with_currency_format": "{{amount}}TL"
                    },
                    "UGX": {
                        "money_format": "Ush {{amount_no_decimals}}",
                        "money_with_currency_format": "Ush {{amount_no_decimals}} UGX"
                    },
                    "UAH": {
                        "money_format": "â‚´{{amount}}",
                        "money_with_currency_format": "â‚´{{amount}} UAH"
                    },
                    "AED": {
                        "money_format": "Dhs. {{amount}}",
                        "money_with_currency_format": "Dhs. {{amount}} AED"
                    },
                    "UYU": {
                        "money_format": "${{amount_with_comma_separator}}",
                        "money_with_currency_format": "${{amount_with_comma_separator}} UYU"
                    },
                    "VUV": {
                        "money_format": "${{amount}}",
                        "money_with_currency_format": "${{amount}}VT"
                    },
                    "VEF": {
                        "money_format": "Bs. {{amount_with_comma_separator}}",
                        "money_with_currency_format": "Bs. {{amount_with_comma_separator}} VEF"
                    },
                    "VND": {
                        "money_format": "{{amount_no_decimals_with_comma_separator}}&#8363;",
                        "money_with_currency_format": "{{amount_no_decimals_with_comma_separator}} VND"
                    },
                    "XBT": {
                        "money_format": "{{amount_no_decimals}} BTC",
                        "money_with_currency_format": "{{amount_no_decimals}} BTC"
                    },
                    "XOF": {
                        "money_format": "CFA{{amount}}",
                        "money_with_currency_format": "CFA{{amount}} XOF"
                    },
                    "ZMW": {
                        "money_format": "K{{amount_no_decimals_with_comma_separator}}",
                        "money_with_currency_format": "ZMW{{amount_no_decimals_with_comma_separator}}"
                    }
                };
                var baseCurrency = window.theme.shopCurrency
                  , newCurrency = document.querySelector('.CurrencySelector__Select').value;
                __WEBPACK_IMPORTED_MODULE_0__Dom__["default"].nodeListToArray((selector || document).querySelectorAll('[data-money-convertible]')).forEach(function(item) {
                    if (!item.hasAttribute('data-currency-' + baseCurrency)) {
                        item.setAttribute('data-currency-' + baseCurrency, item.innerHTML)
                    }
                    if (item.getAttribute('data-currency') === newCurrency) {
                        return
                    }
                    var baseAmount = item.getAttribute('data-currency-' + baseCurrency);
                    if (item.hasAttribute('data-currency-' + newCurrency)) {
                        item.innerHTML = item.getAttribute('data-currency-' + newCurrency)
                    } else {
                        var newFormat = moneyFormats[newCurrency][window.theme.currencyConversionMoneyFormat] || '{{amount}}';
                        if (window.theme.moneyFormat.indexOf('with_comma_separator') !== -1) {
                            baseAmount = baseAmount.replace(/[,.]/g, function(match) {
                                return match === ',' ? '.' : ','
                            })
                        }
                        var cents = window.Currency.convert(parseFloat(baseAmount.replace(/^[^0-9]+|[^0-9.]/g, '', ''), 10) * 100, baseCurrency, newCurrency);
                        if (window.theme.currencyConversionRoundAmounts) {
                            cents = Math.round(cents / 100) * 100
                        }
                        var newFormattedAmount = _this3.formatMoney(cents, newFormat);
                        item.innerHTML = newFormattedAmount;
                        item.setAttribute('data-currency-' + newCurrency, newFormattedAmount)
                    }
                    item.setAttribute('data-currency', newCurrency)
                });
                localStorage.setItem('currency', newCurrency)
            }
        }]);
        return Currency
    }();
    __webpack_exports__["default"] = Currency
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__Accessibility__ = __webpack_require__(3);
    __webpack_require__.d(__webpack_exports__, "AccessibilityHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_0__Accessibility__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_1__Animation__ = __webpack_require__(7);
    __webpack_require__.d(__webpack_exports__, "AnimationHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_1__Animation__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_2__Currency__ = __webpack_require__(5);
    __webpack_require__.d(__webpack_exports__, "CurrencyHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_2__Currency__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_3__Dom__ = __webpack_require__(0);
    __webpack_require__.d(__webpack_exports__, "DomHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_3__Dom__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_4__Image__ = __webpack_require__(10);
    __webpack_require__.d(__webpack_exports__, "ImageHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_4__Image__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_5__Responsive__ = __webpack_require__(2);
    __webpack_require__.d(__webpack_exports__, "ResponsiveHelper", function() {
        return __WEBPACK_IMPORTED_MODULE_5__Responsive__["default"]
    })
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var Animation = function() {
        function Animation() {
            _classCallCheck(this, Animation)
        }
        _createClass(Animation, null, [{
            key: 'slideUp',
            value: function slideUp(element) {
                element.style.height = element.scrollHeight + 'px';
                element.offsetHeight;
                element.style.height = 0
            }
        }, {
            key: 'slideDown',
            value: function slideDown(element) {
                if (element.style.height === 'auto') {
                    return
                }
                element.style.height = element.firstElementChild.scrollHeight + 'px';
                var transitionEnded = function transitionEnded(event) {
                    if (event.propertyName === 'height') {
                        element.style.height = 'auto';
                        element.removeEventListener('transitionend', transitionEnded)
                    }
                };
                element.addEventListener('transitionend', transitionEnded)
            }
        }]);
        return Animation
    }();
    __webpack_exports__["default"] = Animation
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__ = __webpack_require__(3);
    var __WEBPACK_IMPORTED_MODULE_1__helper__ = __webpack_require__(6);
    var Drawer = function() {
        function Drawer(element) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            _classCallCheck(this, Drawer);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.delegateBody = new domDelegate.Delegate(document.body);
            this.onOpen = options.onOpen || function() {}
            ;
            this.onClose = options.onClose || function() {}
            ;
            this.isOpen = !1;
            this.direction = this.element.classList.contains('Drawer--fromLeft') ? 'fromLeft' : 'fromRight';
            this.pageOverlayElement = document.querySelector('.PageOverlay');
            this._attachListeners()
        }
        _createClass(Drawer, [{
            key: 'destroy',
            value: function destroy() {
                this.delegateBody.off('click', '[data-action="open-drawer"][data-drawer-id="' + this.element.id + '"]');
                this.delegateBody.off('click', '[data-action="close-drawer"][data-drawer-id="' + this.element.id + '"]');
                window.removeEventListener('resize', this._calculateMaxHeightListener)
            }
        }, {
            key: 'toggle',
            value: function toggle() {
                this.isOpen ? this.close() : this.open()
            }
        }, {
            key: 'open',
            value: function open(event) {
                if (this.isOpen) {
                    return
                }
                if (event) {
                    event.preventDefault()
                }
                this.element.setAttribute('aria-hidden', 'false');
                this._calculateMaxHeight();
                document.documentElement.classList.add('no-scroll');
                disableBodyScroll(!0, '[data-scrollable]');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element, 'drawer');
                this.pageOverlayElement.classList.add('is-visible');
                this.pageOverlayElement.addEventListener('click', this._closeListener);
                this.isOpen = !0;
                this.onOpen();
                return !1
            }
        }, {
            key: 'close',
            value: function close(event) {
                if (!this.isOpen) {
                    return
                }
                if (event) {
                    event.preventDefault()
                }
                this.element.setAttribute('aria-hidden', 'true');
                document.documentElement.classList.remove('no-scroll');
                disableBodyScroll(!1, '[data-scrollable]');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element, 'drawer');
                this.pageOverlayElement.classList.remove('is-visible');
                this.pageOverlayElement.removeEventListener('click', this._closeListener);
                this.isOpen = !1;
                this.onClose()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._openListener = this.open.bind(this);
                this._closeListener = this.close.bind(this);
                this._calculateMaxHeightListener = this._calculateMaxHeight.bind(this);
                this.delegateBody.on('click', '[data-action="open-drawer"][data-drawer-id="' + this.element.id + '"]', this._openListener);
                this.delegateBody.on('click', '[data-action="close-drawer"][data-drawer-id="' + this.element.id + '"]', this._closeListener);
                this.element.addEventListener('keyup', this._handleKeyboard.bind(this));
                window.addEventListener('resize', this._calculateMaxHeightListener)
            }
        }, {
            key: '_calculateMaxHeight',
            value: function _calculateMaxHeight() {
                this.element.style.maxHeight = window.innerHeight + 'px'
            }
        }, {
            key: '_handleKeyboard',
            value: function _handleKeyboard(event) {
                if (this.isOpen && event.keyCode === 27) {
                    this.close()
                }
            }
        }]);
        return Drawer
    }();
    __webpack_exports__["default"] = Drawer
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__ = __webpack_require__(3);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__ = __webpack_require__(2);
    var Popover = function() {
        function Popover(element, options) {
            _classCallCheck(this, Popover);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.activator = options.activator || document.querySelector('[aria-controls="' + element.getAttribute('id') + '"]');
            this.preferredPosition = options.preferredPosition || 'bottom';
            this.isOpen = !1;
            this.onValueChanged = options.onValueChanged || function() {}
            ;
            this.onOpen = options.onOpen || function() {}
            ;
            this.onClose = options.onClose || function() {}
            ;
            this.showOverlay = options.showOverlay === undefined ? !0 : options.showOverlay;
            this.pageOverlayElement = document.querySelector('.PageOverlay');
            this._attachListeners()
        }
        _createClass(Popover, [{
            key: 'destroy',
            value: function destroy() {
                this.element.removeEventListener('keyup', this._handleKeyboardListener);
                this.delegateElement.off('click');
                this.activator.removeEventListener('click', this._toggleListener)
            }
        }, {
            key: 'toggle',
            value: function toggle() {
                this.isOpen ? this.close() : this.open()
            }
        }, {
            key: 'open',
            value: function open() {
                if (this.isOpen || this.activator.getAttribute('aria-controls') !== this.element.id) {
                    return
                }
                this.element.setAttribute('aria-hidden', 'false');
                this.activator.setAttribute('aria-expanded', 'true');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element, 'popover');
                disableBodyScroll(!0, '[data-scrollable]');
                document.documentElement.classList.add('no-scroll');
                if (__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')) {
                    document.body.addEventListener('click', this._clickOutsideListener);
                    this._position()
                } else {
                    this.element.removeAttribute('style');
                    if (this.showOverlay) {
                        this.pageOverlayElement.classList.add('is-visible');
                        this.pageOverlayElement.addEventListener('click', this._closeListener)
                    }
                }
                this.onOpen(this);
                this.isOpen = !0
            }
        }, {
            key: 'close',
            value: function close() {
                if (!this.isOpen) {
                    return
                }
                this.element.setAttribute('aria-hidden', 'true');
                this.activator.setAttribute('aria-expanded', 'false');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element, 'popover');
                disableBodyScroll(!1, '[data-scrollable]');
                document.documentElement.classList.remove('no-scroll');
                if (__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('lap-and-up')) {
                    document.body.removeEventListener('click', this._clickOutsideListener)
                } else if (this.showOverlay) {
                    this.pageOverlayElement.classList.remove('is-visible');
                    this.pageOverlayElement.removeEventListener('click', this._closeListener)
                }
                this.onClose(this);
                this.isOpen = !1
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._handleKeyboardListener = this._handleKeyboard.bind(this);
                this._clickOutsideListener = this._clickOutside.bind(this);
                this._closeListener = this.close.bind(this);
                this._toggleListener = this.toggle.bind(this);
                this.element.addEventListener('keyup', this._handleKeyboardListener);
                this.activator.addEventListener('click', this._toggleListener);
                this.delegateElement.on('click', '[data-action="close-popover"]', this.close.bind(this));
                this.delegateElement.on('click', '[data-action="select-value"]', this._valueChanged.bind(this))
            }
        }, {
            key: '_valueChanged',
            value: function _valueChanged(event) {
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(event.target, '.is-selected').forEach(function(item) {
                    return item.classList.remove('is-selected')
                });
                event.target.classList.add('is-selected');
                this.onValueChanged(event.target.getAttribute('data-value'), event.target, this.activator);
                this.close()
            }
        }, {
            key: '_clickOutside',
            value: function _clickOutside(event) {
                if (!event.target.closest('.Popover') && !event.target.closest('.Modal') && event.target !== this.activator && !this.activator.contains(event.target)) {
                    this.close()
                }
            }
        }, {
            key: '_position',
            value: function _position() {
                var _this4 = this;
                var topPosition = 0
                  , rightPosition = 0
                  , position = ''
                  , alignment = ''
                  , threshold = 20;
                fastdom.measure(function() {
                    var windowHeight = window.innerHeight
                      , activatorBoundingRect = _this4.activator.getBoundingClientRect()
                      , halfHeight = windowHeight / 2;
                    if (_this4.preferredPosition === 'bottom') {
                        alignment = 'right';
                        if (_this4.element.clientHeight <= windowHeight - (activatorBoundingRect.bottom + threshold) || windowHeight - activatorBoundingRect.bottom >= halfHeight) {
                            position = 'bottom'
                        } else {
                            position = 'top'
                        }
                    } else if (_this4.preferredPosition === 'top') {
                        alignment = 'right';
                        if (_this4.element.clientHeight <= activatorBoundingRect.top - threshold || activatorBoundingRect.top >= halfHeight) {
                            position = 'top'
                        } else {
                            position = 'bottom'
                        }
                    } else {
                        position = 'left';
                        var halfElementHeight = _this4.element.clientHeight / 2;
                        if (activatorBoundingRect.top >= halfElementHeight && windowHeight - activatorBoundingRect.bottom >= halfElementHeight) {
                            alignment = 'center'
                        } else if (windowHeight - activatorBoundingRect.bottom >= halfElementHeight) {
                            alignment = 'bottom'
                        } else {
                            alignment = 'top'
                        }
                    }
                    if (position === 'top') {
                        topPosition = activatorBoundingRect.top - _this4.element.clientHeight - threshold;
                        rightPosition = window.innerWidth - activatorBoundingRect.right
                    } else if (position === 'bottom') {
                        topPosition = activatorBoundingRect.bottom + threshold;
                        rightPosition = window.innerWidth - activatorBoundingRect.right
                    } else {
                        rightPosition = window.innerWidth - activatorBoundingRect.left + threshold;
                        if (alignment === 'center') {
                            topPosition = activatorBoundingRect.top - _this4.element.clientHeight / 2 + _this4.activator.clientHeight / 2
                        } else if (alignment === 'top') {
                            topPosition = activatorBoundingRect.bottom - _this4.element.clientHeight
                        } else {
                            topPosition = activatorBoundingRect.top
                        }
                    }
                });
                fastdom.mutate(function() {
                    ['Popover--positionBottom', 'Popover--positionTop', 'Popover--positionCenter', 'Popover--alignTop', 'Popover--alignCenter', 'Popover--alignBottom'].map(function(item) {
                        return _this4.element.classList.remove(item)
                    });
                    _this4.element.classList.add('Popover--position' + (position.charAt(0).toUpperCase() + position.slice(1)));
                    _this4.element.classList.add('Popover--align' + (alignment.charAt(0).toUpperCase() + alignment.slice(1)));
                    _this4.element.setAttribute('style', 'top: ' + parseInt(topPosition) + 'px; right: ' + parseInt(rightPosition) + 'px;')
                })
            }
        }, {
            key: '_handleKeyboard',
            value: function _handleKeyboard(event) {
                if (this.isOpen && event.keyCode === 27) {
                    this.close()
                }
            }
        }]);
        return Popover
    }();
    __webpack_exports__["default"] = Popover
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var Image = function() {
        function Image() {
            _classCallCheck(this, Image)
        }
        _createClass(Image, null, [{
            key: 'getSizedImageUrl',
            value: function getSizedImageUrl(src, size) {
                if (size === null) {
                    return src
                }
                if (size === 'master') {
                    return src.replace(/http(s)?:/, '')
                }
                var match = src.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
                if (match) {
                    var prefix = src.split(match[0]);
                    var suffix = match[0];
                    return (prefix[0] + '_' + size + suffix).replace(/http(s)?:/, '')
                } else {
                    return null
                }
            }
        }, {
            key: 'getSupportedSizes',
            value: function getSupportedSizes(image, desiredSizes) {
                var supportedSizes = []
                  , imageWidth = image.width;
                desiredSizes.forEach(function(width) {
                    if (imageWidth >= width) {
                        supportedSizes.push(width)
                    }
                });
                return supportedSizes
            }
        }]);
        return Image
    }();
    __webpack_exports__["default"] = Image
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Popover__ = __webpack_require__(9);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_2__components_VariantSelector__ = __webpack_require__(16);
    var __WEBPACK_IMPORTED_MODULE_3__helper_Currency__ = __webpack_require__(5);
    var ProductVariants = function() {
        function ProductVariants(container, options) {
          debugger;
            var _this5 = this;
            _classCallCheck(this, ProductVariants);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = options;
            var jsonData = JSON.parse(this.element.querySelector('[data-product-json]').innerHTML);
            this.productData = jsonData.product;
            this.variantsInventories = jsonData.inventories || {};
            this.masterSelector = this.element.querySelector('#product-select-' + this.productData.id);
            this.productData.variants.forEach(function(variant) {
                if (variant.id === jsonData.selected_variant_id) {
                    _this5.currentVariant = variant;
                    _this5.option1 = variant.option1;
                    _this5.option2 = variant.option2;
                    _this5.option3 = variant.option3
                }
            });
            this._attachListeners();
            this._createSelectors()
        }
        _createClass(ProductVariants, [{
            key: 'destroy',
            value: function destroy() {
                this.delegateElement.off('click');
                this.formPopovers.forEach(function(popover) {
                    return popover.destroy()
                });
                this.formVariantSelectors.forEach(function(selector) {
                    return selector.destroy()
                })
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '[data-action="add-to-cart"]', this._addToCart.bind(this));
                this.delegateElement.on('click', '[data-action="decrease-quantity"]', this._decreaseQuantity.bind(this));
                this.delegateElement.on('click', '[data-action="increase-quantity"]', this._increaseQuantity.bind(this));
                this.delegateElement.on('change', '[name="quantity"]', this._validateQuantity.bind(this))
            }
        }, {
            key: '_createSelectors',
            value: function _createSelectors() {
                var _this6 = this;
                this.formPopovers = [];
                this.formVariantSelectors = [];
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.OptionSelector')).forEach(function(item) {
                    var popover = new __WEBPACK_IMPORTED_MODULE_0__components_Popover__["default"](item,{
                        preferredPosition: 'left',
                        onValueChanged: _this6._onOptionChanged.bind(_this6)
                    });
                    _this6.formPopovers.push(popover)
                });
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.VariantSelector')).forEach(function(item) {
                    var variantSelector = new __WEBPACK_IMPORTED_MODULE_2__components_VariantSelector__["default"](item,{
                        onValueChanged: _this6._onOptionChanged.bind(_this6)
                    });
                    _this6.formVariantSelectors.push(variantSelector)
                })
            }
        }, {
            key: '_onVariantChanged',
            value: function _onVariantChanged(previousVariant, newVariant) {
              var WCP_JSON=[];
              
              if($('.wcp_json_'+this.productData.id).length){    
                WCP_JSON=JSON.parse($('.wcp_json_'+this.productData.id)[0].innerText);
                $.each(WCP_JSON.variants, function( index, value ) {
                  if(newVariant.id == value.id){
                    newVariant.price = value.price;  
                    newVariant.compare_at_price = value.compare_at_price;       
                    return;
                  }
                });      
              } 
                this._updateProductPrices(newVariant, previousVariant);
                this._updateInventory(newVariant, previousVariant);
                this._updateAddToCartButton(newVariant, previousVariant);
                if (window.theme.currencyConversionEnabled) {
                    __WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].convertAll(this.element)
                }
                this.element.dispatchEvent(new CustomEvent('variant:changed',{
                    bubbles: !0,
                    detail: {
                        variant: newVariant,
                        previousVariant: previousVariant
                    }
                }))
            }
        }, {
            key: '_updateProductPrices',
            value: function _updateProductPrices(newVariant, previousVariant) {
                var productMetaPrices = this.element.querySelector('.ProductMeta__PriceList');
                if (!newVariant) {
                    productMetaPrices.style.display = 'none'
                } else {
                    if (previousVariant && previousVariant.price === newVariant.price && previousVariant.compare_at_price === newVariant.compare_at_price) {
                        return
                    }
                    productMetaPrices.innerHTML = '';
                    if (newVariant.compare_at_price > newVariant.price) {
                        productMetaPrices.innerHTML += '<span class="ProductMeta__Price Price Price--highlight Text--subdued u-h4" data-money-convertible>' + __WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price, window.theme.moneyFormat) + '</span>';
                        productMetaPrices.innerHTML += '<span class="ProductMeta__Price Price Price--compareAt Text--subdued u-h4" data-money-convertible>' + __WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.compare_at_price, window.theme.moneyFormat) + '</span>'
                    } else {
                        productMetaPrices.innerHTML += '<span class="ProductMeta__Price Price Text--subdued u-h4" data-money-convertible>' + __WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price, window.theme.moneyFormat) + '</span>'
                    }
                    productMetaPrices.style.display = ''
                }
            }
        }, {
            key: '_updateInventory',
            value: function _updateInventory(newVariant) {
                if (!this.options.showInventoryQuantity) {
                    return
                }
                var productFormInventory = this.element.querySelector('.ProductForm__Inventory')
                  , variantInventory = newVariant ? this.variantsInventories[newVariant.id] : null;
                if (!newVariant || null === variantInventory.inventory_management || variantInventory.inventory_quantity <= 0 || this.options.inventoryQuantityThreshold > 0 && variantInventory.inventory_quantity > this.options.inventoryQuantityThreshold) {
                    productFormInventory.style.display = 'none'
                } else {
                    productFormInventory.textContent = variantInventory.inventory_message;
                    productFormInventory.style.display = ''
                }
            }
        }, {
            key: '_updateAddToCartButton',
            value: function _updateAddToCartButton(newVariant) {
                var addToCartButton = this.element.querySelector('.ProductForm__AddToCart')
                  , shopifyPaymentButton = this.element.querySelector('.shopify-payment-button')
                  , newButton = document.createElement('button');
                newButton.setAttribute('type', 'submit');
                newButton.className = 'ProductForm__AddToCart Button Button--full';
                if (!newVariant) {
                    newButton.setAttribute('disabled', 'disabled');
                    newButton.removeAttribute('data-action');
                    newButton.classList.add('Button--secondary');
                    newButton.innerHTML = window.languages.productFormUnavailable
                } else {
                    if (newVariant.available) {
                        newButton.removeAttribute('disabled');
                        newButton.classList.add(this.options.showPaymentButton ? 'Button--secondary' : 'Button--primary');
                        newButton.setAttribute('data-action', 'add-to-cart');
                        newButton.innerHTML = '\n          <span>' + window.languages.productFormAddToCart + '</span>\n          <span class="Button__SeparatorDot"></span>\n          <span data-money-convertible>' + __WEBPACK_IMPORTED_MODULE_3__helper_Currency__["default"].formatMoney(newVariant.price, window.theme.moneyFormat) + '</span>\n        '
                    } else {
                        newButton.setAttribute('disabled', 'disabled');
                        newButton.classList.add('Button--secondary');
                        newButton.removeAttribute('data-action');
                        newButton.innerHTML = window.languages.productFormSoldOut
                    }
                }
                if (this.options.showPaymentButton && shopifyPaymentButton) {
                    if (!newVariant || !newVariant.available) {
                        shopifyPaymentButton.style.display = 'none'
                    } else {
                        shopifyPaymentButton.style.display = 'block'
                    }
                }
                addToCartButton.parentNode.replaceChild(newButton, addToCartButton)
            }
        }, {
            key: '_onOptionChanged',
            value: function _onOptionChanged(newValue, target, activator) {
                this['option' + target.getAttribute('data-option-position')] = newValue;
                var selectedValueElement = activator.querySelector('.ProductForm__SelectedValue')
                  , colorSwatchElement = activator.querySelector('.ProductForm__ColorSwatch');
                selectedValueElement.innerHTML = newValue;
                if (colorSwatchElement) {
                    if (!window.CSS || window.CSS && window.CSS.supports('background-color: ' + target.getAttribute('data-background-color'))) {
                        colorSwatchElement.style.backgroundColor = target.getAttribute('data-background-color')
                    } else {
                        colorSwatchElement.style.backgroundColor = 'transparent'
                    }
                    colorSwatchElement.style.backgroundImage = 'url(' + target.getAttribute('data-background-image') + ')';
                    if (newValue.toLowerCase() === 'white') {
                        colorSwatchElement.classList.add('ProductForm__ColorSwatch--white')
                    } else {
                        colorSwatchElement.classList.remove('ProductForm__ColorSwatch--white')
                    }
                }
                var previousVariant = this.currentVariant;
                this.currentVariant = this._getCurrentVariantFromOptions();
                this._onVariantChanged(previousVariant, this.currentVariant);
                if (this.currentVariant) {
                    if (this.options.enableHistoryState) {
                        this._updateHistoryState(this.currentVariant)
                    }
                    this.masterSelector.querySelector('[selected]').removeAttribute('selected');
                    this.masterSelector.querySelector('[value="' + this.currentVariant.id + '"]').setAttribute('selected', 'selected')
                }
            }
        }, {
            key: '_getCurrentVariantFromOptions',
            value: function _getCurrentVariantFromOptions() {
                var _this7 = this;
                var found = !1;
                this.productData.variants.forEach(function(variant) {
                    if (variant.option1 === _this7.option1 && variant.option2 === _this7.option2 && variant.option3 === _this7.option3) {
                        found = variant
                    }
                });
                return found || null
            }
        }, {
            key: '_updateHistoryState',
            value: function _updateHistoryState(variant) {
                if (!history.replaceState) {
                    return
                }
                var newUrl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?variant=' + variant.id;
                window.history.replaceState({
                    path: newUrl
                }, '', newUrl)
            }
        }, {
            key: '_addToCart',
            value: function _addToCart(event) {
                var _this8 = this;
                if (!this.options.useAjaxCart) {
                    return
                }
                event.preventDefault();
                var addToCartButton = this.element.querySelector('.ProductForm__AddToCart');
                addToCartButton.setAttribute('disabled', 'disabled');
                document.dispatchEvent(new CustomEvent('theme:loading:start'));
                var formElement = this.element.querySelector('form[action^="/cart/add"]')
                  , formData = new FormData(formElement);
                function formSerialize(form) {
                    var i = void 0
                      , j = void 0
                      , len = void 0
                      , jLen = void 0
                      , formElement = void 0
                      , q = [];
                    function urlencode(str) {
                        return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/%20/g, '+')
                    }
                    function addNameValue(name, value) {
                        q.push(urlencode(name) + '=' + urlencode(value))
                    }
                    if (!form || !form.nodeName || form.nodeName.toLowerCase() !== 'form') {
                        throw 'You must supply a form element'
                    }
                    for (i = 0,
                    len = form.elements.length; i < len; i++) {
                        formElement = form.elements[i];
                        if (formElement.name === '' || formElement.disabled) {
                            continue
                        }
                        switch (formElement.nodeName.toLowerCase()) {
                        case 'input':
                            switch (formElement.type) {
                            case 'text':
                            case 'hidden':
                            case 'password':
                            case 'button':
                            case 'submit':
                                addNameValue(formElement.name, formElement.value);
                                break;
                            case 'checkbox':
                            case 'radio':
                                if (formElement.checked) {
                                    addNameValue(formElement.name, formElement.value)
                                }
                                break;
                            case 'file':
                                break;
                            case 'reset':
                                break
                            }
                            break;
                        case 'textarea':
                            addNameValue(formElement.name, formElement.value);
                            break;
                        case 'select':
                            switch (formElement.type) {
                            case 'select-one':
                                addNameValue(formElement.name, formElement.value);
                                break;
                            case 'select-multiple':
                                for (j = 0,
                                jLen = formElement.options.length; j < jLen; j++) {
                                    if (formElement.options[j].selected) {
                                        addNameValue(formElement.name, formElement.options[j].value)
                                    }
                                }
                                break
                            }
                            break;
                        case 'button':
                            switch (formElement.type) {
                            case 'reset':
                            case 'submit':
                            case 'button':
                                addNameValue(formElement.name, formElement.value);
                                break
                            }
                            break
                        }
                    }
                    return q.join('&')
                }
                var httpRequest = new XMLHttpRequest();
                httpRequest.open('POST', '/cart/add.js', !0);
                httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
                httpRequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                httpRequest.send(formSerialize(formElement));
                httpRequest.onreadystatechange = function() {
                    if (httpRequest.readyState === XMLHttpRequest.DONE) {
                        document.dispatchEvent(new CustomEvent('theme:loading:end'));
                        if (httpRequest.status === 200) {
                            addToCartButton.removeAttribute('disabled');
                            _this8.element.dispatchEvent(new CustomEvent('product:added',{
                                bubbles: !0,
                                detail: {
                                    variant: _this8.currentVariant,
                                    quantity: parseInt(formElement.querySelector('[name="quantity"]').value)
                                }
                            }))
                        } else {
                            var errors = JSON.parse(httpRequest.responseText);
                            var errorMessageElement = document.createElement('span');
                            errorMessageElement.className = 'ProductForm__Error Alert Alert--error';
                            errorMessageElement.innerHTML = errors.description;
                            addToCartButton.removeAttribute('disabled');
                            addToCartButton.insertAdjacentElement('afterend', errorMessageElement);
                            setTimeout(function() {
                                errorMessageElement.remove()
                            }, 2500)
                        }
                    }
                }
                ;
                event.preventDefault()
            }
        }, {
            key: '_decreaseQuantity',
            value: function _decreaseQuantity(event, target) {
                target.nextElementSibling.value = Math.max(parseInt(target.nextElementSibling.value) - 1, 1)
            }
        }, {
            key: '_increaseQuantity',
            value: function _increaseQuantity(event, target) {
                target.previousElementSibling.value = parseInt(target.previousElementSibling.value) + 1
            }
        }, {
            key: '_validateQuantity',
            value: function _validateQuantity(event, target) {
                target.value = Math.max(parseInt(target.value) || 1, 1)
            }
        }]);
        return ProductVariants
    }();
    __webpack_exports__["default"] = ProductVariants
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var CountrySelector = function() {
        function CountrySelector(countrySelect, provinceSelect) {
            _classCallCheck(this, CountrySelector);
            this.countrySelect = countrySelect;
            this.provinceSelect = provinceSelect;
            if (this.countrySelect && this.provinceSelect) {
                this._attachListeners();
                this._initSelectors()
            }
        }
        _createClass(CountrySelector, [{
            key: 'destroy',
            value: function destroy() {
                if (this.countrySelect) {
                    this.countrySelect.removeEventListener('change', this._onCountryChangedListener)
                }
            }
        }, {
            key: '_initSelectors',
            value: function _initSelectors() {
                var defaultCountry = this.countrySelect.getAttribute('data-default');
                if (defaultCountry) {
                    this.countrySelect.value = defaultCountry
                } else {
                    this.countrySelect.selectedIndex = 0
                }
                var event = new Event('change',{
                    bubbles: !0
                });
                this.countrySelect.dispatchEvent(event);
                var defaultProvince = this.provinceSelect.getAttribute('data-default');
                if (defaultProvince) {
                    this.provinceSelect.value = defaultProvince
                }
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._onCountryChangedListener = this._onCountryChanged.bind(this);
                this.countrySelect.addEventListener('change', this._onCountryChangedListener)
            }
        }, {
            key: '_onCountryChanged',
            value: function _onCountryChanged() {
                var _this9 = this;
                var selectedOption = this.countrySelect.options[this.countrySelect.selectedIndex]
                  , provinces = JSON.parse(selectedOption.getAttribute('data-provinces') || '[]');
                this.provinceSelect.innerHTML = '';
                if (provinces.length === 0) {
                    this.provinceSelect.parentNode.style.display = 'none';
                    return
                }
                provinces.forEach(function(data) {
                    _this9.provinceSelect.options.add(new Option(data[1],data[0]))
                });
                this.provinceSelect.parentNode.style.display = 'block'
            }
        }]);
        return CountrySelector
    }();
    __webpack_exports__["default"] = CountrySelector
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var OverflowScroller = function() {
        function OverflowScroller(element) {
            _classCallCheck(this, OverflowScroller);
            if (!element) {
                return
            }
            this.element = element;
            this.lastKnownY = window.scrollY;
            this.currentTop = 0;
            this.initialTopOffset = parseInt(window.getComputedStyle(this.element).top);
            this._attachListeners()
        }
        _createClass(OverflowScroller, [{
            key: 'destroy',
            value: function destroy() {
                window.removeEventListener('scroll', this._checkPositionListener)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._checkPositionListener = this._checkPosition.bind(this);
                window.addEventListener('scroll', this._checkPositionListener)
            }
        }, {
            key: '_checkPosition',
            value: function _checkPosition() {
                var _this10 = this;
                fastdom.measure(function() {
                    var bounds = _this10.element.getBoundingClientRect()
                      , maxTop = bounds.top + window.scrollY - _this10.element.offsetTop + _this10.initialTopOffset
                      , minTop = _this10.element.clientHeight - window.innerHeight;
                    if (window.scrollY < _this10.lastKnownY) {
                        _this10.currentTop -= window.scrollY - _this10.lastKnownY
                    } else {
                        _this10.currentTop += _this10.lastKnownY - window.scrollY
                    }
                    _this10.currentTop = Math.min(Math.max(_this10.currentTop, -minTop), maxTop, _this10.initialTopOffset);
                    _this10.lastKnownY = window.scrollY
                });
                fastdom.mutate(function() {
                    _this10.element.style.top = _this10.currentTop + 'px'
                })
            }
        }]);
        return OverflowScroller
    }();
    __webpack_exports__["default"] = OverflowScroller
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Image__ = __webpack_require__(10);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__ = __webpack_require__(2);
    var ProductImageZoom = function() {
        function ProductImageZoom(element, slideshow) {
            _classCallCheck(this, ProductImageZoom);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.delegateRoot = new domDelegate.Delegate(document.body);
            this.slideshow = slideshow;
            this._attachListeners()
        }
        _createClass(ProductImageZoom, [{
            key: 'destroy',
            value: function destroy() {
                this.delegateElement.off('click')
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '[data-action="open-product-zoom"]', this._initPhotoSwipe.bind(this));
                this.delegateElement.on('click', '.Product__SlideItem--image', this._initPhotoSwipeFromImageClick.bind(this))
            }
        }, {
            key: '_initPhotoSwipe',
            value: function _initPhotoSwipe() {
                var images = [];
                this.slideshow.flickityInstance.cells.forEach(function(item) {
                    if (item.element.classList.contains('Product__SlideItem--image')) {
                        images.push(item.element.querySelector('img'))
                    }
                });
                this._createPhotoSwipeInstance(this._createPhotoSwipeItemsFromImages(images), parseInt(this.slideshow.flickityInstance.selectedElement.getAttribute('data-image-position-ignoring-video')))
            }
        }, {
            key: '_initPhotoSwipeFromImageClick',
            value: function _initPhotoSwipeFromImageClick(event, target) {
                if (__WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('pocket')) {
                    return
                }
                var images = [];
                __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target, null, !0).forEach(function(item) {
                    if (item.classList.contains('Product__SlideItem--image')) {
                        images.push(item.querySelector('img'))
                    }
                });
                this._createPhotoSwipeInstance(this._createPhotoSwipeItemsFromImages(images), parseInt(target.getAttribute('data-image-position-ignoring-video')))
            }
        }, {
            key: '_createPhotoSwipeItemsFromImages',
            value: function _createPhotoSwipeItemsFromImages(images) {
                return images.map(function(image) {
                    var maxWidth = parseInt(image.getAttribute('data-max-width'))
                      , maxHeight = parseInt(image.getAttribute('data-max-height'))
                      , maxDimension = __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('phone') ? 1200 : 1800
                      , reduceFactor = 1.0;
                    if (maxWidth >= maxHeight) {
                        reduceFactor = Math.max(maxWidth / maxDimension, 1.0)
                    } else {
                        reduceFactor = Math.max(maxHeight / maxDimension, 1.0)
                    }
                    var requestedWidth = Math.floor(maxWidth / reduceFactor);
                    var requestedHeight = Math.floor(maxHeight / reduceFactor);
                    return {
                        msrc: image.currentSrc || image.src,
                        w: requestedWidth,
                        h: requestedHeight,
                        initialZoomLevel: 0.65,
                        src: __WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSizedImageUrl(image.getAttribute('data-original-src'), requestedWidth + 'x' + requestedHeight)
                    }
                })
            }
        }, {
            key: '_createPhotoSwipeInstance',
            value: function _createPhotoSwipeInstance(items, selectedImageIndex) {
                var _this11 = this;
                var photoswipeContainer = document.querySelector('.pswp');
                this.photoSwipeInstance = new PhotoSwipe(photoswipeContainer,!1,items,{
                    index: selectedImageIndex,
                    showHideOpacity: !0,
                    showAnimationDuration: 500,
                    loop: !1,
                    history: !1,
                    closeOnVerticalDrag: !1,
                    allowPanToNext: !1,
                    pinchToClose: !1,
                    errorMsg: '<p class="pswp__error-msg">' + window.languages.productImageLoadingError + '</p>',
                    scaleMode: 'zoom',
                    getDoubleTapZoom: function getDoubleTapZoom(isMouseClick, item) {
                        if (isMouseClick) {
                            return 1.6
                        } else {
                            return item.initialZoomLevel < 0.7 ? 1 : 1.33
                        }
                    },
                    getThumbBoundsFn: function getThumbBoundsFn(index) {
                        var thumbnail = _this11.element.querySelector('.Product__Slideshow .Carousel__Cell:nth-child(' + (parseInt(index) + 1) + ') img')
                          , pageYScroll = window.pageYOffset || document.documentElement.scrollTop
                          , rect = thumbnail.getBoundingClientRect();
                        return {
                            x: rect.left,
                            y: rect.top + pageYScroll,
                            w: rect.width
                        }
                    }
                });
                this.photoSwipeInstance.listen('beforeChange', this._onSlideChanged.bind(this));
                this.photoSwipeInstance.listen('destroy', this._destroyPhotoSwipe.bind(this));
                this.photoSwipeInstance.listen('doubleTap', this._onDoubleTap.bind(this));
                this.photoSwipeInstance.listen('initialZoomIn', this._onInitialZoomIn.bind(this));
                this.photoSwipeInstance.listen('initialZoomOut', this._onInitialZoomOut.bind(this));
                this.delegateRoot.on('pswpTap', '.pswp__scroll-wrap', this._onSingleTap.bind(this));
                this.delegateRoot.on('pswpTap', '.pswp__button--close', this.photoSwipeInstance.close);
                this.delegateRoot.on('pswpTap', '.pswp__button--prev', this.photoSwipeInstance.prev);
                this.delegateRoot.on('pswpTap', '.pswp__button--next', this.photoSwipeInstance.next);
                this.photoSwipeInstance.init()
            }
        }, {
            key: '_onSlideChanged',
            value: function _onSlideChanged() {
                if (this.photoSwipeInstance.getCurrentIndex() === 0) {
                    this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--prev').setAttribute('disabled', 'disabled')
                } else {
                    this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--prev').removeAttribute('disabled')
                }
                if (this.photoSwipeInstance.getCurrentIndex() + 1 === this.photoSwipeInstance.options.getNumItemsFn()) {
                    this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--next').setAttribute('disabled', 'disabled')
                } else {
                    this.photoSwipeInstance.scrollWrap.querySelector('.pswp__button--next').removeAttribute('disabled')
                }
            }
        }, {
            key: '_onSingleTap',
            value: function _onSingleTap(event) {
                if (!event.detail || event.detail.pointerType === 'mouse') {
                    if (event.target.classList.contains('pswp__img')) {
                        this.photoSwipeInstance.toggleDesktopZoom(event.detail.releasePoint)
                    }
                } else {
                    if (event.target.classList.contains('pswp__button')) {
                        return
                    }
                    event.target.closest('.pswp').querySelector('.pswp__ui').classList.toggle('pswp__ui--hidden')
                }
            }
        }, {
            key: '_onDoubleTap',
            value: function _onDoubleTap(point) {
                var initialZoomLevel = this.photoSwipeInstance.currItem.initialZoomLevel;
                if (this.photoSwipeInstance.getZoomLevel() !== initialZoomLevel) {
                    this.photoSwipeInstance.zoomTo(initialZoomLevel, point, 333)
                } else {
                    this.photoSwipeInstance.zoomTo(initialZoomLevel < 0.7 ? 1 : 1.33, point, 333)
                }
            }
        }, {
            key: '_onInitialZoomIn',
            value: function _onInitialZoomIn() {
                document.querySelector('.pswp__ui').classList.remove('pswp__ui--hidden')
            }
        }, {
            key: '_onInitialZoomOut',
            value: function _onInitialZoomOut() {
                document.querySelector('.pswp__ui').classList.add('pswp__ui--hidden')
            }
        }, {
            key: '_destroyPhotoSwipe',
            value: function _destroyPhotoSwipe() {
                this.delegateRoot.off('pswpTap');
                this.photoSwipeInstance = null
            }
        }]);
        return ProductImageZoom
    }();
    __webpack_exports__["default"] = ProductImageZoom
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var ProductReviews = function() {
        function ProductReviews(container) {
            _classCallCheck(this, ProductReviews);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.delegateElement.on('click', '.spr-summary-actions-newreview', this._onNewReviewClicked.bind(this));
            window.SPRCallbacks = {};
            window.SPRCallbacks.onFormSuccess = this._onFormSuccess.bind(this);
            window.SPRCallbacks.onReviewsLoad = this._onReviewsLoad.bind(this)
        }
        _createClass(ProductReviews, [{
            key: 'destroy',
            value: function destroy() {
                this.delegateElement.off()
            }
        }, {
            key: '_updatePagination',
            value: function _updatePagination(event, target) {
                SPR.$(target).data('page', parseInt(target.getAttribute('data-page')) + 1)
            }
        }, {
            key: '_onFormSuccess',
            value: function _onFormSuccess() {
                var formSuccess = this.element.querySelector('.spr-form-message-success');
                window.scrollTo(0, formSuccess.offsetTop - 45)
            }
        }, {
            key: '_onReviewsLoad',
            value: function _onReviewsLoad() {
                var sprSummaryActions = this.element.querySelector('.spr-summary-actions')
                  , previousSprPaginationNext = sprSummaryActions.querySelector('.spr-pagination-next')
                  , sprPaginationNext = this.element.querySelector('.spr-pagination .spr-pagination-next');
                if (previousSprPaginationNext) {
                    previousSprPaginationNext.remove()
                }
                if (sprPaginationNext) {
                    sprSummaryActions.insertBefore(sprPaginationNext, sprSummaryActions.firstChild)
                }
            }
        }, {
            key: '_onNewReviewClicked',
            value: function _onNewReviewClicked(event, target) {
                target.style.display = 'none';
                if (target.previousElementSibling) {
                    target.previousElementSibling.style.display = 'none'
                }
            }
        }]);
        return ProductReviews
    }();
    __webpack_exports__["default"] = ProductReviews
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__ = __webpack_require__(3);
    var __WEBPACK_IMPORTED_MODULE_1__Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__ = __webpack_require__(0);
    var VariantSelector = function() {
        function VariantSelector(element) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            _classCallCheck(this, VariantSelector);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.activator = options.activator || document.querySelector('[aria-controls="' + element.getAttribute('id') + '"]');
            this.onValueChangedCallback = options.onValueChanged || function() {}
            ;
            this.isOpen = !1;
            this.pageOverlayElement = document.querySelector('.PageOverlay');
            this.variantChoiceList = __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.VariantSelector__Choice'));
            this.variantCarousel = new __WEBPACK_IMPORTED_MODULE_1__Carousel__["default"](this.element.querySelector('.VariantSelector__Carousel'),{
                onSelect: this._variantChanged.bind(this),
                onClick: this._variantSelected.bind(this)
            });
            this._attachListeners()
        }
        _createClass(VariantSelector, [{
            key: 'destroy',
            value: function destroy() {
                this.element.removeEventListener('keyup', this._handleKeyboardListener);
                this.delegateElement.off('click');
                this.activator.removeEventListener('click', this._toggleListener);
                this.variantCarousel.destroy()
            }
        }, {
            key: 'toggle',
            value: function toggle() {
                this.isOpen ? this.close() : this.open()
            }
        }, {
            key: 'open',
            value: function open() {
                if (this.isOpen) {
                    return
                }
                this.element.setAttribute('aria-hidden', 'false');
                this.activator.setAttribute('aria-expanded', 'true');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.element, 'variant-selector');
                document.documentElement.classList.add('no-scroll');
                this.element.setAttribute('style', '');
                this.pageOverlayElement.classList.add('is-visible');
                this.pageOverlayElement.addEventListener('click', this._closeListener);
                this.isOpen = !0
            }
        }, {
            key: 'close',
            value: function close() {
                if (!this.isOpen) {
                    return
                }
                this.element.setAttribute('aria-hidden', 'true');
                this.activator.setAttribute('aria-expanded', 'false');
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(this.element, 'variant-selector');
                document.documentElement.classList.remove('no-scroll');
                this.pageOverlayElement.classList.remove('is-visible');
                this.pageOverlayElement.removeEventListener('click', this._closeListener);
                this.isOpen = !1
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._handleKeyboardListener = this._handleKeyboard.bind(this);
                this._closeListener = this.close.bind(this);
                this._toggleListener = this.toggle.bind(this);
                this.element.addEventListener('keyup', this._handleKeyboardListener);
                this.activator.addEventListener('click', this._toggleListener);
                this.delegateElement.on('click', '[data-action="select-variant"]', this._onVariantSelect.bind(this))
            }
        }, {
            key: '_variantChanged',
            value: function _variantChanged(selectedIndex) {
                var activeChoice = this.variantChoiceList[selectedIndex];
                activeChoice.classList.add('is-selected');
                __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(activeChoice, '.is-selected').forEach(function(item) {
                    return item.classList.remove('is-selected')
                })
            }
        }, {
            key: '_variantSelected',
            value: function _variantSelected(cellElement, cellIndex) {
                if (this.variantCarousel.getSelectedIndex() === cellIndex) {
                    this.onValueChangedCallback(cellElement.getAttribute('data-option-value'), cellElement, this.activator);
                    this.close()
                } else {
                    this.variantCarousel.selectCell(cellIndex)
                }
            }
        }, {
            key: '_onVariantSelect',
            value: function _onVariantSelect() {
                var selectedCell = this.variantCarousel.flickityInstance.selectedCell.element;
                this.onValueChangedCallback(selectedCell.getAttribute('data-option-value'), selectedCell, this.activator);
                this.close()
            }
        }, {
            key: '_handleKeyboard',
            value: function _handleKeyboard(event) {
                if (this.isOpen && event.keyCode === 27) {
                    this.close()
                }
            }
        }]);
        return VariantSelector
    }();
    __webpack_exports__["default"] = VariantSelector
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var ScrollSpy = function() {
        function ScrollSpy(container, elementsToSpy, observerOptions) {
            var _this12 = this;
            _classCallCheck(this, ScrollSpy);
            this.container = container;
            this.targets = [];
            this.targetIndices = {};
            this.indicesInViewPort = [];
            this.observer = new IntersectionObserver(this._onIntersectionChange.bind(this),observerOptions);
            elementsToSpy.forEach(function(elementToSpy, index) {
                _this12.targets.push(elementToSpy);
                _this12.targetIndices[elementToSpy.id] = index;
                _this12.observer.observe(elementToSpy)
            })
        }
        _createClass(ScrollSpy, [{
            key: 'destroy',
            value: function destroy() {
                this.observer.disconnect()
            }
        }, {
            key: '_onIntersectionChange',
            value: function _onIntersectionChange(changes) {
                var oldTargetIndex = this.indicesInViewPort[0] || 0;
                for (var i = changes.length - 1; i >= 0; i--) {
                    this._updateIndicesInViewPort(changes[i], oldTargetIndex)
                }
                this.indicesInViewPort = this.indicesInViewPort.filter(function(value, index, self) {
                    return self.indexOf(value) === index
                });
                if (this.indicesInViewPort.length === 0 || oldTargetIndex === this.indicesInViewPort[0]) {
                    return
                }
                var event = new CustomEvent('scrollspy:target:changed',{
                    detail: {
                        newTarget: this.targets[this.indicesInViewPort[0]],
                        oldTarget: this.targets[oldTargetIndex]
                    }
                });
                this.container.dispatchEvent(event)
            }
        }, {
            key: '_updateIndicesInViewPort',
            value: function _updateIndicesInViewPort(change, oldTargetIndex) {
                var index = this.targetIndices[change.target.id];
                if (change.intersectionRatio === 0) {
                    var indexInViewPort = this.indicesInViewPort.indexOf(index);
                    if (indexInViewPort !== -1) {
                        this.indicesInViewPort.splice(indexInViewPort, 1)
                    }
                } else {
                    if (index < oldTargetIndex) {
                        this.indicesInViewPort.unshift(index)
                    } else if (index > this.indicesInViewPort[this.indicesInViewPort.length - 1]) {
                        this.indicesInViewPort.push(index)
                    } else {
                        this.indicesInViewPort.push(index);
                        this.indicesInViewPort.sort()
                    }
                }
            }
        }]);
        return ScrollSpy
    }();
    __webpack_exports__["default"] = ScrollSpy
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__ = __webpack_require__(7);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Currency__ = __webpack_require__(5);
    var __WEBPACK_IMPORTED_MODULE_2__CountrySelector__ = __webpack_require__(12);
    var ShippingEstimator = function() {
        function ShippingEstimator(element) {
            _classCallCheck(this, ShippingEstimator);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.countrySelector = new __WEBPACK_IMPORTED_MODULE_2__CountrySelector__["default"](this.element.querySelector('[name="country"]'),this.element.querySelector('[name="province"]'));
            this._attachListeners()
        }
        _createClass(ShippingEstimator, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off('click');
                this.countrySelector.destroy()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '.ShippingEstimator__Submit', this._fetchRates.bind(this))
            }
        }, {
            key: '_fetchRates',
            value: function _fetchRates() {
                var _this13 = this;
                var country = this.element.querySelector('[name="country"]').value
                  , province = this.element.querySelector('[name="province"]').value
                  , zip = this.element.querySelector('[name="zip"]').value;
                document.dispatchEvent(new CustomEvent('theme:loading:start'));
                fetch('/cart/shipping_rates.json?shipping_address[zip]=' + zip + '&shipping_address[country]=' + country + '&shipping_address[province]=' + province, {
                    credentials: 'same-origin',
                    method: 'GET'
                }).then(function(response) {
                    response.json().then(function(result) {
                        document.dispatchEvent(new CustomEvent('theme:loading:end'));
                        var resultsContainer = _this13.element.querySelector('.ShippingEstimator__Results')
                          , errorContainer = _this13.element.querySelector('.ShippingEstimator__Error');
                        if (response.ok) {
                            var shippingRates = result.shipping_rates;
                            if (shippingRates.length === 0) {
                                resultsContainer.innerHTML = '<p>' + window.languages.shippingEstimatorNoResults + '</p>'
                            } else {
                                var html = '';
                                if (shippingRates.length === 1) {
                                    html += '<p>' + window.languages.shippingEstimatorOneResult + '</p><ul>'
                                } else {
                                    html += '<p>' + window.languages.shippingEstimatorMoreResults.replace('{{count}}', shippingRates.length) + '</p><ul>'
                                }
                                shippingRates.forEach(function(item) {
                                    html += '<li>' + item.name + ': ' + __WEBPACK_IMPORTED_MODULE_1__helper_Currency__["default"].formatMoney(item.price, window.theme.moneyFormat) + '</li>'
                                });
                                html += '</ul>';
                                resultsContainer.firstElementChild.innerHTML = html
                            }
                            TweenLite.fromTo(resultsContainer.firstElementChild, 0.6, {
                                autoAlpha: 0,
                                y: -15
                            }, {
                                autoAlpha: 1,
                                y: 0,
                                delay: 0.35
                            });
                            errorContainer.style.display = 'none';
                            __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(resultsContainer)
                        } else {
                            var errorHtml = '';
                            Object.keys(result).forEach(function(key) {
                                errorHtml += '<li class="Alert__ErrorItem">' + key + ' ' + result[key] + '</li>'
                            });
                            errorContainer.innerHTML = '<ul class="Alert__ErrorList">' + errorHtml + '</ul>';
                            resultsContainer.style.display = 'none';
                            errorContainer.style.display = 'block'
                        }
                    })
                })
            }
        }]);
        return ShippingEstimator
    }();
    __webpack_exports__["default"] = ShippingEstimator
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__ = __webpack_require__(7);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__ = __webpack_require__(2);
    var Collapsible = function() {
        function Collapsible() {
            _classCallCheck(this, Collapsible);
            this.domDelegate = new domDelegate.Delegate(document.body);
            this._attachListeners()
        }
        _createClass(Collapsible, [{
            key: '_attachListeners',
            value: function _attachListeners() {
                this.domDelegate.on('click', '[data-action="toggle-collapsible"]', this._toggleCollapsible.bind(this))
            }
        }, {
            key: '_toggleCollapsible',
            value: function _toggleCollapsible(event, target) {
                var _this14 = this;
                var parentCollapsible = target.closest('.Collapsible');
                if (parentCollapsible.classList.contains('Collapsible--autoExpand') && __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].matchesBreakpoint('tablet-and-up')) {
                    return
                }
                var isOpen = target.getAttribute('aria-expanded') === 'true';
                if (isOpen) {
                    this._close(parentCollapsible, target)
                } else {
                    this._open(parentCollapsible, target)
                }
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(parentCollapsible).forEach(function(collapsibleToClose) {
                    return _this14._close(collapsibleToClose)
                });
                event.preventDefault()
            }
        }, {
            key: '_open',
            value: function _open(collapsible) {
                var toggleButton = collapsible.querySelector('.Collapsible__Button')
                  , collapsibleInner = collapsible.querySelector('.Collapsible__Inner');
                if (!collapsibleInner || toggleButton.getAttribute('aria-expanded') === 'true') {
                    return
                }
                toggleButton.setAttribute('aria-expanded', 'true');
                __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(collapsibleInner)
            }
        }, {
            key: '_close',
            value: function _close(collapsible) {
                var toggleButton = collapsible.querySelector('.Collapsible__Button')
                  , collapsibleInner = collapsible.querySelector('.Collapsible__Inner');
                if (!collapsibleInner || toggleButton.getAttribute('aria-expanded') === 'false') {
                    return
                }
                toggleButton.setAttribute('aria-expanded', 'false');
                __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(collapsibleInner)
            }
        }]);
        return Collapsible
    }();
    __webpack_exports__["default"] = Collapsible
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var LoadingBar = function() {
        function LoadingBar() {
            _classCallCheck(this, LoadingBar);
            this.element = document.querySelector('.LoadingBar');
            document.addEventListener('theme:loading:start', this._onLoadingStart.bind(this));
            document.addEventListener('theme:loading:end', this._onLoadingEnd.bind(this));
            this.element.addEventListener('transitionend', this._onTransitionEnd.bind(this))
        }
        _createClass(LoadingBar, [{
            key: '_onLoadingStart',
            value: function _onLoadingStart() {
                this.element.classList.add('is-visible');
                this.element.style.width = '40%'
            }
        }, {
            key: '_onLoadingEnd',
            value: function _onLoadingEnd() {
                this.element.style.width = '100%';
                this.element.classList.add('is-finished')
            }
        }, {
            key: '_onTransitionEnd',
            value: function _onTransitionEnd(event) {
                if (event.propertyName === 'width' && this.element.classList.contains('is-finished')) {
                    this.element.classList.remove('is-visible');
                    this.element.classList.remove('is-finished');
                    this.element.style.width = '0'
                }
            }
        }]);
        return LoadingBar
    }();
    __webpack_exports__["default"] = LoadingBar
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__ = __webpack_require__(3);
    var Modal = function() {
        function Modal() {
            _classCallCheck(this, Modal);
            this.domDelegate = new domDelegate.Delegate(document.body);
            this.activeModal = null;
            this.wasLocked = !1;
            this.pageOverlayElement = document.querySelector('.PageOverlay');
            this._attachListeners();
            this._checkOpenByHash()
        }
        _createClass(Modal, [{
            key: '_attachListeners',
            value: function _attachListeners() {
                this._closeListener = this._closeModal.bind(this);
                this._handleKeyboardListener = this._handleKeyboard.bind(this);
                this.domDelegate.on('click', '[data-action="open-modal"]', this._openModalEvent.bind(this));
                this.domDelegate.on('click', '[data-action="close-modal"]', this._closeModal.bind(this))
            }
        }, {
            key: '_openModalEvent',
            value: function _openModalEvent(event, target) {
                this._openModal(document.getElementById(target.getAttribute('aria-controls')));
                event.preventDefault();
                event.stopPropagation()
            }
        }, {
            key: '_openModal',
            value: function _openModal(modal) {
                var _this15 = this;
                if (this.activeModal || !modal) {
                    return
                }
                this.activeModal = modal;
                this.domDelegate.on('keyup', this._handleKeyboardListener);
                if (document.documentElement.classList.contains('no-scroll')) {
                    this.wasLocked = !0
                }
                fastdom.mutate(function() {
                    __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].clearTrapFocus();
                    _this15._onTransitionEndedListener = _this15._onTransitionEnded.bind(_this15);
                    _this15.activeModal.addEventListener('transitionend', _this15._onTransitionEndedListener);
                    _this15.activeModal.setAttribute('aria-hidden', 'false');
                    document.documentElement.classList.add('no-scroll');
                    if (!_this15.activeModal.classList.contains('Modal--fullScreen')) {
                        _this15.pageOverlayElement.classList.add('is-visible');
                        _this15.pageOverlayElement.addEventListener('click', _this15._closeListener)
                    }
                })
            }
        }, {
            key: '_closeModal',
            value: function _closeModal() {
                var _this16 = this;
                if (!this.activeModal) {
                    return
                }
                this.activeModal.removeEventListener('keyup', this._handleKeyboardListener);
                this.domDelegate.off('keyup');
                fastdom.mutate(function() {
                    if (_this16.activeModal.classList.contains('Modal--videoContent')) {
                        _this16._resetVideoListener = _this16._resetVideo.bind(_this16);
                        _this16.activeModal.addEventListener('transitionend', _this16._resetVideoListener)
                    }
                    __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].removeTrapFocus(_this16.activeModal, 'modal');
                    if (!_this16.activeModal.classList.contains('Modal--fullScreen')) {
                        _this16.pageOverlayElement.classList.remove('is-visible');
                        _this16.pageOverlayElement.removeEventListener('click', _this16._closeListener)
                    }
                    _this16.activeModal.setAttribute('aria-hidden', 'true');
                    _this16.activeModal = null;
                    if (!_this16.wasLocked) {
                        document.documentElement.classList.remove('no-scroll')
                    }
                })
            }
        }, {
            key: '_onTransitionEnded',
            value: function _onTransitionEnded(event) {
                if (event.propertyName !== 'visibility') {
                    return
                }
                __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__["default"].trapFocus(this.activeModal, 'modal');
                this.activeModal.removeEventListener('transitionend', this._onTransitionEndedListener)
            }
        }, {
            key: '_resetVideo',
            value: function _resetVideo(event) {
                if (event.propertyName !== 'visibility') {
                    return
                }
                var iframe = event.target.querySelector('iframe');
                iframe.parentNode.innerHTML = '<iframe class="Image--lazyLoad" data-src=' + iframe.getAttribute('data-src') + ' frameborder="0" allowfullscreen>';
                event.target.removeEventListener('transitionend', this._resetVideoListener)
            }
        }, {
            key: '_checkOpenByHash',
            value: function _checkOpenByHash() {
                var hash = window.location.hash
                  , modal = document.getElementById(hash.replace('#', ''));
                if (modal && modal.classList.contains('Modal')) {
                    this._openModal(modal)
                }
            }
        }, {
            key: '_handleKeyboard',
            value: function _handleKeyboard(event) {
                if (null !== this.activeModal && event.keyCode === 27) {
                    this._closeModal()
                }
            }
        }]);
        return Modal
    }();
    __webpack_exports__["default"] = Modal
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var PageTransition = function() {
        _createClass(PageTransition, null, [{
            key: 'getInstance',
            value: function getInstance() {
                if (!this.instance) {
                    this.instance = new PageTransition()
                }
                return this.instance
            }
        }]);
        function PageTransition() {
            _classCallCheck(this, PageTransition);
            this.domDelegate = new domDelegate.Delegate(document.body);
            this.isPageLoaded = window.theme.showPageTransition || document.readyState === 'complete' || document.readyState === 'loaded' || document.readyState === 'interactive';
            this.pageTransition = document.querySelector('.PageTransition');
            if (!this.isPageLoaded) {
                document.addEventListener('DOMContentLoaded', this._onPageLoaded.bind(this))
            } else {
                this._onPageLoaded()
            }
            this._attachListeners()
        }
        _createClass(PageTransition, [{
            key: '_attachListeners',
            value: function _attachListeners() {
                this.domDelegate.on('click', 'a[href]:not([href^="#"]):not([href^="javascript:"]):not([href^="mailto:"]):not([href^="tel:"]):not([target="_blank"])', this._onPageUnload.bind(this))
            }
        }, {
            key: '_onPageLoaded',
            value: function _onPageLoaded() {
                this.isPageLoaded = !0;
                if (window.theme.showPageTransition && this.pageTransition) {
                    new TimelineLite().fromTo(this.pageTransition, 0.25, {
                        autoAlpha: 1,
                        ease: Linear.easeNone
                    }, {
                        autoAlpha: 0,
                        ease: Linear.easeNone
                    })
                }
            }
        }, {
            key: '_onPageUnload',
            value: function _onPageUnload(event, target) {
                if (event.defaultPrevented || event.metaKey || !window.theme.showPageTransition || !this.pageTransition) {
                    return
                }
                event.preventDefault();
                if (window.theme.showPageTransition && this.pageTransition) {
                    var timeline = new TimelineLite({
                        onComplete: function onComplete() {
                            window.location.href = target.href
                        }
                    });
                    timeline.fromTo(this.pageTransition, 0.25, {
                        autoAlpha: 0,
                        ease: Linear.easeNone
                    }, {
                        autoAlpha: 1,
                        ease: Linear.easeNone
                    })
                }
            }
        }]);
        return PageTransition
    }();
    __webpack_exports__["default"] = PageTransition
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Accessibility__ = __webpack_require__(3)
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__Carousel__ = __webpack_require__(1);
    __webpack_require__.d(__webpack_exports__, "Carousel", function() {
        return __WEBPACK_IMPORTED_MODULE_0__Carousel__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_1__Collapsible__ = __webpack_require__(19);
    __webpack_require__.d(__webpack_exports__, "Collapsible", function() {
        return __WEBPACK_IMPORTED_MODULE_1__Collapsible__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_2__Drawer__ = __webpack_require__(8);
    __webpack_require__.d(__webpack_exports__, "Drawer", function() {
        return __WEBPACK_IMPORTED_MODULE_2__Drawer__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_3__LoadingBar__ = __webpack_require__(20);
    __webpack_require__.d(__webpack_exports__, "LoadingBar", function() {
        return __WEBPACK_IMPORTED_MODULE_3__LoadingBar__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_4__Modal__ = __webpack_require__(21);
    __webpack_require__.d(__webpack_exports__, "Modal", function() {
        return __WEBPACK_IMPORTED_MODULE_4__Modal__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_5__Popover__ = __webpack_require__(9);
    __webpack_require__.d(__webpack_exports__, "Popover", function() {
        return __WEBPACK_IMPORTED_MODULE_5__Popover__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_6__PageTransition__ = __webpack_require__(22);
    __webpack_require__.d(__webpack_exports__, "PageTransition", function() {
        return __WEBPACK_IMPORTED_MODULE_6__PageTransition__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_7__ProductItemColorSwatch__ = __webpack_require__(4);
    __webpack_require__.d(__webpack_exports__, "ProductItemColorSwatch", function() {
        return __WEBPACK_IMPORTED_MODULE_7__ProductItemColorSwatch__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_8__ProductImageZoom__ = __webpack_require__(14);
    __webpack_require__.d(__webpack_exports__, "ProductImageZoom", function() {
        return __WEBPACK_IMPORTED_MODULE_8__ProductImageZoom__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_9__ProductReviews__ = __webpack_require__(15);
    __webpack_require__.d(__webpack_exports__, "ProductReviews", function() {
        return __WEBPACK_IMPORTED_MODULE_9__ProductReviews__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_10__ProductVariants__ = __webpack_require__(11);
    __webpack_require__.d(__webpack_exports__, "ProductVariants", function() {
        return __WEBPACK_IMPORTED_MODULE_10__ProductVariants__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_11__ScrollSpy__ = __webpack_require__(17);
    __webpack_require__.d(__webpack_exports__, "ScrollSpy", function() {
        return __WEBPACK_IMPORTED_MODULE_11__ScrollSpy__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_12__Search__ = __webpack_require__(23);
    __webpack_require__.d(__webpack_exports__, "Search", function() {
        return __WEBPACK_IMPORTED_MODULE_12__Search__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_13__ShippingEstimator__ = __webpack_require__(18);
    __webpack_require__.d(__webpack_exports__, "ShippingEstimator", function() {
        return __WEBPACK_IMPORTED_MODULE_13__ShippingEstimator__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_14__VariantSelector__ = __webpack_require__(16);
    __webpack_require__.d(__webpack_exports__, "VariantSelector", function() {
        return __WEBPACK_IMPORTED_MODULE_14__VariantSelector__["default"]
    })
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper__ = __webpack_require__(6);
    var __WEBPACK_IMPORTED_MODULE_1__components_CountrySelector__ = __webpack_require__(12);
    var AddressesSection = function AddressesSection() {
        var _this20 = this;
        _classCallCheck(this, AddressesSection);
        this.countrySelectors = [];
        __WEBPACK_IMPORTED_MODULE_0__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Modal--address')).forEach(function(modal) {
            _this20.countrySelectors.push(new __WEBPACK_IMPORTED_MODULE_1__components_CountrySelector__["default"](modal.querySelector('[name="address[country]"]'),modal.querySelector('[name="address[province]"]')))
        })
    };
    __webpack_exports__["default"] = AddressesSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var ArticleList = function() {
        function ArticleList(container) {
            var _this21 = this;
            _classCallCheck(this, ArticleList);
            this.element = container;
            if (window.theme.showElementStaggering) {
                this.timeline = new TimelineLite({
                    delay: window.theme.showPageTransition ? 0.5 : 0
                });
                this.intersectionObserver = new IntersectionObserver(this._reveal.bind(this));
                __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ArticleItem')).forEach(function(item) {
                    _this21.intersectionObserver.observe(item)
                })
            }
        }
        _createClass(ArticleList, [{
            key: 'onUnload',
            value: function onUnload() {
                if (window.theme.showElementStaggering) {
                    this.intersectionObserver.disconnect();
                    this.timeline.kill()
                }
            }
        }, {
            key: '_reveal',
            value: function _reveal(results) {
                var _this22 = this;
                var toReveal = [];
                results.forEach(function(result) {
                    if (result.isIntersecting || result.intersectionRatio > 0) {
                        toReveal.push(result.target);
                        _this22.intersectionObserver.unobserve(result.target)
                    }
                });
                if (toReveal.length === 0) {
                    return
                }
                this.timeline.staggerFromTo(toReveal, 0.45, {
                    autoAlpha: 0,
                    y: 30
                }, {
                    autoAlpha: 1,
                    y: 0
                }, 0.2)
            }
        }]);
        return ArticleList
    }();
    __webpack_exports__["default"] = ArticleList
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var ArticleSection = function() {
        function ArticleSection(container) {
            var _this23 = this;
            _classCallCheck(this, ArticleSection);
            this.element = container;
            this.toolbarElement = this.element.querySelector('.ArticleToolbar');
            this.articleNavElement = this.element.querySelector('.ArticleNav');
            var articleImageElement = this.element.querySelector('.Article__Image');
            if (articleImageElement && window.matchMedia('(-moz-touch-enabled: 0), (hover: hover)').matches) {
                this.parallaxInstance = new Rellax('.Article__Image',{
                    speed: -7,
                    center: !1,
                    round: !0
                })
            }
            if (window.theme.showElementStaggering) {
                this.timeline = new TimelineLite({
                    delay: window.theme.showPageTransition ? 0.5 : 0
                });
                this.intersectionObserver = new IntersectionObserver(this._reveal.bind(this));
                __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ArticleItem')).forEach(function(item) {
                    _this23.intersectionObserver.observe(item)
                })
            }
            this._attachListeners()
        }
        _createClass(ArticleSection, [{
            key: 'onUnload',
            value: function onUnload() {
                if (this.parallaxInstance) {
                    this.parallaxInstance.destroy()
                }
                if (window.theme.showElementStaggering) {
                    this.intersectionObserver.disconnect();
                    this.timeline.kill()
                }
                window.removeEventListener('scroll', this._onScrollListener)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._onScrollListener = this._checkToolbarVisibility.bind(this);
                window.addEventListener('scroll', this._onScrollListener)
            }
        }, {
            key: '_checkToolbarVisibility',
            value: function _checkToolbarVisibility() {
                var _this24 = this;
                var lastYPosition = 0
                  , headerHeight = 0
                  , navBottom = 0
                  , isFixedHeader = 0
                  , header = document.querySelector('.Header');
                fastdom.measure(function() {
                    lastYPosition = window.pageYOffset;
                    headerHeight = header.offsetHeight;
                    isFixedHeader = parseInt(window.getComputedStyle(document.body).getPropertyValue('--use-sticky-header') || 0);
                    if (_this24.articleNavElement) {
                        navBottom = _this24.articleNavElement.offsetTop + _this24.articleNavElement.clientHeight - headerHeight
                    }
                });
                fastdom.mutate(function() {
                    _this24.toolbarElement.style.top = isFixedHeader ? headerHeight + 'px' : null;
                    if (_this24.articleNavElement) {
                        if (lastYPosition > 150 && _this24.articleNavElement && lastYPosition < navBottom) {
                            _this24.toolbarElement.classList.add('is-visible')
                        } else {
                            _this24.toolbarElement.classList.remove('is-visible')
                        }
                    } else {
                        if (lastYPosition > 150) {
                            _this24.toolbarElement.classList.add('is-visible')
                        } else {
                            _this24.toolbarElement.classList.remove('is-visible')
                        }
                    }
                })
            }
        }, {
            key: '_reveal',
            value: function _reveal(results) {
                var _this25 = this;
                var toReveal = [];
                results.forEach(function(result) {
                    if (result.isIntersecting || result.intersectionRatio > 0) {
                        toReveal.push(result.target);
                        _this25.intersectionObserver.unobserve(result.target)
                    }
                });
                if (toReveal.length === 0) {
                    return
                }
                this.timeline.staggerFromTo(toReveal, 0.45, {
                    autoAlpha: 0,
                    y: 30
                }, {
                    autoAlpha: 1,
                    y: 0
                }, 0.2)
            }
        }]);
        return ArticleSection
    }();
    __webpack_exports__["default"] = ArticleSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var BackgroundVideoSection = function() {
        function BackgroundVideoSection(container) {
            _classCallCheck(this, BackgroundVideoSection);
            this.element = container;
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            this._loadScript().then(this._setupPlayer.bind(this))
        }
        _createClass(BackgroundVideoSection, [{
            key: '_loadScript',
            value: function _loadScript() {
                var _this26 = this;
                return new Promise(function(resolve, reject) {
                    var script = document.createElement('script');
                    document.body.appendChild(script);
                    script.onload = resolve;
                    script.onerror = reject;
                    script.async = !0;
                    script.src = _this26.options.videoType === 'youtube' ? '//www.youtube.com/iframe_api' : '//player.vimeo.com/api/player.js'
                }
                )
            }
        }, {
            key: 'onUnload',
            value: function onUnload() {
                if (this.player) {
                    this.player.destroy()
                }
            }
        }, {
            key: '_setupPlayer',
            value: function _setupPlayer() {
                var _this27 = this;
                var elementToInsert = this.element.querySelector('.ImageHero__VideoHolder');
                var playerLoadingInterval = setInterval(function() {
                    if (_this27.options.videoType === 'youtube') {
                        if (window.YT) {
                            _this27.player = new YT.Player(elementToInsert,{
                                videoId: _this27.options.videoId,
                                playerVars: {
                                    showinfo: 0,
                                    controls: 0,
                                    fs: 0,
                                    rel: 0,
                                    height: '100%',
                                    width: '100%',
                                    iv_load_policy: 3,
                                    html5: 1,
                                    loop: 1,
                                    playsinline: 1,
                                    modestbranding: 1,
                                    disablekb: 1,
                                    origin: _this27.options.requestHost
                                },
                                events: {
                                    onReady: _this27._onYouTubeReady.bind(_this27),
                                    onStateChange: _this27._onYouTubeStateChange.bind(_this27)
                                }
                            });
                            clearInterval(playerLoadingInterval)
                        }
                    } else {
                        if (window.Vimeo) {
                            _this27.player = new Vimeo.Player(elementToInsert.parentNode,{
                                id: _this27.options.videoId,
                                autoplay: !0,
                                muted: !0,
                                background: !0,
                                loop: !0
                            })
                        }
                    }
                }, 50)
            }
        }, {
            key: '_onYouTubeReady',
            value: function _onYouTubeReady(event) {
                this.player.mute();
                this.player.playVideo()
            }
        }, {
            key: '_onYouTubeStateChange',
            value: function _onYouTubeStateChange(event) {
                if (event.data === YT.PlayerState.ENDED) {
                    this.player.playVideo()
                }
            }
        }]);
        return BackgroundVideoSection
    }();
    __webpack_exports__["default"] = BackgroundVideoSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__ = __webpack_require__(8);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Currency__ = __webpack_require__(5);
    var __WEBPACK_IMPORTED_MODULE_3__components_ShippingEstimator__ = __webpack_require__(18);
    var CartSection = function() {
        function CartSection(container) {
            _classCallCheck(this, CartSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            this.itemCount = this.options.itemCount;
            this.isCartNoteOpen = !1;
            if (this.options.drawer) {
                this.sidebarDrawer = new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](this.element,{
                    onClose: this._onDrawerClosed.bind(this)
                })
            }
            if (this.options.hasShippingEstimator) {
                this.shippingEstimator = new __WEBPACK_IMPORTED_MODULE_3__components_ShippingEstimator__["default"](this.element.querySelector('.ShippingEstimator'))
            }
            this._attachListeners()
        }
        _createClass(CartSection, [{
            key: 'onUnload',
            value: function onUnload() {
                if (this.options.hasShippingEstimator) {
                    this.shippingEstimator.destroy()
                }
                this.delegateElement.off();
                document.removeEventListener('product:added', this._onProductAddedListener)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._onProductAddedListener = this._onProductAdded.bind(this);
                this.delegateElement.on('change', '#cart-note', this._updateCartNote.bind(this));
                this.delegateElement.on('click', '[data-action="update-item-quantity"], [data-action="remove-item"]', this._updateItemQuantity.bind(this));
                this.delegateElement.on('change', '.QuantitySelector__CurrentQuantity', this._updateItemQuantity.bind(this));
                if (this.options.drawer) {
                    this.delegateElement.on('click', '[data-action="toggle-cart-note"]', this._toggleCartNote.bind(this))
                }
                document.addEventListener('product:added', this._onProductAddedListener)
            }
        }, {
            key: '_updateCartNote',
            value: function _updateCartNote(event, target) {
                var formData = new FormData();
                formData.append('note', target.value);
                fetch('/cart/update.js', {
                    credentials: 'same-origin',
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: formData
                })
            }
        }, {
            key: '_toggleCartNote',
            value: function _toggleCartNote() {
                var _this28 = this;
                var noteContainer = this.element.querySelector('.Cart__OffscreenNoteContainer')
                  , cartNote = this.element.querySelector('#cart-note');
                this.element.classList.toggle('has-note-open');
                this.element.querySelector('.Cart__NoteButton').innerHTML = cartNote.value !== '' ? window.languages.cartEditNote : window.languages.cartAddNote;
                noteContainer.setAttribute('aria-hidden', noteContainer.getAttribute('aria-hidden') === 'true' ? 'false' : 'true');
                this.isCartNoteOpen = noteContainer.getAttribute('aria-hidden') === 'false';
                if (this.element.classList.contains('has-note-open')) {
                    var transitionEndListener = function transitionEndListener() {
                        _this28.element.querySelector('#cart-note').focus();
                        noteContainer.removeEventListener('transitionend', transitionEndListener)
                    };
                    noteContainer.addEventListener('transitionend', transitionEndListener)
                }
            }
        }, {
            key: '_updateItemQuantity',
            value: function _updateItemQuantity(event, target) {
                var _this29 = this;
                document.dispatchEvent(new CustomEvent('theme:loading:start'));
                var formData = new FormData()
                  , quantity = null
                  , elementToAnimate = null;
                formData.append('id', target.getAttribute('data-line-id'));
                if (target.tagName === 'INPUT') {
                    quantity = parseInt(Math.max(parseInt(target.value) || 1, 1))
                } else {
                    quantity = parseInt(target.getAttribute('data-quantity'))
                }
                formData.append('quantity', quantity);
                if (quantity === 0) {
                    elementToAnimate = target.closest('.CartItemWrapper')
                }
                fetch('/cart/change.js', {
                    credentials: 'same-origin',
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: formData
                }).then(function(cart) {
                    cart.json().then(function(content) {
                        _this29.itemCount = content.item_count;
                        _this29._rerenderCart(elementToAnimate);
                        document.dispatchEvent(new CustomEvent('theme:loading:end'))
                    })
                });
                event.preventDefault()
            }
        }, {
            key: '_onProductAdded',
            value: function _onProductAdded(event) {
                var _this30 = this;
                this.itemCount += event.detail.quantity;
                this._rerenderCart().then(function() {
                    _this30.sidebarDrawer.open()
                })
            }
        }, {
            key: '_onDrawerClosed',
            value: function _onDrawerClosed() {
                if (this.isCartNoteOpen) {
                    this._toggleCartNote()
                }
            }
        }, {
            key: '_rerenderCart',
            value: function _rerenderCart(elementToAnimate) {
                var _this31 = this;
                var cartDot = __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('.Header__CartDot'))
                  , cartQuantity = __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('.Header__CartCount'));
                cartDot.forEach(function(item) {
                    if (_this31.itemCount === 0) {
                        item.classList.remove('is-visible')
                    } else {
                        item.classList.add('is-visible')
                    }
                });
                cartQuantity.forEach(function(item) {
                    item.textContent = _this31.itemCount
                });
                return fetch('/cart?view=' + (this.options.drawer ? 'drawer' : 'ajax') + '&timestamp=' + Date.now(), {
                    credentials: 'same-origin',
                    method: 'GET'
                }).then(function(content) {
                    if (_this31.options.drawer && elementToAnimate) {
                        var timelineLite = new TimelineLite({
                            onComplete: function onComplete() {
                                content.text().then(function(html) {
                                    _this31._replaceContent(html)
                                })
                            }
                        });
                        timelineLite.to(elementToAnimate, 0.5, {
                            height: 0,
                            opacity: 0,
                            ease: Cubic.easeOut
                        }, 0);
                        if (_this31.itemCount === 0) {
                            timelineLite.to(_this31.element.querySelector('.Drawer__Footer'), 0.5, {
                                y: '100%',
                                transition: 'none',
                                ease: Cubic.easeInOut
                            }, 0)
                        }
                    } else {
                        content.text().then(function(html) {
                            _this31._replaceContent(html)
                        })
                    }
                })
            }
        }, {
            key: '_replaceContent',
            value: function _replaceContent(html) {
                var tempElement = document.createElement('div');
                tempElement.innerHTML = html;
                if (window.theme.currencyConversionEnabled) {
                    __WEBPACK_IMPORTED_MODULE_2__helper_Currency__["default"].convertAll(tempElement)
                }
                var cartNodeParent = this.element.querySelector('.Cart').parentNode;
                if (this.options.drawer) {
                    var currentScrollPosition = this.element.querySelector('.Drawer__Main').scrollTop;
                    cartNodeParent.replaceChild(tempElement.querySelector('.Cart'), this.element.querySelector('.Cart'));
                    this.element.querySelector('.Drawer__Main').scrollTop = currentScrollPosition
                } else {
                    if (this.itemCount === 0) {
                        this.element.innerHTML = tempElement.querySelector('.shopify-section').firstElementChild.innerHTML
                    } else {
                        cartNodeParent.replaceChild(tempElement.querySelector('.Cart'), this.element.querySelector('.Cart'));
                        this.element.querySelector('.PageHeader').innerHTML = tempElement.querySelector('.PageHeader').innerHTML
                    }
                }
            }
        }]);
        return CartSection
    }();
    __webpack_exports__["default"] = CartSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var CollectionListSection = function() {
        function CollectionListSection(container) {
            _classCallCheck(this, CollectionListSection);
            this.element = container;
            this.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'))
        }
        _createClass(CollectionListSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousel.destroy()
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this.carousel.selectCell(event.target.getAttribute('data-slide-index'), !0, !event.detail.load)
            }
        }, {
            key: 'onBlockDeselect',
            value: function onBlockDeselect() {
                this.carousel.unpausePlayer()
            }
        }]);
        return CollectionListSection
    }();
    __webpack_exports__["default"] = CollectionListSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__ = __webpack_require__(8);
    var __WEBPACK_IMPORTED_MODULE_1__components_Popover__ = __webpack_require__(9);
    var __WEBPACK_IMPORTED_MODULE_2__components_ProductItemColorSwatch__ = __webpack_require__(4);
    var __WEBPACK_IMPORTED_MODULE_3__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_4__helper_Responsive__ = __webpack_require__(2);
    var __WEBPACK_IMPORTED_MODULE_5__components_OverflowScroller__ = __webpack_require__(13);
    var CollectionSection = function() {
        function CollectionSection(element) {
            _classCallCheck(this, CollectionSection);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.toolbarElement = this.element.querySelector('.CollectionToolbar');
            this.collectionInnerElement = this.element.querySelector('.CollectionInner__Products');
            this.settings = JSON.parse(this.element.getAttribute('data-section-settings'));
            this.currentTags = this.settings.currentTags;
            this.currentSortBy = this.settings.sortBy;
            this.temporaryTags = this.currentTags.slice();
            var sortPopoverElement = document.getElementById('collection-sort-popover');
            if (sortPopoverElement) {
                this.sortPopover = new __WEBPACK_IMPORTED_MODULE_1__components_Popover__["default"](sortPopoverElement,{
                    onValueChanged: this._sortByChanged.bind(this)
                })
            }
            var filterDrawerElement = document.getElementById('collection-filter-drawer');
            if (filterDrawerElement) {
                this.filterDrawer = new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](filterDrawerElement,{
                    onClose: this._removeUncommittedTags.bind(this)
                })
            }
            if (this.settings.filterPosition === 'sidebar') {
                this.filterInnerSidebarScroller = new __WEBPACK_IMPORTED_MODULE_5__components_OverflowScroller__["default"](this.element.querySelector('.CollectionInner__Sidebar'))
            }
            var collectionImageElement = this.element.querySelector('.PageHeader__ImageWrapper');
            if (collectionImageElement && window.matchMedia('(-moz-touch-enabled: 0), (hover: hover)').matches) {
                this.parallaxInstance = new Rellax('.PageHeader__ImageWrapper',{
                    speed: -7,
                    center: !1,
                    round: !0
                })
            }
            new __WEBPACK_IMPORTED_MODULE_2__components_ProductItemColorSwatch__["default"](this.element);
            this.timeline = new TimelineLite({
                delay: window.theme.showPageTransition ? 0.5 : 0
            });
            this._setupAnimation();
            this._attachListeners()
        }
        _createClass(CollectionSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off('click');
                if (this.sortPopover) {
                    this.sortPopover.destroy()
                }
                if (this.filterDrawer) {
                    this.filterDrawer.destroy()
                }
                if (this.filterInnerSidebarScroller) {
                    this.filterInnerSidebarScroller.destroy()
                }
                if (this.parallaxInstance) {
                    this.parallaxInstance.destroy()
                }
                if (window.theme.showElementStaggering) {
                    this.intersectionObserver.disconnect();
                    this.timeline.kill()
                }
            }
        }, {
            key: '_setupAnimation',
            value: function _setupAnimation() {
                var _this32 = this;
                if (!window.theme.showElementStaggering) {
                    return
                }
                if (this.intersectionObserver) {
                    this.intersectionObserver.disconnect()
                }
                this.intersectionObserver = new IntersectionObserver(this._reveal.bind(this),{
                    threshold: 0.3
                });
                __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ProductList .ProductItem')).forEach(function(item) {
                    _this32.intersectionObserver.observe(item)
                })
            }
        }, {
            key: '_reveal',
            value: function _reveal(results) {
                var _this33 = this;
                var toReveal = [];
                results.forEach(function(result) {
                    if (result.isIntersecting || result.intersectionRatio > 0) {
                        toReveal.push(result.target);
                        _this33.intersectionObserver.unobserve(result.target)
                    }
                });
                if (toReveal.length === 0) {
                    return
                }
                this.timeline.staggerFromTo(toReveal, 0.45, {
                    autoAlpha: 0,
                    y: 25
                }, {
                    autoAlpha: 1,
                    y: 0
                }, 0.2)
            }
        }, {
            key: '_changeLayoutMode',
            value: function _changeLayoutMode(event, target) {
                var _this34 = this;
                var layoutType = target.getAttribute('data-grid-type')
                  , newCount = parseInt(target.getAttribute('data-count'));
                var productList = this.collectionInnerElement.querySelector('.ProductList');
                if (productList) {
                    var previousCount = parseInt(productList.getAttribute('data-' + layoutType + '-count'));
                    if (previousCount === newCount) {
                        return
                    }
                    productList.setAttribute('data-' + layoutType + '-count', newCount);
                    __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(productList.querySelectorAll('.Grid__Cell')).forEach(function(item) {
                        if (layoutType === 'mobile') {
                            item.classList.remove('1/' + previousCount + '--phone');
                            item.classList.add('1/' + newCount + '--phone')
                        } else {
                            var previousTabletCount = previousCount === 2 ? 2 : 3
                              , newTabletCount = newCount === 2 ? 2 : 3;
                            if (_this34.settings.filterPosition === 'drawer') {
                                item.classList.remove('1/' + previousCount + '--lap-and-up');
                                item.classList.add('1/' + newCount + '--lap-and-up')
                            } else {
                                item.classList.remove('1/' + previousCount + '--desk');
                                item.classList.add('1/' + newCount + '--desk')
                            }
                            item.classList.remove('1/' + previousTabletCount + '--tablet-and-up');
                            item.classList.add('1/' + newTabletCount + '--tablet-and-up')
                        }
                        if (window.theme.showElementStaggering) {
                            item.firstElementChild.style.visibility = 'hidden'
                        }
                    });
                    lazySizes.autoSizer.checkElems()
                }
                target.classList.add('is-active');
                __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].getSiblings(target)[0].classList.remove('is-active');
                this._setupAnimation();
                var formData = new FormData();
                formData.append('attributes[collection_' + layoutType + '_items_per_row]', newCount);
                fetch('/cart/update.js', {
                    credentials: 'same-origin',
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: formData
                })
            }
        }, {
            key: '_sortByChanged',
            value: function _sortByChanged(sortBy) {
                if (this.currentSortBy === sortBy) {
                    return
                }
                this.currentSortBy = sortBy;
                this._reloadProducts()
            }
        }, {
            key: '_toggleTag',
            value: function _toggleTag(event) {
                var element = event.target;
                if (element.classList.contains('is-active')) {
                    this.temporaryTags.splice(this.temporaryTags.indexOf(element.getAttribute('data-tag')), 1)
                } else {
                    var activeSibling = element.closest('.Collapsible').querySelector('.is-active');
                    if (activeSibling) {
                        this.temporaryTags.splice(this.temporaryTags.indexOf(activeSibling.getAttribute('data-tag')), 1)
                    }
                    this.temporaryTags.push(element.getAttribute('data-tag'))
                }
                this._updateActiveTags();
                if (__WEBPACK_IMPORTED_MODULE_4__helper_Responsive__["default"].matchesBreakpoint('lap-and-up') && this.settings.filterPosition === 'sidebar') {
                    this._commit()
                }
            }
        }, {
            key: '_removeUncommittedTags',
            value: function _removeUncommittedTags() {
                this.temporaryTags = this.currentTags.slice();
                this._updateActiveTags()
            }
        }, {
            key: '_applyTags',
            value: function _applyTags() {
                this._updateActiveTags();
                this._commit()
            }
        }, {
            key: '_resetTags',
            value: function _resetTags() {
                this.temporaryTags = [];
                this._applyTags()
            }
        }, {
            key: '_updateActiveTags',
            value: function _updateActiveTags() {
                var _this35 = this;
                __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.CollectionFilters [data-tag]')).forEach(function(item) {
                    if (_this35.temporaryTags.includes(item.getAttribute('data-tag'))) {
                        item.classList.add('is-active');
                        item.parentNode.classList.add('is-selected')
                    } else {
                        item.classList.remove('is-active');
                        item.parentNode.classList.remove('is-selected')
                    }
                })
            }
        }, {
            key: '_commit',
            value: function _commit() {
                var _this36 = this;
                if (this.currentTags.sort().join(',') !== this.temporaryTags.sort().join(',')) {
                    this.currentTags = this.temporaryTags.slice();
                    this._reloadProducts()
                }
                if (this.filterDrawer.isOpen) {
                    this.filterDrawer.close()
                }
                __WEBPACK_IMPORTED_MODULE_3__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('[data-action="reset-tags"]')).forEach(function(resetButton) {
                    resetButton.style.display = _this36.currentTags.length === 0 ? 'none' : 'block'
                })
            }
        }, {
            key: '_reloadProducts',
            value: function _reloadProducts() {
                var _this37 = this;
                document.dispatchEvent(new CustomEvent('theme:loading:start'));
                var filterElement = this.toolbarElement.querySelector('.CollectionToolbar__Item--filter');
                if (filterElement) {
                    var filterElementCount = filterElement.querySelector('span');
                    if (filterElementCount) {
                        filterElement.removeChild(filterElementCount)
                    }
                    if (this.currentTags.length === 0) {
                        filterElement.classList.add('Text--subdued')
                    } else {
                        filterElement.classList.remove('Text--subdued');
                        filterElement.innerHTML += '<span class="Text--subdued">(' + this.currentTags.length + ')</span>'
                    }
                }
                if (history.replaceState) {
                    var tags = this.currentTags.length > 0 ? this.currentTags.join('+') : '';
                    var newUrl = window.location.protocol + '//' + window.location.host + this.settings.collectionUrl + '/' + tags + '?sort_by=' + this.currentSortBy;
                    window.history.pushState({
                        path: newUrl
                    }, '', newUrl)
                }
                var formData = new FormData();
                formData.append('view', 'ajax');
                formData.append('sort_by', this.currentSortBy);
                fetch(location.pathname + '?view=ajax&sort_by=' + this.currentSortBy, {
                    credentials: 'same-origin',
                    method: 'GET'
                }).then(function(response) {
                    response.text().then(function(content) {
                        var tempElement = document.createElement('div');
                        tempElement.innerHTML = content;
                        _this37.collectionInnerElement.innerHTML = tempElement.querySelector('.shopify-section').innerHTML;
                        document.dispatchEvent(new CustomEvent('theme:loading:end'));
                        _this37._setupAnimation();
                        var elementOffset = _this37.element.querySelector('.CollectionMain').getBoundingClientRect().top - parseInt(document.documentElement.style.getPropertyValue('--header-height'));
                        if (__WEBPACK_IMPORTED_MODULE_4__helper_Responsive__["default"].matchesBreakpoint('lap-and-up') && _this37.toolbarElement && _this37.toolbarElement.clientHeight === 0) {
                            elementOffset -= 50
                        }
                        if (elementOffset < 0) {
                            window.scrollBy({
                                top: elementOffset,
                                behavior: 'smooth'
                            })
                        }
                    })
                })
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._toggleTagListener = this._toggleTag.bind(this);
                this._applyTagsListener = this._applyTags.bind(this);
                this._resetTagsListener = this._resetTags.bind(this);
                this._changeLayoutModeListener = this._changeLayoutMode.bind(this);
                this.delegateElement.on('click', '[data-action="toggle-tag"]', this._toggleTagListener);
                this.delegateElement.on('click', '[data-action="apply-tags"]', this._applyTagsListener);
                this.delegateElement.on('click', '[data-action="reset-tags"]', this._resetTagsListener);
                this.delegateElement.on('click', '[data-action="change-layout-mode"]', this._changeLayoutModeListener);
                window.addEventListener('popstate', function(event) {
                    if (event.state.path) {
                        window.location.href = event.state.path
                    }
                })
            }
        }]);
        return CollectionSection
    }();
    __webpack_exports__["default"] = CollectionSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Animation__ = __webpack_require__(7);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var FaqSection = function() {
        function FaqSection(element) {
            _classCallCheck(this, FaqSection);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this._attachListeners()
        }
        _createClass(FaqSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off()
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this._openItem(event.target)
            }
        }, {
            key: 'onBlockDeselect',
            value: function onBlockDeselect(event) {
                this._closeItem(event.target)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '.Faq__Question', this._toggleItem.bind(this));
                this.delegateElement.on('click', '.FaqSummary__Item', this._switchToCategory.bind(this))
            }
        }, {
            key: '_switchToCategory',
            value: function _switchToCategory(event, target) {
                target.classList.add('is-active');
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(target, '.is-active').forEach(function(item) {
                    item.classList.remove('is-active')
                })
            }
        }, {
            key: '_toggleItem',
            value: function _toggleItem(event, target) {
                var item = target.closest('.Faq__Item');
                if (item.getAttribute('aria-expanded') === 'true') {
                    this._closeItem(item)
                } else {
                    this._openItem(item)
                }
            }
        }, {
            key: '_openItem',
            value: function _openItem(item) {
                var answerWrapper = item.querySelector('.Faq__AnswerWrapper');
                item.setAttribute('aria-expanded', 'true');
                answerWrapper.setAttribute('aria-hidden', 'false');
                __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideDown(answerWrapper, !0);
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].getSiblings(item, '[aria-expanded="true"]').forEach(function(siblingItem) {
                    var siblingAnswerWrapper = siblingItem.querySelector('.Faq__AnswerWrapper');
                    siblingItem.setAttribute('aria-expanded', 'false');
                    siblingAnswerWrapper.setAttribute('aria-hidden', 'true');
                    __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(siblingAnswerWrapper)
                })
            }
        }, {
            key: '_closeItem',
            value: function _closeItem(item) {
                var answerWrapper = item.querySelector('.Faq__AnswerWrapper');
                item.setAttribute('aria-expanded', 'false');
                answerWrapper.setAttribute('aria-hidden', 'true');
                __WEBPACK_IMPORTED_MODULE_0__helper_Animation__["default"].slideUp(answerWrapper)
            }
        }]);
        return FaqSection
    }();
    __webpack_exports__["default"] = FaqSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__ = __webpack_require__(4);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_3__helper__ = __webpack_require__(6);
    var FeaturedCollectionsSection = function() {
        function FeaturedCollectionsSection(container) {
            var _this38 = this;
            _classCallCheck(this, FeaturedCollectionsSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(this.element.getAttribute('data-settings'));
            this.carousels = [];
            __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('[data-flickity-config]')).forEach(function(item) {
                _this38.carousels.push(new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](item))
            });
            new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element);
            this._setupAnimation();
            this._attachListeners()
        }
        _createClass(FeaturedCollectionsSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousels.forEach(function(item) {
                    return item.destroy()
                });
                this.delegateElement.off('click');
                this.intersectionObserver.disconnect();
                this.timeline.kill()
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this.element.querySelector('[aria-controls="' + event.target.id + '"]').click()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '[data-action="toggle-tab"]', this._switchTab.bind(this))
            }
        }, {
            key: '_switchTab',
            value: function _switchTab(event, target) {
                var _this39 = this;
                if (target.classList.contains('is-active')) {
                    return
                }
                target.classList.add('is-active');
                __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(target, '.is-active').forEach(function(item) {
                    item.classList.remove('is-active')
                });
                var tabPanelToShow = this.element.querySelector('#' + target.getAttribute('aria-controls'));
                this.timeline.eventCallback('onReverseComplete', function() {
                    tabPanelToShow.setAttribute('aria-hidden', 'false');
                    __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].getSiblings(tabPanelToShow, '.TabPanel[aria-hidden="false"]').forEach(function(item) {
                        item.setAttribute('aria-hidden', 'true')
                    });
                    if (__WEBPACK_IMPORTED_MODULE_3__helper__.ResponsiveHelper.matchesBreakpoint('lap-and-up')) {
                        _this39.carousels.forEach(function(carousel) {
                            carousel.flickityInstance.activate();
                            carousel.flickityInstance.resize()
                        })
                    }
                    _this39.timeline.clear();
                    _this39._setupAnimation()
                });
                if (this.options.layout === 'grid' && window.theme.showElementStaggering) {
                    this.timeline.reverse().timeScale(3)
                } else {
                    this.timeline.reverse()
                }
            }
        }, {
            key: '_setupAnimation',
            value: function _setupAnimation() {
                var _this40 = this;
                if (this.intersectionObserver) {
                    this.intersectionObserver.disconnect()
                }
                this.timeline = new TimelineLite({
                    delay: 0.5
                });
                if (this.options.layout === 'grid' && window.theme.showElementStaggering) {
                    this.intersectionObserver = new IntersectionObserver(this._reveal.bind(this));
                    __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.TabPanel[aria-hidden="false"] .ProductList .ProductItem')).forEach(function(item) {
                        _this40.intersectionObserver.observe(item)
                    })
                } else {
                    var productList = this.element.querySelector('.TabPanel[aria-hidden="false"] .ProductList');
                    if (productList) {
                        this.timeline.fromTo(productList, 0.6, {
                            autoAlpha: 0,
                            y: 25
                        }, {
                            autoAlpha: 1,
                            y: 0
                        })
                    }
                }
            }
        }, {
            key: '_reveal',
            value: function _reveal(results) {
                var _this41 = this;
                var toReveal = [];
                results.forEach(function(result) {
                    if (result.isIntersecting || result.intersectionRatio > 0) {
                        toReveal.push(result.target);
                        _this41.intersectionObserver.unobserve(result.target)
                    }
                });
                if (toReveal.length === 0) {
                    return
                }
                this.timeline.staggerFromTo(toReveal, 0.45, {
                    autoAlpha: 0,
                    y: 25
                }, {
                    autoAlpha: 1,
                    y: 0
                }, 0.2)
            }
        }]);
        return FeaturedCollectionsSection
    }();
    __webpack_exports__["default"] = FeaturedCollectionsSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_ProductVariants__ = __webpack_require__(11);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Image__ = __webpack_require__(10);
    var FeaturedProductSection = function() {
        function FeaturedProductSection(container) {
            _classCallCheck(this, FeaturedProductSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            if (!this.options.usePlaceholder) {
                this.productVariants = new __WEBPACK_IMPORTED_MODULE_0__components_ProductVariants__["default"](container,this.options)
            }
            this._attachListeners()
        }
        _createClass(FeaturedProductSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off('click');
                if (!this.options.usePlaceholder) {
                    this.productVariants.destroy()
                }
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('variant:changed', this._updateMainImage.bind(this))
            }
        }, {
            key: '_updateMainImage',
            value: function _updateMainImage(event) {
                var variant = event.detail.variant
                  , previousVariant = event.detail.previousVariant;
                if (!variant || !variant.featured_image || previousVariant.featured_image && previousVariant.featured_image.id === variant.featured_image.id) {
                    return
                }
                var newImage = variant.featured_image;
                var mainImageContainer = this.element.querySelector('.FeaturedProduct__Gallery .AspectRatio');
                mainImageContainer.style.cssText = 'max-width: ' + newImage.width + 'px; --aspect-ratio: ' + newImage.width / newImage.height;
                var newImageElement = document.createElement('img');
                newImageElement.classList.add('Image--lazyLoad');
                newImageElement.setAttribute('data-src', __WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSizedImageUrl(newImage.src, '1x1').replace('_1x1.', '_{width}x.'));
                newImageElement.setAttribute('data-widths', '[' + __WEBPACK_IMPORTED_MODULE_1__helper_Image__["default"].getSupportedSizes(newImage, [200, 400, 600, 700, 800, 900, 1000]).join(',') + ']');
                newImageElement.setAttribute('data-sizes', 'auto');
                mainImageContainer.replaceChild(newImageElement, mainImageContainer.querySelector('img'))
            }
        }]);
        return FeaturedProductSection
    }();
    __webpack_exports__["default"] = FeaturedProductSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var GiftCardSection = function() {
        function GiftCardSection(container) {
            _classCallCheck(this, GiftCardSection);
            this.element = container;
            this._createQrCode();
            this._setupPrint()
        }
        _createClass(GiftCardSection, [{
            key: '_createQrCode',
            value: function _createQrCode() {
                var qrCodeElement = document.getElementById('QrCode');
                new QRCode(qrCodeElement,{
                    text: qrCodeElement.getAttribute('data-identifier'),
                    width: 120,
                    height: 120
                })
            }
        }, {
            key: '_setupPrint',
            value: function _setupPrint() {
                var printElement = document.getElementById('PrintGiftCard');
                if (printElement) {
                    printElement.addEventListener('click', function() {
                        window.print()
                    })
                }
            }
        }]);
        return GiftCardSection
    }();
    __webpack_exports__["default"] = GiftCardSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Responsive__ = __webpack_require__(2);
    var HeaderSection = function() {
        function HeaderSection(container) {
            var _this42 = this;
            _classCallCheck(this, HeaderSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            this.lastScrollPosition = -1;
            this.isTouch = window.matchMedia('(-moz-touch-enabled: 1), (hover: none)').matches;
            if (this.options.isSticky) {
                Stickyfill.addOne(this.element.parentNode)
            }
            this._attachListeners();
            this._checkNavigationBounds();
            var mainLogo = this.element.querySelector('.Header__LogoImage--primary');
            if (mainLogo && !mainLogo.complete) {
                mainLogo.addEventListener('load', function() {
                    fastdom.measure(function() {
                        document.documentElement.style.setProperty('--header-height', _this42.element.clientHeight + 'px');
                        document.documentElement.style.setProperty('--header-is-not-transparent', _this42.options.hasTransparentHeader ? 0 : 1)
                    })
                })
            } else {
                fastdom.measure(function() {
                    document.documentElement.style.setProperty('--header-height', _this42.element.clientHeight + 'px');
                    document.documentElement.style.setProperty('--header-is-not-transparent', _this42.options.hasTransparentHeader ? 0 : 1)
                })
            }
        }
        _createClass(HeaderSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.element.removeEventListener('mouseleave', this._closeNavigationListener);
                this.element.removeEventListener('mouseenter', this._focusNavigationListener);
                this.element.removeEventListener('focusin', this._focusNavigationListener);
                this.delegateElement.off();
                window.removeEventListener('scroll', this._checkTransparentHeaderListener);
                window.removeEventListener('resize', this._verifyNavigationOverlapListener);
                if (this.options.isSticky) {
                    Stickyfill.removeOne(this.element.parentNode)
                }
            }
        }, {
            key: 'onSelect',
            value: function onSelect() {
                this._checkTransparentHeader()
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                var _this43 = this;
                var listItem = event.target.closest('.HorizontalList__Item');
                fastdom.mutate(function() {
                    event.target.setAttribute('aria-hidden', 'false');
                    if (listItem) {
                        listItem.classList.add('is-expanded');
                        __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(listItem, '.is-expanded').forEach(function(item) {
                            item.classList.remove('is-expanded')
                        })
                    }
                    _this43.element.classList.remove('Header--transparent')
                })
            }
        }, {
            key: 'onBlockDeselect',
            value: function onBlockDeselect(event) {
                var listItem = event.target.closest('.HorizontalList__Item');
                fastdom.mutate(function() {
                    event.target.setAttribute('aria-hidden', 'true');
                    if (listItem) {
                        listItem.classList.remove('is-expanded')
                    }
                });
                this._checkTransparentHeader()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._checkTransparentHeaderListener = this._checkTransparentHeader.bind(this);
                this._closeNavigationListener = this._closeNavigation.bind(this);
                this._focusNavigationListener = this._focusNavigation.bind(this);
                this._verifyNavigationOverlapListener = this._verifyNavigationOverlap.bind(this);
                this.element.addEventListener('mouseleave', this._closeNavigationListener);
                this.delegateElement.on('mouseenter', '.Header__MainNav .HorizontalList__Item, [aria-haspopup]', this._openMenu.bind(this), !0);
                this.delegateElement.on('focusin', '[aria-haspopup]', this._openMenu.bind(this), !0);
                this.delegateElement.on('focusout', '[aria-haspopup]', this._closeMenu.bind(this), !1);
                this.delegateElement.on('mouseleave', '.DropdownMenu [aria-haspopup]', this._closeMenu.bind(this), !0);
                this.delegateElement.on('mouseenter', '.DropdownMenu [aria-haspopup]', this._adjustDropdownPosition.bind(this), !0);
                if (this.isTouch) {
                    this.delegateElement.on('click', '.Header__MainNav [aria-haspopup]', this._handleTouchMenu.bind(this))
                }
                if (this.options.hasTransparentHeader) {
                    this.element.addEventListener('mouseenter', this._focusNavigationListener);
                    this.element.addEventListener('focusin', this._focusNavigationListener)
                }
                if (this.options.isSticky && this.options.hasTransparentHeader) {
                    window.addEventListener('scroll', this._checkTransparentHeaderListener)
                }
                if (this.options.navigationStyle === 'inline') {
                    window.addEventListener('resize', this._verifyNavigationOverlapListener)
                }
            }
        }, {
            key: '_focusNavigation',
            value: function _focusNavigation() {
                var _this44 = this;
                fastdom.mutate(function() {
                    if (!_this44.isTouch || __WEBPACK_IMPORTED_MODULE_1__helper_Responsive__["default"].matchesBreakpoint('desk')) {
                        _this44.element.classList.remove('Header--transparent')
                    }
                })
            }
        }, {
            key: '_closeNavigation',
            value: function _closeNavigation() {
                var _this45 = this;
                fastdom.mutate(function() {
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(_this45.element.querySelectorAll('.is-expanded')).forEach(function(item) {
                        item.classList.remove('is-expanded');
                        $(".dropdown .dropdown_list").removeClass('expand');
                        $(".dropdown").removeClass('expand')
                    });
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(_this45.element.querySelectorAll('[aria-hidden="false"]')).forEach(function(item) {
                        item.setAttribute('aria-hidden', 'true')
                    })
                });
                if (this.options.hasTransparentHeader) {
                    this._checkTransparentHeader()
                }
            }
        }, {
            key: '_openMenu',
            value: function _openMenu(event, target) {
                if (event.type === 'mouseenter' && target !== event.target) {
                    return
                }
                fastdom.mutate(function() {
                    var itemText = $(target).find('a.menu_link')[0].childNodes[0].nodeValue.toLowerCase();
                    var dropdownClass = "dropdown--" + itemText.trim();
                    target.classList.add('is-expanded');
                    if (itemText)
                        __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.children, '[aria-hidden="true"]').forEach(function(item) {
                            item.setAttribute('aria-hidden', 'false')
                        });
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target, '.is-expanded').forEach(function(item) {
                        item.classList.remove('is-expanded');
                        $(".dropdown .dropdown_list").removeClass('expand');
                        $(".dropdown").removeClass('expand');
                        __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(item.children, '[aria-hidden="false"]').forEach(function(item) {
                            item.setAttribute('aria-hidden', 'true')
                        })
                    });
                    $(".dropdown .dropdown_list#" + dropdownClass).addClass('expand');
                    $(".dropdown").addClass('expand')
                })
            }
        }, {
            key: '_closeMenu',
            value: function _closeMenu(event, target) {
                if (event.type === 'mouseleave' && target !== event.target) {
                    return
                }
                fastdom.mutate(function() {
                    target.classList.remove('is-expanded');
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.children, '[aria-hidden="false"]').forEach(function(item) {
                        item.setAttribute('aria-hidden', 'true')
                    })
                })
            }
        }, {
            key: '_adjustDropdownPosition',
            value: function _adjustDropdownPosition(event, target) {
                var nestedMenus = __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(target.querySelectorAll('.DropdownMenu'))
                  , shouldOpenLeft = !1;
                fastdom.measure(function() {
                    var windowWidth = window.innerWidth
                      , rightEdge = target.getBoundingClientRect().right;
                    nestedMenus.forEach(function(item) {
                        if (rightEdge + item.offsetWidth > windowWidth) {
                            shouldOpenLeft = !0
                        }
                    })
                });
                fastdom.mutate(function() {
                    if (shouldOpenLeft) {
                        nestedMenus.forEach(function(item) {
                            item.classList.add('DropdownMenu--reversed')
                        })
                    } else {
                        nestedMenus.forEach(function(item) {
                            item.classList.remove('DropdownMenu--reversed')
                        })
                    }
                })
            }
        }, {
            key: '_handleTouchMenu',
            value: function _handleTouchMenu(event, target) {
                if (!target.classList.contains('is-expanded')) {
                    event.preventDefault()
                }
            }
        }, {
            key: '_checkNavigationBounds',
            value: function _checkNavigationBounds() {
                var _this46 = this;
                if (this.options.navigationStyle !== 'inline') {
                    return
                }
                var mainTopMenu = this.element.querySelector('.Header__MainNav');
                this.mainMenuWidth = 45;
                this.menuLeftOffset = 0;
                fastdom.measure(function() {
                    _this46.menuLeftOffset = mainTopMenu.offsetLeft;
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(mainTopMenu.querySelectorAll('.HorizontalList__Item')).forEach(function(item) {
                        _this46.mainMenuWidth += parseInt(__WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].outerWidthWithMargin(item))
                    })
                });
                this._verifyNavigationOverlap()
            }
        }, {
            key: '_verifyNavigationOverlap',
            value: function _verifyNavigationOverlap() {
                var _this47 = this;
                var isOverlapping = !1;
                fastdom.measure(function() {
                    isOverlapping = _this47.mainMenuWidth > Math.ceil(_this47.element.querySelector('.Header__Logo').offsetLeft - _this47.menuLeftOffset)
                });
                fastdom.mutate(function() {
                    if (isOverlapping) {
                        _this47.element.classList.remove('Header--inline');
                        _this47.element.classList.add('Header--center')
                    } else {
                        _this47.element.classList.add('Header--inline');
                        _this47.element.classList.remove('Header--center')
                    }
                    _this47.element.classList.add('Header--initialized');
                    fastdom.measure(function() {
                        document.documentElement.style.setProperty('--header-height', _this47.element.clientHeight + 'px')
                    })
                })
            }
        }, {
            key: '_checkTransparentHeader',
            value: function _checkTransparentHeader() {
                var _this48 = this;
                if (!this.options.hasTransparentHeader) {
                    return
                }
                var scrollThreshold = 10;
                fastdom.measure(function() {
                    _this48.lastScrollPosition = window.pageYOffset
                });
                fastdom.mutate(function() {
                    if (_this48.lastScrollPosition <= scrollThreshold) {
                        _this48.element.classList.add('Header--transparent')
                    } else {
                        _this48.element.classList.remove('Header--transparent')
                    }
                })
            }
        }]);
        return HeaderSection
    }();
    __webpack_exports__["default"] = HeaderSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var ImageWithTextBlockSection = function() {
        function ImageWithTextBlockSection(container) {
            _classCallCheck(this, ImageWithTextBlockSection);
            this.element = container
        }
        _createClass(ImageWithTextBlockSection, [{
            key: 'onUnload',
            value: function onUnload() {}
        }]);
        return ImageWithTextBlockSection
    }();
    __webpack_exports__["default"] = ImageWithTextBlockSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var InstagramSection = function() {
        function InstagramSection(element) {
            _classCallCheck(this, InstagramSection);
            this.element = element;
            this.instafeed = this.element.querySelector('.Instafeed');
            this._initFeed()
        }
        _createClass(InstagramSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousel.destroy()
            }
        }, {
            key: '_initFeed',
            value: function _initFeed() {
                var _this49 = this;
                if (!this.instafeed.hasAttribute('data-access-token')) {
                    this.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.instafeed)
                } else {
                    var instafeed = new Instafeed({
                        get: 'user',
                        userId: 'self',
                        target: this.instafeed,
                        accessToken: this.instafeed.getAttribute('data-access-token'),
                        sortBy: 'most-recent',
                        limit: this.instafeed.getAttribute('data-image-count'),
                        resolution: 'standard_resolution',
                        template: '<a href="{{link}}" target="_blank" class="Carousel__Cell Instafeed__Cell">' + '<div rel="noopener" class="Instafeed__Image Image--lazyLoad Image--zoomOut" data-expand="10" data-bg="{{image}}" aria-label="Open on Instagram"></div>' + '<div class="Instafeed__Overlay">' + '<span class="Instafeed__LikeCount">' + '<svg class="Icon Icon--heart" viewBox="0 0 17 15" role="presentation">' + '<path d="M15.0349331 1.40485867C14.1287273.49933787 12.9252477 0 11.6443673 0S9.16000731.49933787 8.25448651 1.40417371c-.01164437.01164436-.02328874.02328873-.03493311.03561806-.01164436-.01232933-.02260377-.02328873-.03424813-.0349331C7.2790995.49933787 6.07561989 0 4.79473949 0 3.51385908 0 2.31037947.49933787 1.40417371 1.40485867.49796794 2.31037947 0 3.51385908 0 4.79473949 0 6.07561989.4986529 7.2790995 1.40417371 8.1846203L8.2195534 15l6.8153797-6.8153797c.9055208-.9055208 1.4041737-2.10900041 1.4041737-3.38988081 0-1.28019545-.4986529-2.48436002-1.4041737-3.38988082z"></path>' + '</svg>' + '{{likes}} likes' + '</span>' + '<p class="Instafeed__Caption">{{caption}}</p>' + '<time class="Instafeed__Date Heading u-h6">{{model.date}}</time>' + '</div>' + '</a>',
                        success: function success(data) {
                            var dateTimeFormatter = new Intl.DateTimeFormat(window.theme.locale,{
                                day: 'numeric',
                                month: 'long',
                                year: 'numeric'
                            });
                            data.data.forEach(function(datum) {
                                datum.date = dateTimeFormatter.format(new Date(parseInt(datum.created_time) * 1000))
                            })
                        },
                        after: function after() {
                            _this49.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](_this49.instafeed)
                        }
                    });
                    instafeed.run()
                }
            }
        }]);
        return InstagramSection
    }();
    __webpack_exports__["default"] = InstagramSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var LoginSection = function() {
        function LoginSection(container) {
            _classCallCheck(this, LoginSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.timelineLite = new TimelineLite();
            this.customerLoginForm = this.element.querySelector('#customer_login');
            this.recoverPasswordForm = this.element.querySelector('#recover_customer_password');
            this.delegateElement.on('click', '[data-action="toggle-recover-form"]', this._showRecoverPassword.bind(this))
        }
        _createClass(LoginSection, [{
            key: '_showRecoverPassword',
            value: function _showRecoverPassword() {
                var isLoginActive = this.customerLoginForm.style.display === 'block';
                if (isLoginActive) {
                    this.timelineLite.fromTo(this.customerLoginForm, 0.5, {
                        autoAlpha: 1,
                        display: 'block',
                        y: 0
                    }, {
                        autoAlpha: 0,
                        y: 20,
                        display: 'none'
                    }).fromTo(this.recoverPasswordForm, 0.5, {
                        autoAlpha: 0,
                        display: 'none',
                        y: 20
                    }, {
                        autoAlpha: 1,
                        display: 'block',
                        y: 0,
                        delay: 0.25
                    })
                } else {
                    this.timelineLite.fromTo(this.recoverPasswordForm, 0.5, {
                        autoAlpha: 1,
                        display: 'block',
                        y: 0
                    }, {
                        autoAlpha: 0,
                        y: 20,
                        display: 'none'
                    }).fromTo(this.customerLoginForm, 0.5, {
                        autoAlpha: 0,
                        display: 'none',
                        y: 20
                    }, {
                        autoAlpha: 1,
                        display: 'block',
                        y: 0,
                        delay: 0.25
                    })
                }
            }
        }]);
        return LoginSection
    }();
    __webpack_exports__["default"] = LoginSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var MapSection = function() {
        function MapSection(element) {
            _classCallCheck(this, MapSection);
            this.element = element;
            this.options = JSON.parse(element.getAttribute('data-section-settings'));
            if (this.options.apiKey && this.options.mapAddress) {
                this._loadScript().then(this._initMap.bind(this))
            }
        }
        _createClass(MapSection, [{
            key: '_loadScript',
            value: function _loadScript() {
                var _this50 = this;
                return new Promise(function(resolve, reject) {
                    var script = document.createElement('script');
                    document.body.appendChild(script);
                    script.onload = resolve;
                    script.onerror = reject;
                    script.async = !0;
                    script.src = 'https://maps.googleapis.com/maps/api/js?key=' + _this50.options.apiKey
                }
                )
            }
        }, {
            key: '_initMap',
            value: function _initMap() {
                var _this51 = this;
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({
                    address: this.options.mapAddress
                }, function(results, status) {
                    if (status !== google.maps.GeocoderStatus.OK) {
                        if (Shopify.designMode) {}
                    } else {
                        var mapOptions = {
                            zoom: _this51.options.zoom,
                            center: results[0].geometry.location,
                            draggable: !1,
                            clickableIcons: !1,
                            scrollwheel: !1,
                            disableDoubleClickZoom: !0,
                            disableDefaultUI: !0
                        };
                        var map = new google.maps.Map(_this51.element.querySelector('.FeaturedMap__GMap'),mapOptions)
                          , center = map.getCenter();
                        map.setCenter(center);
                        var icon = {
                            path: "M32.7374478,5.617 C29.1154478,1.995 24.2994478,0 19.1774478,0 C14.0544478,0 9.23944778,1.995 5.61744778,5.617 C-1.08555222,12.319 -1.91855222,24.929 3.81344778,32.569 L19.1774478,54.757 L34.5184478,32.6 C40.2734478,24.929 39.4404478,12.319 32.7374478,5.617 Z M19.3544478,26 C15.4954478,26 12.3544478,22.859 12.3544478,19 C12.3544478,15.141 15.4954478,12 19.3544478,12 C23.2134478,12 26.3544478,15.141 26.3544478,19 C26.3544478,22.859 23.2134478,26 19.3544478,26 Z",
                            fillColor: _this51.options.markerColor,
                            fillOpacity: 1,
                            anchor: new google.maps.Point(15,55),
                            strokeWeight: 0,
                            scale: 0.6
                        };
                        new google.maps.Marker({
                            map: map,
                            position: map.getCenter(),
                            icon: icon
                        });
                        var styledMapType = new google.maps.StyledMapType(JSON.parse(_this51.element.querySelector('[data-gmap-style]').innerHTML));
                        map.mapTypes.set('styled_map', styledMapType);
                        map.setMapTypeId('styled_map');
                        google.maps.event.addDomListener(window, 'resize', function() {
                            google.maps.event.trigger(map, 'resize');
                            map.setCenter(center)
                        })
                    }
                })
            }
        }]);
        return MapSection
    }();
    __webpack_exports__["default"] = MapSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var NewsletterPopupSection = function() {
        function NewsletterPopupSection(element) {
            _classCallCheck(this, NewsletterPopupSection);
            this.element = element;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(element.getAttribute('data-section-settings'));
            try {
                if (window.location.hash === '#newsletter-popup') {
                    this._openPopup()
                } else if (!this.options.showOnlyOnce || this.options.showOnlyOnce && localStorage.getItem('themePopup') === null) {
                    setTimeout(this._openPopup.bind(this), this.options.apparitionDelay * 1000)
                }
            } catch (error) {}
            this._attachListeners()
        }
        _createClass(NewsletterPopupSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off()
            }
        }, {
            key: 'onSelect',
            value: function onSelect() {
                this._openPopup()
            }
        }, {
            key: 'onDeselect',
            value: function onDeselect() {
                this._closePopup()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '[data-action="close-popup"]', this._closePopup.bind(this))
            }
        }, {
            key: '_openPopup',
            value: function _openPopup() {
                this.element.setAttribute('aria-hidden', 'false');
                localStorage.setItem('themePopup', 'true')
            }
        }, {
            key: '_closePopup',
            value: function _closePopup() {
                this.element.setAttribute('aria-hidden', 'true')
            }
        }]);
        return NewsletterPopupSection
    }();
    __webpack_exports__["default"] = NewsletterPopupSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_ProductVariants__ = __webpack_require__(11);
    var __WEBPACK_IMPORTED_MODULE_2__components_ProductImageZoom__ = __webpack_require__(14);
    var __WEBPACK_IMPORTED_MODULE_3__components_ProductReviews__ = __webpack_require__(15);
    var __WEBPACK_IMPORTED_MODULE_4__components_ScrollSpy__ = __webpack_require__(17);
    var __WEBPACK_IMPORTED_MODULE_5__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__ = __webpack_require__(13);
    var __WEBPACK_IMPORTED_MODULE_7__helper_Responsive__ = __webpack_require__(2);
    var __WEBPACK_IMPORTED_MODULE_8__helper__ = __webpack_require__(6);
    var ProductSection = function() {
        function ProductSection(container) {
            _classCallCheck(this, ProductSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            this.productVariants = new __WEBPACK_IMPORTED_MODULE_1__components_ProductVariants__["default"](container,this.options);
            this.productReviews = new __WEBPACK_IMPORTED_MODULE_3__components_ProductReviews__["default"](container);
            var productSlideshowElement = this.element.querySelector('.Product__Slideshow');
            if (productSlideshowElement) {
                this.productSlideshow = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](productSlideshowElement,{
                    onSelect: this._onImageChanged.bind(this)
                });
                this.slideshowNavDots = this.element.querySelector('.Product__SlideshowNav--dots');
                this.slideshowNavDotsItems = this.slideshowNavDots ? __WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(this.slideshowNavDots.querySelectorAll('a')) : [];
                if (this.options.showThumbnails) {
                    this.slideshowNavThumbnails = this.element.querySelector('.Product__SlideshowNav--thumbnails');
                    this.slideshowNavThumbnailsItems = this.slideshowNavThumbnails ? __WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(this.slideshowNavThumbnails.querySelectorAll('a')) : []
                }
                this.slideshowImages = __WEBPACK_IMPORTED_MODULE_5__helper_Dom__["default"].nodeListToArray(productSlideshowElement.querySelectorAll('.Carousel__Cell'))
            }
            this.productWrapperElement = this.element.querySelector('.Product__Wrapper');
            this.productInfoElement = this.element.querySelector('.Product__Info');
            this.productAsideElement = this.element.querySelector('.Product__Aside');
            this.quickNav = this.element.querySelector('.Product__QuickNav');
            if (this.options.enableImageZoom) {
                this.imageZoomInstance = new __WEBPACK_IMPORTED_MODULE_2__components_ProductImageZoom__["default"](this.element,this.productSlideshow)
            }
            Stickyfill.addOne(this.productInfoElement);
            this._setupDeviceFeatures();
            this._attachListeners()
        }
        _createClass(ProductSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off('click');
                this.productVariants.destroy();
                this.productReviews.destroy();
                if (this.productSlideshow) {
                    this.productSlideshow.destroy()
                }
                if (this.options.enableImageZoom) {
                    this.imageZoomInstance.destroy()
                }
                if (this.carouselNavScrollSpy) {
                    this.carouselNavScrollSpy.destroy()
                }
                if (this.quickNav) {
                    window.removeEventListener('scroll', this._checkQuickNavListener)
                }
                if (this.productInfoScroller) {
                    this.productInfoScroller.destroy()
                }
                if (this.productThumbnailsScroller) {
                    this.productThumbnailsScroller.destroy()
                }
                if (window.ResizeObserver && window.theme.enableExperimentalResizeObserver && this.productInfoResizeObserver) {
                    this.productInfoResizeObserver.disconnect()
                }
                Stickyfill.removeOne(this.productInfoElement);
                document.removeEventListener('breakpoint:changed', this._onBreakpointChangedListener)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._onBreakpointChangedListener = this._setupDeviceFeatures.bind(this);
                this._checkQuickNavListener = this._checkQuickNav.bind(this);
                this.delegateElement.on('click', '[data-action="toggle-social-share"]', this._toggleSocialShare.bind(this));
                this.delegateElement.on('variant:changed', this._updateSlideshowImage.bind(this));
                this.delegateElement.on('scrollspy:target:changed', this._onScrollTargetChanged.bind(this));
                document.addEventListener('breakpoint:changed', this._onBreakpointChangedListener);
                if (this.quickNav) {
                    window.addEventListener('scroll', this._checkQuickNavListener)
                }
            }
        }, {
            key: '_updateSlideshowImage',
            value: function _updateSlideshowImage(event) {
                var variant = event.detail.variant
                  , previousVariant = event.detail.previousVariant;
                if (!variant || !variant.featured_image || previousVariant && previousVariant.featured_image && previousVariant.featured_image.id === variant.featured_image.id) {
                    return
                }
                if (__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('pocket')) {
                    for (var i = 0; i !== this.productSlideshow.flickityInstance.cells.length; ++i) {
                        var cellElement = this.productSlideshow.flickityInstance.cells[i].element
                          , imageId = parseInt(cellElement.getAttribute('data-image-id'));
                        if (imageId === variant.featured_image.id) {
                            this.productSlideshow.selectCell(parseInt(cellElement.getAttribute('data-image-position')))
                        }
                    }
                } else {
                    document.querySelector('[href="#Image' + variant.featured_image.id + '"]').click()
                }
            }
        }, {
            key: '_onScrollTargetChanged',
            value: function _onScrollTargetChanged(event) {
                this.slideshowNavDotsItems.forEach(function(item) {
                    return item.classList.remove('is-selected')
                });
                this.slideshowNavDotsItems[parseInt(event.detail.newTarget.getAttribute('data-image-position'))].classList.add('is-selected');
                if (this.options.showThumbnails) {
                    this.slideshowNavThumbnailsItems.forEach(function(item) {
                        return item.classList.remove('is-selected')
                    });
                    this.slideshowNavThumbnailsItems[parseInt(event.detail.newTarget.getAttribute('data-image-position'))].classList.add('is-selected')
                }
            }
        }, {
            key: '_checkQuickNav',
            value: function _checkQuickNav() {
                var _this52 = this;
                var showAsideQuickNav = !1;
                fastdom.measure(function() {
                    showAsideQuickNav = window.scrollY >= _this52.productAsideElement.offsetTop - _this52.productAsideElement.clientHeight
                });
                fastdom.mutate(function() {
                    if (showAsideQuickNav) {
                        _this52.quickNav.classList.add('is-flipped')
                    } else {
                        _this52.quickNav.classList.remove('is-flipped')
                    }
                })
            }
        }, {
            key: '_toggleSocialShare',
            value: function _toggleSocialShare(event, target) {
                target.classList.toggle('is-active');
                target.classList.toggle('RoundButton--secondaryState');
                target.setAttribute('aria-expanded', target.getAttribute('aria-expanded') === 'true' ? 'false' : 'true');
                target.nextElementSibling.setAttribute('aria-hidden', target.nextElementSibling.getAttribute('aria-hidden') === 'true' ? 'false' : 'true')
            }
        }, {
            key: '_onImageChanged',
            value: function _onImageChanged(event, cell) {
                if (!__WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('pocket')) {
                    return
                }
                var productGalleryActionListElement = this.element.querySelector('.Product__Gallery .Product__ActionList');
                if (productGalleryActionListElement) {
                    if (cell.classList.contains('Product__SlideItem--video')) {
                        productGalleryActionListElement.classList.add('is-hidden')
                    } else {
                        productGalleryActionListElement.classList.remove('is-hidden')
                    }
                }
            }
        }, {
            key: '_setupDeviceFeatures',
            value: function _setupDeviceFeatures(event) {
                var _this53 = this;
                var currentBreakpoint = event ? event.detail.currentBreakpoint : __WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.getCurrentBreakpoint()
                  , previousBreakpoint = event ? event.detail.previousBreakpoint : null;
                if (currentBreakpoint === previousBreakpoint) {
                    return
                }
                if (currentBreakpoint === 'phone' || currentBreakpoint === 'tablet') {
                    if (this.carouselNavScrollSpy) {
                        this.carouselNavScrollSpy.destroy()
                    }
                    if (this.productInfoScroller) {
                        this.productInfoScroller.destroy()
                    }
                    if (this.productThumbnailsScroller) {
                        this.productThumbnailsScroller.destroy()
                    }
                    if (this.productAsideElement) {
                        this.productAsideElement.style.minHeight = null
                    } else {
                        this.productWrapperElement.style.minHeight = null
                    }
                    this.productInfoElement.parentNode.style.maxHeight = null
                } else {
                    if (this.slideshowImages && this.slideshowImages.length > 1) {
                        var offsetTop = this.slideshowNavDots.firstElementChild.offsetTop;
                        if (this.options.showThumbnails && __WEBPACK_IMPORTED_MODULE_8__helper__.ResponsiveHelper.matchesBreakpoint('desk')) {
                            offsetTop = 250
                        }
                        this.carouselNavScrollSpy = new __WEBPACK_IMPORTED_MODULE_4__components_ScrollSpy__["default"](this.element,this.slideshowImages,{
                            rootMargin: '-' + offsetTop + 'px 0px 0px 0px'
                        })
                    }
                    var productInfoStyles = window.getComputedStyle(this.productInfoElement)
                      , productInfoPadding = parseInt(productInfoStyles.paddingTop) + parseInt(productInfoStyles.paddingBottom);
                    var calculateMinHeight = function calculateMinHeight() {
                        if (_this53.productAsideElement) {
                            _this53.productAsideElement.style.minHeight = _this53.productInfoElement.scrollHeight - productInfoPadding + 'px';
                            _this53.productInfoElement.closest('.Product__InfoWrapper').style.maxHeight = _this53.productAsideElement.offsetTop + _this53.productInfoElement.scrollHeight - productInfoPadding + 'px'
                        } else {
                            _this53.productWrapperElement.style.minHeight = _this53.productInfoElement.scrollHeight - parseInt(productInfoStyles.paddingTop) + 'px'
                        }
                    };
                    calculateMinHeight();
                    if (window.ResizeObserver && window.theme.enableExperimentalResizeObserver) {
                        this.productInfoResizeObserver = new ResizeObserver(function() {
                            calculateMinHeight()
                        }
                        );
                        this.productInfoResizeObserver.observe(this.productInfoElement)
                    }
                    this.productInfoScroller = new __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__["default"](this.productInfoElement);
                    if (this.options.showThumbnails && this.slideshowNavThumbnails) {
                        this.productThumbnailsScroller = new __WEBPACK_IMPORTED_MODULE_6__components_OverflowScroller__["default"](this.slideshowNavThumbnails)
                    }
                }
            }
        }]);
        return ProductSection
    }();
    __webpack_exports__["default"] = ProductSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__ = __webpack_require__(4);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Currency__ = __webpack_require__(5);
    var RecentlyViewedProductsSection = function() {
        function RecentlyViewedProductsSection(container) {
            _classCallCheck(this, RecentlyViewedProductsSection);
            this.element = container;
            this.options = JSON.parse(this.element.getAttribute('data-section-settings'));
            if (this.options.productId) {
                this._saveProduct(this.options.productId)
            }
            new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element);
            this._fetchProducts()
        }
        _createClass(RecentlyViewedProductsSection, [{
            key: 'onUnload',
            value: function onUnload() {
                if (this.carousel) {
                    this.carousel.destroy()
                }
            }
        }, {
            key: '_saveProduct',
            value: function _saveProduct(productId) {
                var items = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                if (!items.includes(productId)) {
                    items.unshift(productId)
                }
                try {
                    localStorage.setItem('recentlyViewedProducts', JSON.stringify(items.slice(0, 8)))
                } catch (error) {}
            }
        }, {
            key: '_fetchProducts',
            value: function _fetchProducts() {
                var _this54 = this;
                var queryString = this._getSearchQueryString();
                if (queryString === '') {
                    return
                }
                fetch('/search?view=recently-viewed-products&type=product&q=' + queryString, {
                    credentials: 'same-origin',
                    method: 'GET'
                }).then(function(response) {
                    response.text().then(function(content) {
                        var tempElement = document.createElement('div');
                        tempElement.innerHTML = content;
                        _this54.element.innerHTML = tempElement.querySelector('.Section').innerHTML;
                        _this54.element.parentNode.style.display = 'block';
                        if (window.theme.currencyConversionEnabled) {
                            __WEBPACK_IMPORTED_MODULE_2__helper_Currency__["default"].convertAll(_this54.element)
                        }
                        _this54.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](_this54.element.querySelector('[data-flickity-config]'))
                    })
                })
            }
        }, {
            key: '_getSearchQueryString',
            value: function _getSearchQueryString() {
                var items = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                if (items.includes(this.options.productId)) {
                    items.splice(items.indexOf(this.options.productId), 1)
                }
                return items.map(function(item) {
                    return 'id:' + item
                }).join(' OR ')
            }
        }]);
        return RecentlyViewedProductsSection
    }();
    __webpack_exports__["default"] = RecentlyViewedProductsSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__ = __webpack_require__(4);
    var RelatedProductsSection = function() {
        function RelatedProductsSection(container) {
            _classCallCheck(this, RelatedProductsSection);
            this.element = container;
            this.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'));
            new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element)
        }
        _createClass(RelatedProductsSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousel.destroy()
            }
        }]);
        return RelatedProductsSection
    }();
    __webpack_exports__["default"] = RelatedProductsSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var SearchSection = function() {
        function SearchSection(container) {
            _classCallCheck(this, SearchSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this._setupAnimation()
        }
        _createClass(SearchSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.intersectionObserver.disconnect();
                this.timeline.kill()
            }
        }, {
            key: '_setupAnimation',
            value: function _setupAnimation() {
                var _this55 = this;
                if (this.intersectionObserver) {
                    this.intersectionObserver.disconnect()
                }
                this.timeline = new TimelineLite({
                    delay: 0.5
                });
                if (window.theme.showElementStaggering) {
                    this.intersectionObserver = new IntersectionObserver(this._reveal.bind(this));
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ProductList .ProductItem, .ArticleList .ArticleItem')).forEach(function(item) {
                        _this55.intersectionObserver.observe(item)
                    })
                }
            }
        }, {
            key: '_reveal',
            value: function _reveal(results) {
                var _this56 = this;
                var toReveal = [];
                results.forEach(function(result) {
                    if (result.isIntersecting || result.intersectionRatio > 0) {
                        toReveal.push(result.target);
                        _this56.intersectionObserver.unobserve(result.target)
                    }
                });
                if (toReveal.length === 0) {
                    return
                }
                this.timeline.staggerFromTo(toReveal, 0.6, {
                    autoAlpha: 0,
                    y: 25
                }, {
                    autoAlpha: 1,
                    y: 0
                }, 0.2)
            }
        }]);
        return SearchSection
    }();
    __webpack_exports__["default"] = SearchSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var SectionContainer = function() {
        function SectionContainer() {
            _classCallCheck(this, SectionContainer);
            this.constructors = [];
            this.instances = [];
            this._attachListeners()
        }
        _createClass(SectionContainer, [{
            key: '_attachListeners',
            value: function _attachListeners() {
                document.addEventListener('shopify:section:load', this._onSectionLoad.bind(this));
                document.addEventListener('shopify:section:unload', this._onSectionUnload.bind(this));
                document.addEventListener('shopify:section:select', this._onSelect.bind(this));
                document.addEventListener('shopify:section:deselect', this._onDeselect.bind(this));
                document.addEventListener('shopify:section:reorder', this._onReorder.bind(this));
                document.addEventListener('shopify:block:select', this._onBlockSelect.bind(this));
                document.addEventListener('shopify:block:deselect', this._onBlockDeselect.bind(this))
            }
        }, {
            key: 'register',
            value: function register(type, constructor) {
                var _this57 = this;
                this.constructors[type] = constructor;
                __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(document.querySelectorAll('[data-section-type=' + type + ']')).forEach(function(container) {
                    _this57._createInstance(container, constructor)
                })
            }
        }, {
            key: '_findInstance',
            value: function _findInstance(array, key, value) {
                for (var i = 0; i < array.length; i++) {
                    if (array[i][key] === value) {
                        return array[i]
                    }
                }
            }
        }, {
            key: '_removeInstance',
            value: function _removeInstance(array, key, value) {
                var i = array.length;
                while (i--) {
                    if (array[i][key] === value) {
                        array.splice(i, 1);
                        break
                    }
                }
                return array
            }
        }, {
            key: '_onSectionLoad',
            value: function _onSectionLoad(event) {
                var container = event.target.querySelector('[data-section-id]');
                if (container) {
                    this._createInstance(container)
                }
            }
        }, {
            key: '_onSectionUnload',
            value: function _onSectionUnload(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (!instance) {
                    return
                }
                if (typeof instance.onUnload === 'function') {
                    instance.onUnload(event)
                }
                this.instances = this._removeInstance(this.instances, 'id', event.detail.sectionId)
            }
        }, {
            key: '_onSelect',
            value: function _onSelect(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (instance && typeof instance.onSelect === 'function') {
                    instance.onSelect(event)
                }
            }
        }, {
            key: '_onDeselect',
            value: function _onDeselect(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (instance && typeof instance.onDeselect === 'function') {
                    instance.onDeselect(event)
                }
            }
        }, {
            key: '_onReorder',
            value: function _onReorder(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (instance && typeof instance.onReorder === 'function') {
                    instance.onReorder(event)
                }
            }
        }, {
            key: '_onBlockSelect',
            value: function _onBlockSelect(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (instance && typeof instance.onBlockSelect === 'function') {
                    instance.onBlockSelect(event)
                }
            }
        }, {
            key: '_onBlockDeselect',
            value: function _onBlockDeselect(event) {
                var instance = this._findInstance(this.instances, 'id', event.detail.sectionId);
                if (instance && typeof instance.onBlockDeselect === 'function') {
                    instance.onBlockDeselect(event)
                }
            }
        }, {
            key: '_createInstance',
            value: function _createInstance(container, constructor) {
                var id = container.getAttribute('data-section-id')
                  , type = container.getAttribute('data-section-type');
                constructor = constructor || this.constructors[type];
                if (typeof constructor === 'undefined') {
                    return
                }
                var instance = Object.assign(new constructor(container), {
                    id: id,
                    type: type,
                    container: container
                });
                this.instances.push(instance)
            }
        }]);
        return SectionContainer
    }();
    __webpack_exports__["default"] = SectionContainer
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__ = __webpack_require__(4);
    var ShopNowSection = function() {
        function ShopNowSection(container) {
            _classCallCheck(this, ShopNowSection);
            this.element = container;
            this.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'));
            new __WEBPACK_IMPORTED_MODULE_1__components_ProductItemColorSwatch__["default"](this.element)
        }
        _createClass(ShopNowSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousel.destroy()
            }
        }]);
        return ShopNowSection
    }();
    __webpack_exports__["default"] = ShopNowSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__components_Popover__ = __webpack_require__(9);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_3__helper_Responsive__ = __webpack_require__(2);
    var ShopTheLookSection = function() {
        function ShopTheLookSection(container) {
            _classCallCheck(this, ShopTheLookSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.usePocketMode = __WEBPACK_IMPORTED_MODULE_3__helper_Responsive__["default"].matchesBreakpoint('pocket');
            this.pocketActivatorButton = this.element.querySelector('[data-action="open-look"]');
            this._createOuterCarousel();
            this._createPocketPopovers();
            this._attachListeners()
        }
        _createClass(ShopTheLookSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.outerCarousel.destroy();
                this.innerCarousels.forEach(function(item) {
                    item.forEach(function(innerItem) {
                        return innerItem.destroy()
                    })
                });
                this.popovers.forEach(function(item) {
                    return item.destroy()
                });
                this.delegateElement.off()
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this.outerCarousel.selectCell(event.target.getAttribute('data-slide-index'), !0, !event.detail.load)
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '.ShopTheLook__Dot', this._onDotClicked.bind(this))
            }
        }, {
            key: '_createPocketPopovers',
            value: function _createPocketPopovers() {
                var _this58 = this;
                this.popovers = [];
                __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Popover')).forEach(function(popover) {
                    _this58.popovers.push(new __WEBPACK_IMPORTED_MODULE_1__components_Popover__["default"](popover,{
                        activator: _this58.pocketActivatorButton,
                        showOverlay: !1,
                        onOpen: _this58._openPocketZoom.bind(_this58),
                        onClose: _this58._closePocketZoom.bind(_this58)
                    }))
                })
            }
        }, {
            key: '_createOuterCarousel',
            value: function _createOuterCarousel() {
                var _this59 = this;
                this.outerCarousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('.ShopTheLook'),{
                    onSelect: this._onLookChanged.bind(this)
                });
                this.innerCarousels = new Array(this.outerCarousel.flickityInstance.cells.length);
                for (var i = 0; i !== this.innerCarousels.length; ++i) {
                    this.innerCarousels[i] = []
                }
                __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.ShopTheLook__ProductList')).forEach(function(item) {
                    var lookIndex = parseInt(item.getAttribute('data-look-index'));
                    _this59.innerCarousels[lookIndex].push(new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](item,{
                        onSelect: _this59._onProductChanged.bind(_this59)
                    }));
                    item.insertBefore(item.querySelector('.flickity-viewport'), item.querySelector('.ShopTheLook__ViewButton'))
                });
                this.outerCarousel.resize()
            }
        }, {
            key: '_onLookChanged',
            value: function _onLookChanged(selectedIndex, selectedCell) {
                this.pocketActivatorButton.setAttribute('aria-controls', selectedCell.getAttribute('id') + '-popover')
            }
        }, {
            key: '_onProductChanged',
            value: function _onProductChanged(selectedIndex, selectedCell) {
                var lookItem = this.outerCarousel.getSelectedCell()
                  , activeDot = null;
                __WEBPACK_IMPORTED_MODULE_2__helper_Dom__["default"].nodeListToArray(lookItem.querySelectorAll('.ShopTheLook__Dot')).forEach(function(dot, index) {
                    dot.classList.remove('is-active');
                    if (index === selectedIndex) {
                        dot.classList.add('is-active');
                        activeDot = dot
                    }
                });
                lookItem.querySelector('.ShopTheLook__ViewButton').setAttribute('href', selectedCell.getAttribute('data-product-url'));
                lookItem.dispatchEvent(new CustomEvent('product:changed',{
                    detail: {
                        dot: activeDot
                    }
                }))
            }
        }, {
            key: '_onDotClicked',
            value: function _onDotClicked(event, target) {
                var shouldAnimateCarousel = !1
                  , hasOnePopoverOpen = !1
                  , lookIndex = this.outerCarousel.getSelectedIndex();
                this.popovers.forEach(function(item) {
                    if (item.isOpen) {
                        hasOnePopoverOpen = !0;
                        shouldAnimateCarousel = !0
                    }
                });
                this.innerCarousels[lookIndex].forEach(function(innerCarousel) {
                    innerCarousel.selectCell(parseInt(target.getAttribute('data-product-index')) - 1, !1, shouldAnimateCarousel)
                });
                if (this.usePocketMode && !hasOnePopoverOpen) {
                    this.popovers[lookIndex].open()
                }
            }
        }, {
            key: '_openPocketZoom',
            value: function _openPocketZoom(popover) {
                var _this60 = this;
                this._calculateImageTransform(popover);
                fastdom.mutate(function() {
                    document.getElementById('shopify-section-header').style.cssText = 'transform: translateY(-100%); transition: transform 0.3s ease-in-out;';
                    _this60.outerCarousel.flickityInstance.unbindDrag();
                    _this60.outerCarousel.flickityInstance.element.classList.add('is-zoomed');
                    _this60.outerCarousel.getSelectedCell().classList.add('is-expanded')
                })
            }
        }, {
            key: '_calculateImageTransform',
            value: function _calculateImageTransform(openPopover) {
                var _this61 = this;
                var selectedCell = this.outerCarousel.getSelectedCell();
                fastdom.measure(function() {
                    var scale = window.innerWidth / (selectedCell.offsetWidth - parseInt(window.getComputedStyle(selectedCell).paddingLeft) * 2)
                      , heightAfterScale = Math.round(selectedCell.offsetHeight * scale)
                      , hiddenImageHeight = Math.round(Math.max(heightAfterScale - (window.innerHeight - openPopover.element.offsetHeight), 0))
                      , visibleImageHeight = heightAfterScale - hiddenImageHeight
                      , minTranslateY = Math.round(-(selectedCell.getBoundingClientRect().top - (heightAfterScale - selectedCell.offsetHeight) / 2))
                      , maxTranslateY = Math.round(minTranslateY - hiddenImageHeight);
                    _this61._calculateTransformForDotListener = function(event) {
                        var dotTopPosition = Math.round((event.detail.dot.offsetTop + event.detail.dot.offsetHeight / 2) * scale)
                          , offsetToMove = Math.round(dotTopPosition - visibleImageHeight / 2)
                          , translateY = Math.min(Math.max(minTranslateY - offsetToMove, maxTranslateY), minTranslateY);
                        fastdom.mutate(function() {
                            _this61.outerCarousel.flickityInstance.viewport.style.transform = 'translate3d(0, ' + Math.round(translateY) + 'px, 0) scale(' + scale + ')'
                        })
                    }
                    ;
                    selectedCell.addEventListener('product:changed', _this61._calculateTransformForDotListener);
                    selectedCell.dispatchEvent(new CustomEvent('product:changed',{
                        detail: {
                            dot: selectedCell.querySelector('.ShopTheLook__Dot.is-active')
                        }
                    }))
                })
            }
        }, {
            key: '_closePocketZoom',
            value: function _closePocketZoom() {
                var _this62 = this;
                var selectedCell = this.outerCarousel.getSelectedCell();
                selectedCell.removeEventListener('product:changed', this._calculateTransformForDotListener);
                fastdom.mutate(function() {
                    document.getElementById('shopify-section-header').style.cssText = 'transform: translateY(0); transition: transform 0.3s ease-in-out 0.3s;';
                    _this62.outerCarousel.flickityInstance.bindDrag();
                    _this62.outerCarousel.flickityInstance.element.classList.remove('is-zoomed');
                    _this62.outerCarousel.flickityInstance.viewport.style.transform = null;
                    selectedCell.classList.remove('is-expanded')
                })
            }
        }]);
        return ShopTheLookSection
    }();
    __webpack_exports__["default"] = ShopTheLookSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Drawer__ = __webpack_require__(8);
    var SidebarMenuSection = function() {
        function SidebarMenuSection(container) {
            _classCallCheck(this, SidebarMenuSection);
            this.element = container;
            this.sidebarDrawer = new __WEBPACK_IMPORTED_MODULE_0__components_Drawer__["default"](container)
        }
        _createClass(SidebarMenuSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.sidebarDrawer.destroy()
            }
        }, {
            key: 'onSelect',
            value: function onSelect() {
                this.sidebarDrawer.open()
            }
        }, {
            key: 'onDeselect',
            value: function onDeselect() {
                this.sidebarDrawer.close()
            }
        }]);
        return SidebarMenuSection
    }();
    __webpack_exports__["default"] = SidebarMenuSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__ = __webpack_require__(2);
    var SlideshowSection = function() {
        function SlideshowSection(container) {
            _classCallCheck(this, SlideshowSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.slideshow = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('[data-flickity-config]'),{
                onSelect: this._onSlideChanged.bind(this)
            });
            this.selectedSlide = null;
            this.shouldAnimate = !0;
            this.timeline = new TimelineLite({
                delay: window.theme.showPageTransition ? 0.5 : 0
            });
            if (this.slideshow.flickityInstance.cells.length > 0) {
                this._transitionToSlide(this.slideshow.flickityInstance.selectedCell.element, !0)
            }
            this._attachListeners()
        }
        _createClass(SlideshowSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.slideshow.destroy();
                this.timeline.kill();
                this.delegateElement.off();
                document.removeEventListener('breakpoint:changed', this._onBreakpointChangedListener)
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                if (this.slideshow.flickityInstance.options.autoPlay) {
                    this.slideshow.flickityInstance.stopPlayer()
                }
                this.shouldAnimate = !event.detail.load;
                this.slideshow.selectCell(event.target.getAttribute('data-slide-index'), !1, !event.detail.load)
            }
        }, {
            key: 'onBlockDeselect',
            value: function onBlockDeselect() {
                this.shouldAnimate = !0;
                if (this.slideshow.flickityInstance.options.autoPlay) {
                    this.slideshow.flickityInstance.playPlayer()
                }
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this._onBreakpointChangedListener = this._onBreakpointChanged.bind(this);
                this.delegateElement.on('mouseenter', '.Button', this._pauseSlideshow.bind(this), !0);
                this.delegateElement.on('mouseleave', '.Button', this._resumeSlideshow.bind(this), !0);
                document.addEventListener('breakpoint:changed', this._onBreakpointChangedListener)
            }
        }, {
            key: '_pauseSlideshow',
            value: function _pauseSlideshow() {
                if (this.slideshow.flickityInstance.options.autoPlay) {
                    this.slideshow.flickityInstance.pausePlayer()
                }
            }
        }, {
            key: '_resumeSlideshow',
            value: function _resumeSlideshow() {
                if (this.slideshow.flickityInstance.options.autoPlay) {
                    this.slideshow.flickityInstance.unpausePlayer()
                }
            }
        }, {
            key: '_onSlideChanged',
            value: function _onSlideChanged(index, element) {
                this._transitionToSlide(element)
            }
        }, {
            key: '_transitionToSlide',
            value: function _transitionToSlide(slide) {
                var _this63 = this;
                this.timeline.clear();
                if (this.selectedSlide) {
                    this._slideLeave(this.selectedSlide);
                    this.timeline.addLabel('enter', this.shouldAnimate ? '-=0.4' : 0)
                }
                this._lazyLoadNextImage();
                this.timeline.fromTo(slide, this.selectedSlide && this.shouldAnimate ? 0.3 : 0, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1,
                    ease: Cubic.easeInOut
                }, 'enter');
                if (this.slideshow.flickityInstance.options.autoPlay && this.slideshow.flickityInstance.player.state === 'playing') {
                    this.slideshow.flickityInstance.pausePlayer()
                }
                __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(slide.querySelectorAll('.Slideshow__Image')).forEach(function(image) {
                    if (image.classList.contains('Image--lazyLoading') || image.classList.contains('Image--lazyLoad')) {
                        image.addEventListener('lazyloaded', _this63._slideEnter.bind(_this63, slide))
                    } else {
                        _this63._slideEnter(slide)
                    }
                });
                this.selectedSlide = slide
            }
        }, {
            key: '_slideLeave',
            value: function _slideLeave(slide) {
                var content = slide.querySelector('.SectionHeader')
                  , buttonWrapper = slide.querySelector('.SectionHeader__ButtonWrapper');
                this.timeline.fromTo(slide, this.shouldAnimate ? 0.3 : 0, {
                    autoAlpha: 1
                }, {
                    autoAlpha: 0,
                    ease: Cubic.easeInOut,
                    delay: this.shouldAnimate ? 0.35 : 0
                });
                if (content) {
                    this.timeline.fromTo(content, this.shouldAnimate ? 0.4 : 0, {
                        autoAlpha: 1,
                        y: 0
                    }, {
                        autoAlpha: 0,
                        y: 20,
                        ease: Cubic.easeIn
                    }, 0)
                }
                if (buttonWrapper) {
                    this.timeline.fromTo(buttonWrapper, this.shouldAnimate ? 0.4 : 0, {
                        autoAlpha: 1,
                        y: 0
                    }, {
                        autoAlpha: 0,
                        y: 10,
                        ease: Cubic.easeIn
                    }, 0)
                }
            }
        }, {
            key: '_slideEnter',
            value: function _slideEnter(slide) {
                var images = slide.querySelectorAll('.Slideshow__Image')
                  , content = slide.querySelector('.SectionHeader')
                  , buttonWrapper = slide.querySelector('.SectionHeader__ButtonWrapper');
                if (this.slideshow.flickityInstance.options.autoPlay && this.slideshow.flickityInstance.player.state === 'paused') {
                    this.slideshow.flickityInstance.unpausePlayer()
                }
                if (window.CSS && window.CSS.supports('(object-fit: cover) or (-o-object-fit: cover)')) {
                    if (window.theme.showImageZooming) {
                        this.timeline.fromTo(images, this.shouldAnimate ? 1.2 : 0, {
                            opacity: 0,
                            scale: 1.2
                        }, {
                            opacity: 1,
                            scale: 1,
                            ease: Quad.easeOut
                        }, 'enter')
                    } else {
                        this.timeline.fromTo(images, this.shouldAnimate ? 1.2 : 0, {
                            opacity: 0
                        }, {
                            opacity: 1,
                            ease: Quad.easeOut
                        }, 'enter')
                    }
                }
                if (content) {
                    this.timeline.fromTo(content, this.shouldAnimate ? 0.8 : 0, {
                        autoAlpha: 0,
                        y: 30
                    }, {
                        autoAlpha: 1,
                        y: 0,
                        delay: this.shouldAnimate ? 0.8 : 0,
                        ease: Cubic.easeOut
                    }, 'enter')
                }
                if (buttonWrapper) {
                    this.timeline.fromTo(buttonWrapper, this.shouldAnimate ? 0.8 : 0, {
                        autoAlpha: 0,
                        y: 20
                    }, {
                        autoAlpha: 1,
                        y: 0,
                        delay: this.shouldAnimate ? 0.8 : 0,
                        ease: Cubic.easeOut
                    }, 'enter')
                }
            }
        }, {
            key: '_lazyLoadNextImage',
            value: function _lazyLoadNextImage() {
                var currentIndex = this.slideshow.flickityInstance.selectedIndex
                  , breakpoint = __WEBPACK_IMPORTED_MODULE_2__helper_Responsive__["default"].getCurrentBreakpoint();
                if (this.slideshow.flickityInstance.cells.length - 1 > currentIndex) {
                    var nextCellElement = this.slideshow.flickityInstance.cells[currentIndex + 1].element
                      , imageContainers = __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(nextCellElement.querySelectorAll('.Slideshow__ImageContainer'))
                      , imageToReveal = null;
                    if (breakpoint === 'phone') {
                        imageToReveal = imageContainers[0]
                    } else {
                        imageToReveal = imageContainers[1]
                    }
                    if (window.lazySizes && imageToReveal && imageToReveal.classList.contains('Image--lazyLoad')) {
                        lazySizes.loader.unveil(imageToReveal.firstElementChild)
                    }
                }
            }
        }, {
            key: '_onBreakpointChanged',
            value: function _onBreakpointChanged(event) {
                if (event.detail.previousBreakpoint === 'phone' && event.detail.currentBreakpoint !== 'phone' || event.detail.previousBreakpoint !== 'phone' && event.detail.currentBreakpoint === 'phone') {
                    this.selectedSlide = null;
                    this._transitionToSlide(this.slideshow.flickityInstance.selectedElement)
                }
            }
        }]);
        return SlideshowSection
    }();
    __webpack_exports__["default"] = SlideshowSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components_Carousel__ = __webpack_require__(1);
    var __WEBPACK_IMPORTED_MODULE_1__helper_Dom__ = __webpack_require__(0);
    var TestimonialsSection = function() {
        function TestimonialsSection(container) {
            _classCallCheck(this, TestimonialsSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.navItems = __WEBPACK_IMPORTED_MODULE_1__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.TestimonialNav__Item'));
            this.carousel = new __WEBPACK_IMPORTED_MODULE_0__components_Carousel__["default"](this.element.querySelector('.TestimonialList'),{
                onSelect: this._testimonialChanged.bind(this)
            });
            this._attachListeners()
        }
        _createClass(TestimonialsSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.carousel.destroy();
                this.delegateElement.off('click')
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this.carousel.selectCell(event.target.getAttribute('data-slide-index'), !0)
            }
        }, {
            key: 'onBlockDeselect',
            value: function onBlockDeselect() {
                this.carousel.unpausePlayer()
            }
        }, {
            key: '_testimonialClicked',
            value: function _testimonialClicked(event, target) {
                this.carousel.pausePlayer();
                this.carousel.selectCell(parseInt(target.getAttribute('data-index')));
                this.carousel.unpausePlayer()
            }
        }, {
            key: '_testimonialChanged',
            value: function _testimonialChanged(newIndex) {
                this.navItems.forEach(function(item, index) {
                    item.classList.remove('is-selected');
                    if (newIndex === index) {
                        item.classList.add('is-selected')
                    }
                })
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '.TestimonialNav__Item', this._testimonialClicked.bind(this))
            }
        }]);
        return TestimonialsSection
    }();
    __webpack_exports__["default"] = TestimonialsSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__helper_Dom__ = __webpack_require__(0);
    var TimelineSection = function() {
        function TimelineSection(container) {
            _classCallCheck(this, TimelineSection);
            this.element = container;
            this.delegateElement = new domDelegate.Delegate(this.element);
            this.items = __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Timeline__Item'));
            this.navItems = __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].nodeListToArray(this.element.querySelectorAll('.Timeline__NavItem'));
            this._attachListeners()
        }
        _createClass(TimelineSection, [{
            key: 'onUnload',
            value: function onUnload() {
                this.delegateElement.off('click')
            }
        }, {
            key: 'onBlockSelect',
            value: function onBlockSelect(event) {
                this.navItems[parseInt(event.target.getAttribute('data-index'))].click()
            }
        }, {
            key: '_attachListeners',
            value: function _attachListeners() {
                this.delegateElement.on('click', '.Timeline__NavItem', this._clickOnNavItem.bind(this))
            }
        }, {
            key: '_clickOnNavItem',
            value: function _clickOnNavItem(event, target) {
                var newItem = this.items[parseInt(target.getAttribute('data-index'))];
                if (newItem.classList.contains('is-selected')) {
                    return
                }
                var isContentLarger = !1
                  , navWrapper = target.parentNode
                  , scrollableOffset = 0;
                fastdom.measure(function() {
                    var scrollableWidth = navWrapper.scrollWidth
                      , visibleWidth = navWrapper.offsetWidth;
                    isContentLarger = visibleWidth < scrollableWidth;
                    if (isContentLarger) {
                        var beginBound = target.offsetLeft
                          , endBound = beginBound + target.offsetWidth
                          , closerToLeft = beginBound <= visibleWidth - endBound;
                        var itemToUse = null;
                        if (closerToLeft) {
                            itemToUse = target.previousElementSibling || target
                        } else {
                            itemToUse = target.nextElementSibling || target
                        }
                        var itemBeginBound = itemToUse.offsetLeft - navWrapper.scrollLeft
                          , itemEndBound = itemBeginBound + itemToUse.offsetWidth;
                        if (itemEndBound > visibleWidth) {
                            scrollableOffset = itemEndBound - visibleWidth
                        } else if (itemBeginBound < 0) {
                            scrollableOffset = itemBeginBound
                        }
                    }
                });
                fastdom.mutate(function() {
                    if (isContentLarger) {
                        navWrapper.scrollBy({
                            behavior: 'smooth',
                            left: scrollableOffset
                        })
                    }
                    target.classList.add('is-selected');
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(target, '.is-selected').forEach(function(item) {
                        item.classList.remove('is-selected')
                    });
                    newItem.classList.add('is-selected');
                    __WEBPACK_IMPORTED_MODULE_0__helper_Dom__["default"].getSiblings(newItem, '.is-selected').forEach(function(item) {
                        item.classList.remove('is-selected')
                    })
                })
            }
        }]);
        return TimelineSection
    }();
    __webpack_exports__["default"] = TimelineSection
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__AddressesSection__ = __webpack_require__(25);
    __webpack_require__.d(__webpack_exports__, "AddressesSection", function() {
        return __WEBPACK_IMPORTED_MODULE_0__AddressesSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_1__ArticleListSection__ = __webpack_require__(26);
    __webpack_require__.d(__webpack_exports__, "ArticleListSection", function() {
        return __WEBPACK_IMPORTED_MODULE_1__ArticleListSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_2__ArticleSection__ = __webpack_require__(27);
    __webpack_require__.d(__webpack_exports__, "ArticleSection", function() {
        return __WEBPACK_IMPORTED_MODULE_2__ArticleSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_3__CartSection__ = __webpack_require__(29);
    __webpack_require__.d(__webpack_exports__, "CartSection", function() {
        return __WEBPACK_IMPORTED_MODULE_3__CartSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_4__CollectionListSection__ = __webpack_require__(30);
    __webpack_require__.d(__webpack_exports__, "CollectionListSection", function() {
        return __WEBPACK_IMPORTED_MODULE_4__CollectionListSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_5__CollectionSection__ = __webpack_require__(31);
    __webpack_require__.d(__webpack_exports__, "CollectionSection", function() {
        return __WEBPACK_IMPORTED_MODULE_5__CollectionSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_6__FaqSection__ = __webpack_require__(32);
    __webpack_require__.d(__webpack_exports__, "FaqSection", function() {
        return __WEBPACK_IMPORTED_MODULE_6__FaqSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_7__FeaturedCollectionsSection__ = __webpack_require__(33);
    __webpack_require__.d(__webpack_exports__, "FeaturedCollectionsSection", function() {
        return __WEBPACK_IMPORTED_MODULE_7__FeaturedCollectionsSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_8__FeaturedProductSection__ = __webpack_require__(34);
    __webpack_require__.d(__webpack_exports__, "FeaturedProductSection", function() {
        return __WEBPACK_IMPORTED_MODULE_8__FeaturedProductSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_9__BackgroundVideoSection__ = __webpack_require__(28);
    __webpack_require__.d(__webpack_exports__, "BackgroundVideoSection", function() {
        return __WEBPACK_IMPORTED_MODULE_9__BackgroundVideoSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_10__GiftCardSection__ = __webpack_require__(35);
    __webpack_require__.d(__webpack_exports__, "GiftCardSection", function() {
        return __WEBPACK_IMPORTED_MODULE_10__GiftCardSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_11__HeaderSection__ = __webpack_require__(36);
    __webpack_require__.d(__webpack_exports__, "HeaderSection", function() {
        return __WEBPACK_IMPORTED_MODULE_11__HeaderSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_12__ImageWithTextBlockSection__ = __webpack_require__(37);
    __webpack_require__.d(__webpack_exports__, "ImageWithTextBlockSection", function() {
        return __WEBPACK_IMPORTED_MODULE_12__ImageWithTextBlockSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_13__InstagramSection__ = __webpack_require__(38);
    __webpack_require__.d(__webpack_exports__, "InstagramSection", function() {
        return __WEBPACK_IMPORTED_MODULE_13__InstagramSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_14__LoginSection__ = __webpack_require__(39);
    __webpack_require__.d(__webpack_exports__, "LoginSection", function() {
        return __WEBPACK_IMPORTED_MODULE_14__LoginSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_15__MapSection__ = __webpack_require__(40);
    __webpack_require__.d(__webpack_exports__, "MapSection", function() {
        return __WEBPACK_IMPORTED_MODULE_15__MapSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_16__NewsletterPopupSection__ = __webpack_require__(41);
    __webpack_require__.d(__webpack_exports__, "NewsletterPopupSection", function() {
        return __WEBPACK_IMPORTED_MODULE_16__NewsletterPopupSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_17__ProductSection__ = __webpack_require__(42);
    __webpack_require__.d(__webpack_exports__, "ProductSection", function() {
        return __WEBPACK_IMPORTED_MODULE_17__ProductSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_18__RecentlyViewedProductsSection__ = __webpack_require__(43);
    __webpack_require__.d(__webpack_exports__, "RecentlyViewedProductsSection", function() {
        return __WEBPACK_IMPORTED_MODULE_18__RecentlyViewedProductsSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_19__RelatedProductsSection__ = __webpack_require__(44);
    __webpack_require__.d(__webpack_exports__, "RelatedProductsSection", function() {
        return __WEBPACK_IMPORTED_MODULE_19__RelatedProductsSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_20__SectionContainer__ = __webpack_require__(46);
    __webpack_require__.d(__webpack_exports__, "SectionContainer", function() {
        return __WEBPACK_IMPORTED_MODULE_20__SectionContainer__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_21__SearchSection__ = __webpack_require__(45);
    __webpack_require__.d(__webpack_exports__, "SearchSection", function() {
        return __WEBPACK_IMPORTED_MODULE_21__SearchSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_22__ShopNowSection__ = __webpack_require__(47);
    __webpack_require__.d(__webpack_exports__, "ShopNowSection", function() {
        return __WEBPACK_IMPORTED_MODULE_22__ShopNowSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_23__ShopTheLookSection__ = __webpack_require__(48);
    __webpack_require__.d(__webpack_exports__, "ShopTheLookSection", function() {
        return __WEBPACK_IMPORTED_MODULE_23__ShopTheLookSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_24__SidebarMenuSection__ = __webpack_require__(49);
    __webpack_require__.d(__webpack_exports__, "SidebarMenuSection", function() {
        return __WEBPACK_IMPORTED_MODULE_24__SidebarMenuSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_25__SlideshowSection__ = __webpack_require__(50);
    __webpack_require__.d(__webpack_exports__, "SlideshowSection", function() {
        return __WEBPACK_IMPORTED_MODULE_25__SlideshowSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_26__TestimonialsSection__ = __webpack_require__(51);
    __webpack_require__.d(__webpack_exports__, "TestimonialsSection", function() {
        return __WEBPACK_IMPORTED_MODULE_26__TestimonialsSection__["default"]
    });
    var __WEBPACK_IMPORTED_MODULE_27__TimelineSection__ = __webpack_require__(52);
    __webpack_require__.d(__webpack_exports__, "TimelineSection", function() {
        return __WEBPACK_IMPORTED_MODULE_27__TimelineSection__["default"]
    })
}
, function(module, exports, __webpack_require__) {
    __webpack_require__(3);
    __webpack_require__(7);
    __webpack_require__(5);
    __webpack_require__(0);
    __webpack_require__(10);
    __webpack_require__(2);
    __webpack_require__(6);
    __webpack_require__(1);
    __webpack_require__(19);
    __webpack_require__(12);
    __webpack_require__(8);
    __webpack_require__(20);
    __webpack_require__(21);
    __webpack_require__(13);
    __webpack_require__(22);
    __webpack_require__(9);
    __webpack_require__(14);
    __webpack_require__(4);
    __webpack_require__(15);
    __webpack_require__(11);
    __webpack_require__(17);
    __webpack_require__(23);
    __webpack_require__(18);
    __webpack_require__(16);
    __webpack_require__(24);
    __webpack_require__(25);
    __webpack_require__(26);
    __webpack_require__(27);
    __webpack_require__(28);
    __webpack_require__(29);
    __webpack_require__(30);
    __webpack_require__(31);
    __webpack_require__(32);
    __webpack_require__(33);
    __webpack_require__(34);
    __webpack_require__(35);
    __webpack_require__(36);
    __webpack_require__(37);
    __webpack_require__(38);
    __webpack_require__(39);
    __webpack_require__(40);
    __webpack_require__(41);
    __webpack_require__(42);
    __webpack_require__(43);
    __webpack_require__(44);
    __webpack_require__(45);
    __webpack_require__(46);
    __webpack_require__(47);
    __webpack_require__(48);
    __webpack_require__(49);
    __webpack_require__(50);
    __webpack_require__(51);
    __webpack_require__(52);
    __webpack_require__(53);
    module.exports = __webpack_require__(55)
}
, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", {
        value: !0
    });
    var __WEBPACK_IMPORTED_MODULE_0__components__ = __webpack_require__(24);
    var __WEBPACK_IMPORTED_MODULE_1__helper__ = __webpack_require__(6);
    var __WEBPACK_IMPORTED_MODULE_2__sections__ = __webpack_require__(53);
    (function() {
        new __WEBPACK_IMPORTED_MODULE_0__components__.Collapsible();
        new __WEBPACK_IMPORTED_MODULE_0__components__.Modal();
        new __WEBPACK_IMPORTED_MODULE_1__helper__.ResponsiveHelper();
        if (window.theme.template !== 'password' && window.theme.template !== 'gift_card') {
            new __WEBPACK_IMPORTED_MODULE_0__components__.LoadingBar()
        }
        var sections = new __WEBPACK_IMPORTED_MODULE_2__sections__.SectionContainer();
        sections.register('header', __WEBPACK_IMPORTED_MODULE_2__sections__.HeaderSection);
        sections.register('sidebar-menu', __WEBPACK_IMPORTED_MODULE_2__sections__.SidebarMenuSection);
        sections.register('cart', __WEBPACK_IMPORTED_MODULE_2__sections__.CartSection);
        sections.register('newsletter-popup', __WEBPACK_IMPORTED_MODULE_2__sections__.NewsletterPopupSection);
        sections.register('slideshow', __WEBPACK_IMPORTED_MODULE_2__sections__.SlideshowSection);
        sections.register('collection-list', __WEBPACK_IMPORTED_MODULE_2__sections__.CollectionListSection);
        sections.register('article-list', __WEBPACK_IMPORTED_MODULE_2__sections__.ArticleListSection);
        sections.register('featured-product', __WEBPACK_IMPORTED_MODULE_2__sections__.FeaturedProductSection);
        sections.register('image-with-text-block', __WEBPACK_IMPORTED_MODULE_2__sections__.ImageWithTextBlockSection);
        sections.register('timeline', __WEBPACK_IMPORTED_MODULE_2__sections__.TimelineSection);
        sections.register('instagram', __WEBPACK_IMPORTED_MODULE_2__sections__.InstagramSection);
        sections.register('map', __WEBPACK_IMPORTED_MODULE_2__sections__.MapSection);
        sections.register('featured-collections', __WEBPACK_IMPORTED_MODULE_2__sections__.FeaturedCollectionsSection);
        sections.register('shop-the-look', __WEBPACK_IMPORTED_MODULE_2__sections__.ShopTheLookSection);
        sections.register('testimonials', __WEBPACK_IMPORTED_MODULE_2__sections__.TestimonialsSection);
        sections.register('background-video', __WEBPACK_IMPORTED_MODULE_2__sections__.BackgroundVideoSection);
        sections.register('product', __WEBPACK_IMPORTED_MODULE_2__sections__.ProductSection);
        sections.register('related-products', __WEBPACK_IMPORTED_MODULE_2__sections__.RelatedProductsSection);
        sections.register('collection', __WEBPACK_IMPORTED_MODULE_2__sections__.CollectionSection);
        sections.register('article-list', __WEBPACK_IMPORTED_MODULE_2__sections__.ArticleListSection);
        sections.register('article', __WEBPACK_IMPORTED_MODULE_2__sections__.ArticleSection);
        sections.register('faq', __WEBPACK_IMPORTED_MODULE_2__sections__.FaqSection);
        sections.register('login', __WEBPACK_IMPORTED_MODULE_2__sections__.LoginSection);
        sections.register('addresses', __WEBPACK_IMPORTED_MODULE_2__sections__.AddressesSection);
        sections.register('gift-card', __WEBPACK_IMPORTED_MODULE_2__sections__.GiftCardSection);
        sections.register('search', __WEBPACK_IMPORTED_MODULE_2__sections__.SearchSection);
        sections.register('recently-viewed-products', __WEBPACK_IMPORTED_MODULE_2__sections__.RecentlyViewedProductsSection);
        sections.register('shop-now', __WEBPACK_IMPORTED_MODULE_2__sections__.ShopNowSection);
        (function() {
            if (window.theme.currencyConversionEnabled) {
                var shopCurrency = window.theme.shopCurrency
                  , currencySelectors = __WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.CurrencySelector__Select'));
                var currencyHasChanged = function currencyHasChanged(event) {
                    var newCurrency = event.target.value;
                    currencySelectors.forEach(function(currencySelectorToUpdate) {
                        currencySelectorToUpdate.value = newCurrency
                    });
                    __WEBPACK_IMPORTED_MODULE_1__helper__.CurrencyHelper.convertAll()
                };
                currencySelectors.forEach(function(currencySelector) {
                    currencySelector.addEventListener('change', currencyHasChanged)
                });
                currencySelectors.forEach(function(currencySelector) {
                    currencySelector.addEventListener('click', currencyHasChanged)
                });
                var currentCurrency = shopCurrency;
                try {
                    currentCurrency = localStorage.getItem('currency') || shopCurrency
                } catch (exception) {
                    currentCurrency = shopCurrency
                }
                if (currentCurrency !== shopCurrency) {
                    currencySelectors.forEach(function(currencySelector) {
                        currencySelector.value = currentCurrency
                    });
                    __WEBPACK_IMPORTED_MODULE_1__helper__.CurrencyHelper.convertAll()
                }
            }
        }
        )();
        (function() {
            __WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Rte table')).forEach(function(table) {
                table.outerHTML = '<div class="TableWrapper">' + table.outerHTML + '</div>'
            });
            __WEBPACK_IMPORTED_MODULE_1__helper__.DomHelper.nodeListToArray(document.querySelectorAll('.Rte iframe')).forEach(function(iframe) {
                iframe.outerHTML = '<div class="VideoWrapper">' + iframe.outerHTML + '</div>';
                iframe.src = iframe.src
            })
        }
        )();
        (function() {
            var documentDelegate = new domDelegate.Delegate(document.body)
              , announcementBar = document.querySelector('.AnnouncementBar');
            documentDelegate.on('click', '[href^="#"], [data-href]', function(event, target) {
                var selector = target.hasAttribute('href') ? target.getAttribute('href') : target.getAttribute('data-href');
                if (selector === '#') {
                    return
                }
                var element = document.querySelector(selector)
                  , offset = parseInt(target.getAttribute('data-offset') || 0);
                if (announcementBar) {
                    offset -= announcementBar.clientHeight
                }
                window.scrollTo({
                    behavior: 'smooth',
                    top: element.offsetTop - offset
                });
                event.preventDefault()
            })
        }
        )();
        (function() {
            var windowWidth = window.innerWidth
              , headerSection = document.getElementById('shopify-section-header');
            window.addEventListener('resize', function() {
                var newWidth = -1;
                fastdom.measure(function() {
                    newWidth = window.innerWidth
                });
                fastdom.mutate(function() {
                    if (newWidth === windowWidth) {
                        return
                    }
                    windowWidth = newWidth;
                    document.documentElement.style.setProperty('--window-height', window.innerHeight + 'px');
                    if (headerSection) {
                        document.documentElement.style.setProperty('--header-height', headerSection.clientHeight + 'px')
                    }
                })
            })
        }
        )();
        (function() {
            function handleFirstTab(event) {
                if (event.keyCode === 9) {
                    document.body.classList.add('is-tabbing');
                    window.removeEventListener('keydown', handleFirstTab)
                }
            }
            window.addEventListener('keydown', handleFirstTab)
        }
        )();
        __WEBPACK_IMPORTED_MODULE_0__components__.PageTransition.getInstance()
    }
    )()
}
])
